name: Build Python to EXE

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    # Langkah 1: Checkout kode
    - name: Checkout code
      uses: actions/checkout@v3

    # Langkah 2: Setup Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.10

    # Langkah 3: Cache pip dependencies
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-python-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-python-

    # Langkah 4: Cache dist folder
    - name: Cache build results (dist folder)
      uses: actions/cache@v3
      with:
        path: dist
        key: build-${{ hashFiles('**/*.py') }}  # Cache berdasarkan perubahan file Python
        restore-keys: |
          build-

    # Langkah 5: Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller

    # Langkah 6: Temukan file Python terbaru menggunakan PowerShell
    - name: Find the latest Python script
      id: find_latest
      run: |
        $latest_file = Get-ChildItem -Recurse -Filter "*.py" | Sort-Object LastWriteTime -Descending | Select-Object -First 1
        echo "Latest Python script: $($latest_file.FullName)"
        echo "::set-output name=script::$($latest_file.FullName)"

    # Langkah 7: Build EXE dengan PyInstaller
    - name: Build EXE
      run: |
        pyinstaller --onefile --distpath dist --workpath build --specpath spec ${{ steps.find_latest.outputs.script }}

    # Langkah 8: Upload EXE sebagai artifact
    - name: Upload EXE as artifact
      uses: actions/upload-artifact@v3
      with:
        name: exe-file
        path: dist/*.exe
