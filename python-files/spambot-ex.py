# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMainWindow, QListWidgetItem
from PyQt5.Qt import Qt
from PyQt5.QtCore import QTimer
from PyQt5.QtGui import QBrush, QColor
from pywitch import PyWitchTMI, PyWitchRedemptions, PyWitchStreamInfo, PyWitchHeat, run_forever 
import threading, socket, time, re, random
from websocket import create_connection
import unicodedata
random.seed(time.time())

class MyLineEdit(QtWidgets.QLineEdit):
    pass

class bot:
    def __init__(self, nick, token, channel):
        self.tm = PyWitchTMI(channel, token)
        self.tm.start()
    def send(self, message):
        self.message = message
        self.tm.send(message)   

def runbot(nick, token, channel, value):
    bt = bot(nick, token, channel, value)

class Ui_MainWindow(QMainWindow):
    tokenlist = []
    fulllist = []
    botlist = []
    allow = True
    destroy = False
    def __init__(self):
        super(Ui_MainWindow, self).__init__()
        # self.setupUi()

    def setupUi(self):
        self.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget()
        self.centralwidget.setObjectName("centralwidget")
        self.botsWindow = QtWidgets.QListWidget(self.centralwidget)
        self.botsWindow.setGeometry(QtCore.QRect(10, 10, 201, 321))
        self.botsWindow.setObjectName("botsWindow")
        self.messagelist = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.messagelist.setGeometry(QtCore.QRect(13, 340, 291, 211))
        self.messagelist.setObjectName("messagelist")
        self.gridLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(219, 9, 571, 151))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.connectall = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.connectall.setObjectName("connectall")
        self.gridLayout.addWidget(self.connectall, 1, 0, 1, 1)
        self.channel = QtWidgets.QLineEdit(self.gridLayoutWidget)
        self.channel.setObjectName("channel")
        self.gridLayout.addWidget(self.channel, 0, 0, 1, 2)
        self.connectnumber = QtWidgets.QSpinBox(self.gridLayoutWidget)
        self.connectnumber.setObjectName("connectnumber")
        self.gridLayout.addWidget(self.connectnumber, 1, 1, 1, 1)
        self.loadbots = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.loadbots.setObjectName("loadbots")
        self.gridLayout.addWidget(self.loadbots, 2, 0, 1, 2)
        self.gridLayoutWidget_2 = QtWidgets.QWidget(self.centralwidget)
        self.gridLayoutWidget_2.setGeometry(QtCore.QRect(220, 170, 571, 169))
        self.gridLayoutWidget_2.setObjectName("gridLayoutWidget_2")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.gridLayoutWidget_2)
        self.gridLayout_2.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.token = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.token.setObjectName("token")
        self.gridLayout_2.addWidget(self.token, 1, 0, 1, 1)
        self.disconnect = QtWidgets.QPushButton(self.gridLayoutWidget_2)
        self.disconnect.setObjectName("disconnect")
        self.gridLayout_2.addWidget(self.disconnect, 3, 1, 1, 1)
        self.status = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.status.setObjectName("status")
        self.gridLayout_2.addWidget(self.status, 2, 0, 1, 1)
        self.botname = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.botname.setObjectName("botname")
        self.gridLayout_2.addWidget(self.botname, 0, 1, 1, 2)
        self.connect = QtWidgets.QPushButton(self.gridLayoutWidget_2)
        self.connect.setObjectName("connect")
        self.gridLayout_2.addWidget(self.connect, 3, 0, 1, 1)
        self.botstatus = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.botstatus.setObjectName("botstatus")
        self.gridLayout_2.addWidget(self.botstatus, 2, 1, 1, 2)
        self.sendmessage = QtWidgets.QPushButton(self.gridLayoutWidget_2)
        self.sendmessage.setObjectName("sendmessage")
        self.gridLayout_2.addWidget(self.sendmessage, 3, 2, 1, 1)
        self.bottoken = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.bottoken.setObjectName("bottoken")
        self.gridLayout_2.addWidget(self.bottoken, 1, 1, 1, 2)
        self.name = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.name.setObjectName("name")
        self.gridLayout_2.addWidget(self.name, 0, 0, 1, 1)
        self.custommessage = QtWidgets.QLineEdit(self.gridLayoutWidget_2)
        self.custommessage.setObjectName("custommessage")
        self.gridLayout_2.addWidget(self.custommessage, 4, 0, 1, 3)
        self.gridLayoutWidget_3 = QtWidgets.QWidget(self.centralwidget)
        self.gridLayoutWidget_3.setGeometry(QtCore.QRect(310, 350, 160, 191))
        self.gridLayoutWidget_3.setObjectName("gridLayoutWidget_3")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.gridLayoutWidget_3)
        self.gridLayout_3.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.startspam = QtWidgets.QPushButton(self.gridLayoutWidget_3)
        self.startspam.setObjectName("startspam")
        self.gridLayout_3.addWidget(self.startspam, 1, 0, 1, 2)
        self.loadtext = QtWidgets.QPushButton(self.gridLayoutWidget_3)
        self.loadtext.setObjectName("loadtext")
        self.gridLayout_3.addWidget(self.loadtext, 0, 0, 1, 2)
        self.savetext = QtWidgets.QPushButton(self.gridLayoutWidget_3)
        self.savetext.setObjectName("savetext")
        self.gridLayout_3.addWidget(self.savetext, 4, 0, 1, 2)
        self.randombox = QtWidgets.QCheckBox(self.gridLayoutWidget_3)
        self.randombox.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.randombox.setObjectName("randombox")
        self.gridLayout_3.addWidget(self.randombox, 3, 0, 1, 2)
        self.stopspam = QtWidgets.QPushButton(self.gridLayoutWidget_3)
        self.stopspam.setObjectName("stopspam")
        self.gridLayout_3.addWidget(self.stopspam, 2, 0, 1, 2)
        self.gridLayoutWidget_4 = QtWidgets.QWidget(self.centralwidget)
        self.gridLayoutWidget_4.setGeometry(QtCore.QRect(500, 350, 291, 191))
        self.gridLayoutWidget_4.setObjectName("gridLayoutWidget_4")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.gridLayoutWidget_4)
        self.gridLayout_4.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.timeoutdelay = QtWidgets.QSpinBox(self.gridLayoutWidget_4)
        self.timeoutdelay.setAlignment(QtCore.Qt.AlignCenter)
        self.timeoutdelay.setObjectName("timeoutdelay")
        self.gridLayout_4.addWidget(self.timeoutdelay, 0, 1, 1, 1)
        self.timeout = QtWidgets.QLabel(self.gridLayoutWidget_4)
        self.timeout.setAlignment(QtCore.Qt.AlignCenter)
        self.timeout.setObjectName("timeout")
        self.gridLayout_4.addWidget(self.timeout, 0, 0, 1, 1)
        self.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(self)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 22))
        self.menubar.setObjectName("menubar")
        self.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(self)
        self.statusbar.setObjectName("statusbar")
        self.setStatusBar(self.statusbar)
        self.savetext.clicked.connect(self.savingtext)
        self.loadtext.clicked.connect(self.loadingtext)
        self.botsWindow.itemClicked.connect(self.botSelected)
        self.connectall.clicked.connect(self.botconnectsall)
        self.loadbots.clicked.connect(self.loadBots)
        self.connect.clicked.connect(self.botconnect)
        self.sendmessage.clicked.connect(self.botsend)
        self.startspam.clicked.connect(self.spam)
        self.stopspam.clicked.connect(self.stopspambt)
        self.custommessage.returnPressed.connect(self.botsend)
        self.retranslateUi(self)
        QtCore.QMetaObject.connectSlotsByName(self)
        

    def loadingtext(self):
        self.messagelist.clear()
        self.list = []
        with open("save.txt", "r", encoding="utf-8") as f:
            for line in f:
                self.line = line.rstrip()
                self.messagelist.appendPlainText(self.line)  

    def savingtext(self):
        with open("save.txt", "w+", encoding='utf-8') as f:
            f.writelines(self.messagelist.toPlainText())

    def botSelected(self):
        self.text = self.botsWindow.currentItem().text()
        self.index = self.botsWindow.currentRow()
        self.botname.setText(self.text)
        self.bottoken.setText(self.tokenlist[self.index])
        if not self.botlist:
            self.botstatus.setText("not connected")
        if (self.botlist):
            for item in self.botlist:
                self.botstatus.setText("not connected") 
                if (item[0] == self.botsWindow.currentRow()):
                    print(f"currentrow: {self.botsWindow.currentRow()} and in list : {item[0]}")
                    self.botstatus.setText("connected")   
                    break

    def botsend(self):
        self.currIndex = self.botsWindow.currentRow()
        self.obj = None
        self.index = 0
        for item in self.botlist:
            if (item[0] == self.botsWindow.currentRow()):
                self.obj = item[1]
                self.index = item[0]
                break
        if self.obj != None:
            print(f"it's number : {self.index} and obj: {self.obj}")
            self.obj.send(self.custommessage.text())  
            self.custommessage.clear()  

    def botconnectsall(self):
            self.current_index = 0
            self.botlist = []
            self.botstatus.setText("Connecting bots...")
            self.connectNextBot()

    def connectNextBot(self):
        if self.current_index < self.connectnumber.value():
            bot_data = self.fulllist[self.current_index]
            bot_instance = bot(bot_data[0], bot_data[1], self.channel.text())
            self.botsWindow.item(self.current_index).setBackground(QBrush(QColor("green")))
            self.botlist.append((self.current_index, bot_instance))
            self.current_index += 1

            # Schedule the next bot connection
            QTimer.singleShot(100, self.connectNextBot)  # 100 ms delay between each bot connection
        else:
            self.botstatus.setText("All bots connected")

    def slp(self, milliseconds):
        self.time = time.time()
        self.endtime = self.time + milliseconds
        while (self.time < self.endtime):
            self.time = time.time()
            if self.destroy: return
            time.sleep(0.01)

    def spamEx(self):
        self.list = []
        for i in range(self.messagelist.blockCount()):
            self.list.append(self.messagelist.document().findBlockByLineNumber(i).text())
            #print(self.messagelist.document().findBlockByLineNumber(i).text())
           
        if (self.list):
            random.shuffle(self.list) 
            for item in self.list:
                if (self.destroy): 
                    print('exit')
                    return
                self.itemtext = item
                #print(self.itemtext)
                self.randi = random.randint(0, self.connectnumber.value())
                print(self.randi)
                for item in self.botlist:
                    if (item[0] == self.randi):
                        self.obj = item[1]
                        self.index = item[0]
                        break
                if self.obj != None:
                    print(f"it's number : {self.index} and obj: {self.obj} it's name : {self.itemtext}")
                    self.obj.send(self.itemtext) 
                self.slp(self.timeoutdelay.value())  

    def spam(self):
        self.destroy = False
        t1 = threading.Thread(target = self.spamEx, daemon = True)
        t1.start()

    def stopspambt(self):
        self.destroy = True


    def botconnect(self):
        if (self.botlist):
            for item in self.botlist:
                self.botstatus.setText("not connected") 
                if (item[0] == self.botsWindow.currentRow()):
                    self.botstatus.setText("connected")
                    self.allow = False
                    break        
        if (self.allow):      
            self.bt = bot(self.botname.text(), self.bottoken.text(), self.channel.text())
            self.list = []
            self.list.append(self.botsWindow.currentRow())
            self.botsWindow.item(self.botsWindow.currentRow()).setBackground(QBrush(QColor("green")))
            self.list.append(self.bt)
            self.botlist.append(self.list)
            self.botstatus.setText("connected")

    def loadBots(self):
        self.botsWindow.clear()
        self.tokenlist.clear()
        with open("bots.txt") as f:
            for line in f:
                line = line.strip()
                line = line.split(":")
                self.item = QListWidgetItem(line[0])
                self.botsWindow.addItem(self.item)
                self.item.setBackground(QBrush(QColor("red")))
                self.tokenlist.append(line[2])  
                self.list = []
                self.list.append(line[0])
                self.list.append(line[2])
                self.fulllist.append(self.list) 
            self.connectnumber.setValue(len(self.tokenlist))    
                  


    def mousePressEvent(self, event):
        if QtWidgets.QApplication.focusWidget():
            QtWidgets.QApplication.focusWidget().clearFocus()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.connectall.setText(_translate("MainWindow", "connect"))
        self.loadbots.setText(_translate("MainWindow", "load chat-bots"))
        self.token.setText(_translate("MainWindow", "TOKEN"))
        self.disconnect.setText(_translate("MainWindow", "disconnect"))
        self.status.setText(_translate("MainWindow", "STATUS"))
        self.botname.setText(_translate("MainWindow", ""))
        self.connect.setText(_translate("MainWindow", "connect"))
        self.botstatus.setText(_translate("MainWindow", ""))
        self.sendmessage.setText(_translate("MainWindow", "send message"))
        self.randombox.setText(_translate("MainWindow", "RANDOM"))
        self.bottoken.setText(_translate("MainWindow", ""))
        self.name.setText(_translate("MainWindow", "NAME"))
        self.custommessage.setPlaceholderText(_translate("MainWindow", "your custom message"))
        self.startspam.setText(_translate("MainWindow", "start spam"))
        self.stopspam.setText(_translate("MainWindow", "stop spam"))
        self.loadtext.setText(_translate("MainWindow", "load text"))
        self.savetext.setText(_translate("MainWindow", "save text"))

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    ui = Ui_MainWindow()
    ui.setupUi()
    ui.show()
    sys.exit(app.exec_())
