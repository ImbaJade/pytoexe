name: Build Python to EXE

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    # Checkout repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    # Cache PyInstaller Build
    - name: Cache PyInstaller Build
      uses: actions/cache@v3
      with:
        path: |
          dist
          build
          .pytest_cache
          __pycache__
        key: ${{ runner.os }}-pyinstaller-${{ hashFiles('**/*.py') }}
        restore-keys: |
          ${{ runner.os }}-pyinstaller-

    # Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Install PyInstaller
    - name: Install PyInstaller
      run: pip install pyinstaller

    # Build EXE using PyInstaller
    - name: Build EXE
      run: |
        pyinstaller --onefile --distpath dist --workpath build --specpath spec --no-cache-dir D:\a\PyToExe\PyToExe\ReBind.py

    # Check if the EXE file is created
    - name: Verify EXE creation
      run: |
        if exist "dist\ReBind.exe" (
          echo EXE created successfully!
        ) else (
          echo EXE creation failed!
          exit 1
        )

    # Upload the EXE file as an artifact
    - name: Upload EXE artifact
      uses: actions/upload-artifact@v3
      with:
        name: exe-file
        path: dist/*.exe
        if-no-files-found: warn
        include-hidden-files: false


    # Final step to show status
    - name: Final Status
      run: echo "Build and upload completed successfully."
