name: Build Python to EXE

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      branchRef:
        description: 'Branch to deploy'
        required: true
        default: 'main'

jobs:
  build:
    runs-on: windows-latest

    steps:
    # Langkah 1: Checkout kode
    - name: Checkout code
      uses: actions/checkout@v4

    # Langkah 2: Create requirements.txt first
    - name: Create requirements.txt
      run: |
        echo "pyinstaller" > requirements.txt
      shell: powershell

    # Langkah 3: Setup Python - explicitly specify 3.10.x
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    # Langkah 4: Verify Python version
    - name: Verify Python version
      run: |
        python --version
        pip --version
      shell: powershell

    # Langkah 5: Cache pip packages
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    # Langkah 6: Install dependencies directly (no venv)
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      shell: powershell

    # Langkah 7: Cache PyInstaller build files
    - name: Cache PyInstaller build files
      uses: actions/cache@v3
      with:
        path: |
          build
          spec
        key: ${{ runner.os }}-pyinstaller-${{ hashFiles('**/*.py') }}
        restore-keys: |
          ${{ runner.os }}-pyinstaller-

    # Langkah 8: List all Python files for debugging
    - name: List all Python files
      run: |
        echo "Listing all Python files in the repository:"
        Get-ChildItem -Recurse -Filter "*.py" | ForEach-Object { echo $_.FullName }
      shell: powershell

    # Langkah 9: Temukan file Python terbaru menggunakan PowerShell
    - name: Find the latest Python script
      id: find_latest
      run: |
        $python_files = Get-ChildItem -Recurse -Filter "*.py" | Sort-Object LastWriteTime -Descending
        
        if ($python_files.Count -eq 0) {
          echo "No Python files found in the repository!"
          echo "Creating a sample Python file for testing..."
          echo "print('Hello, World!')" > sample.py
          $script_path = "sample.py"
        } else {
          $latest_file = $python_files | Select-Object -First 1
          $script_path = $latest_file.FullName
          echo "Latest Python script: $script_path"
        }
        
        echo "script=$script_path" >> $env:GITHUB_OUTPUT
      shell: powershell

    # Langkah 10: Verify script path
    - name: Verify script path
      run: |
        echo "Script path from previous step: ${{ steps.find_latest.outputs.script }}"
        if (-not "${{ steps.find_latest.outputs.script }}") {
          echo "Script path is empty! This will cause the next step to fail."
        } else {
          echo "Script path is valid."
        }
      shell: powershell

    # Langkah 11: Build EXE dengan PyInstaller
    - name: Build EXE
      run: |
        $script_path="${{ steps.find_latest.outputs.script }}"
        
        if (-not $script_path) {
          echo "Error: Script path is empty!"
          exit 1
        }
        
        echo "Building EXE for script: $script_path"
        $output_dir = Split-Path -Path $script_path
        
        if (-not $output_dir) {
          echo "Using current directory as output directory"
          $output_dir = "."
        }
        
        echo "Output directory: $output_dir"
        pyinstaller --onefile --distpath $output_dir --workpath build --specpath spec $script_path
      shell: powershell

    # Langkah 12: Upload EXE as artifact
    - name: Upload EXE as artifact
      uses: actions/upload-artifact@v4
      with:
        name: exe-file
        path: |
          **/*.exe

    # Langkah 13: Post message with download link
    - name: Post download link
      run: |
        echo "Your file has been uploaded as an artifact."
        echo "You can download it from: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

