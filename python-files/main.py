import os
import subprocess
import shutil
import sys
import winreg
from colorama import init, Fore

# Initialize colorama for colored output
delete_marker = Fore.GREEN + "[ DELETE ]: "
init(autoreset=True)

# üö® ‡∏Ç‡∏≠‡∏Ñ‡∏µ‡∏¢‡πå‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
key_input = input(Fore.YELLOW + "[ PLEASE ENTER KEY ] : ")

if key_input.strip() == "BXUN":
    print(Fore.LIGHTGREEN_EX + "The key is correct.")
else:
    print(Fore.RED + "Wrong key!")
    sys.exit(1)  # ‡∏à‡∏ö‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏ó‡∏±‡∏ô‡∏ó‡∏µ

def delete_with_log(path):
    """
    Delete a file or directory at the specified path and log the action.
    """
    if os.path.exists(path):
        try:
            if os.path.isfile(path):
                os.remove(path)
            else:
                shutil.rmtree(path, ignore_errors=True)
            print(delete_marker + path)
        except Exception as e:
            print(f"Failed to delete {path}: {e}")

def delete_registry_key(root, sub_key):
    """
    Delete a registry key and its subkeys, and log the action.
    """
    try:
        with winreg.OpenKey(root, sub_key, 0, winreg.KEY_ALL_ACCESS) as key:
            # Delete all subkeys first
            while True:
                try:
                    subkey_name = winreg.EnumKey(key, 0)
                    winreg.DeleteKey(key, subkey_name)
                    print(delete_marker + f"{sub_key}\\{subkey_name}")
                except OSError:
                    break
        # Delete the main key
        winreg.DeleteKey(root, sub_key)
        print(delete_marker + f"{sub_key}")
    except FileNotFoundError:
        print(f"{sub_key} not found (already clean)")
    except Exception as e:
        print(f"Failed to delete {sub_key}: {e}")

# 1Ô∏è‚É£ Clear Recycle Bin
subprocess.call('PowerShell.exe Clear-RecycleBin -Force', shell=True)
print(delete_marker + "Recycle Bin")

# 2Ô∏è‚É£ Clear Temp directories (both user and system-wide)
delete_with_log(os.environ['TEMP'])
delete_with_log(r'C:\Windows\Temp')

# 3Ô∏è‚É£ Clear Recent Files
delete_with_log(os.path.join(os.environ['APPDATA'], 'Microsoft\\Windows\\Recent'))

# 4Ô∏è‚É£ Clear Run History
try:
    with winreg.OpenKey(winreg.HKEY_CURRENT_USER,
                        r'Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\RunMRU',
                        0, winreg.KEY_ALL_ACCESS):
        winreg.DeleteKey(winreg.HKEY_CURRENT_USER,
                         r'Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\RunMRU')
    print(delete_marker + "Run History")
except Exception as e:
    print(f"Failed to clear Run History: {e}")

# ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°: Clear Registry keys ‡∏ï‡∏≤‡∏°‡∏•‡∏¥‡∏™‡∏ï‡πå
registry_tasks = [
    # AppCompatFlags
    (winreg.HKEY_CURRENT_USER, r'Software\Microsoft\Windows\CurrentVersion\AppCompatFlags\Compatibility Assistant\Store'),
    (winreg.HKEY_CURRENT_USER, r'Software\Microsoft\Windows\CurrentVersion\AppCompatFlags\Compatibility Assistant\Persisted'),
    # MuiCache
    (winreg.HKEY_CURRENT_USER, r'Software\Classes\Local Settings\Software\Microsoft\Windows\Shell\MuiCache'),
    # RunMRU (‡∏ã‡πâ‡∏≥ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏±‡∏ß‡∏£‡πå)
    (winreg.HKEY_CURRENT_USER, r'Software\Microsoft\Windows\CurrentVersion\Explorer\RunMRU'),
    # ComDlg32
    (winreg.HKEY_CURRENT_USER, r'Software\Microsoft\Windows\CurrentVersion\Explorer\ComDlg32'),
    # FeatureUsage\AppSwitched
    (winreg.HKEY_CURRENT_USER, r'Software\Microsoft\Windows\CurrentVersion\Explorer\FeatureUsage\AppSwitched'),
    # FeatureUsage\ShowJumpView
    (winreg.HKEY_CURRENT_USER, r'Software\Microsoft\Windows\CurrentVersion\Explorer\FeatureUsage\ShowJumpView'),
    # FileExts
    (winreg.HKEY_CURRENT_USER, r'Software\Microsoft\Windows\CurrentVersion\Explorer\FileExts'),
    # TypedPaths
    (winreg.HKEY_CURRENT_USER, r'Software\Microsoft\Windows\CurrentVersion\Explorer\TypedPaths'),
    # RecentApps
    (winreg.HKEY_CURRENT_USER, r'Software\Microsoft\Windows\CurrentVersion\Search\RecentApps'),
    # MountPoints2
    (winreg.HKEY_CURRENT_USER, r'Software\Microsoft\Windows\CurrentVersion\Explorer\MountPoints2'),
    # RecentDocs
    (winreg.HKEY_CURRENT_USER, r'Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs'),
    # BAM/DAM (HKEY_LOCAL_MACHINE)
    (winreg.HKEY_LOCAL_MACHINE, r'SYSTEM\CurrentControlSet\Services\bam\UserSettings'),
]

for root, key in registry_tasks:
    delete_registry_key(root, key)

# 5Ô∏è‚É£ Clear Open/Save dialog history
delete_with_log(os.path.join(os.environ['APPDATA'], 'Microsoft\\Windows\\Recent'))

# 6Ô∏è‚É£ Clear Prefetch Files
delete_with_log(r'C:\Windows\\Prefetch')

# 7Ô∏è‚É£ Flush DNS Cache
subprocess.call('ipconfig /flushdns', shell=True)
print(delete_marker + "DNS Cache")

# 8Ô∏è‚É£ Clear all Event Logs
logs = subprocess.check_output('wevtutil el', shell=True).decode(errors='ignore').splitlines()
for log in logs:
    try:
        subprocess.call(f'wevtutil cl "{log}"', shell=True)
        print(delete_marker + log)
    except Exception as e:
        print(f"Failed to clear log {log}: {e}")

# 9Ô∏è‚É£ Clear Windows Search Index history
delete_with_log(os.path.join(os.environ['LOCALAPPDATA'],
                             r'Microsoft\\Windows\\Search\\Data\\Applications\\Windows'))

# üîü Clear Windows Error Reporting (crash reports)
delete_with_log(r'C:\ProgramData\\Microsoft\\Windows\\WER')

# 11Ô∏è‚É£ Reminder to securely wipe free space
print(Fore.YELLOW + "\n‚ö†Ô∏è ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥: ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏•‡∏ö‡πÅ‡∏•‡πâ‡∏ß ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÉ‡∏ô CMD ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ó‡∏±‡∏ö‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡∏á:")
print(Fore.CYAN + "cipher /w:C")
print(Fore.YELLOW + "(‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô C: ‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏î‡∏£‡∏ü‡πå‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏Ñ‡∏¢‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ü‡∏•‡πå)")
print(Fore.GREEN + "\n‚úÖ ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!")
