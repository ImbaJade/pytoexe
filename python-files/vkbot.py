import vk_api
import telegram
import asyncio
import time
from vk_api.exceptions import ApiError
from datetime import datetime

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
VK_TOKEN = 'vk1.a.wZE4naZ1Qs7i-NNHqEKnQGaxUq7b8dD8ttD7DduqleTyWGXRJwR-A88qXQT6C9WaLazPsq4wsTANp67T6CqjyJ6JWIKJz0238498ErE_Yi2dEQ4w4WQ9ZZZjROaLdMHf-qYiLyxpP9SORQyUNCWSuksmklwJTdVIBAoLK4IMzlu8eU43Rx7B5_AH7emI4h10aT5v1aqErCf2LgzD15gvpA'  # –í–∞—à —Ç–æ–∫–µ–Ω
GROUP_ID = -207203501  # ID –≥—Ä—É–ø–ø—ã –í–ö
TARGET_USER_ID = 715493925  # –í–∞—à ID (–ï–≤–≥–µ–Ω–∏—è –ì–æ–ª—É–±–æ–≤–∞)
TELEGRAM_TOKEN = '7391360173:AAGeymKY6QXZ5mRksuNQ0DPQuFqEuenrbAk'  # –¢–æ–∫–µ–Ω Telegram-–±–æ—Ç–∞
TELEGRAM_CHAT_ID = '5092781395'  # –í—Å—Ç–∞–≤—å—Ç–µ ID —á–∞—Ç–∞ Telegram
CHECK_INTERVAL = 30  # –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (5 –º–∏–Ω—É—Ç)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è API
vk_session = vk_api.VkApi(token=VK_TOKEN)
vk = vk_session.get_api()
telegram_bot = telegram.Bot(token=TELEGRAM_TOKEN)

def format_attachments(attachments):
    if not attachments:
        return "–ù–µ—Ç –≤–ª–æ–∂–µ–Ω–∏–π"
    attachment_info = []
    for attachment in attachments:
        if attachment['type'] == 'photo':
            photo = attachment['photo']
            largest_photo = max(photo['sizes'], key=lambda s: s['width'])
            attachment_info.append(f"–§–æ—Ç–æ: {largest_photo['url']}")
        elif attachment['type'] == 'video':
            video = attachment['video']
            attachment_info.append(f"–í–∏–¥–µ–æ: {video.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}")
        elif attachment['type'] == 'link':
            link = attachment['link']
            attachment_info.append(f"–°—Å—ã–ª–∫–∞: {link.get('url', '–ù–µ—Ç URL')}")
        else:
            attachment_info.append(f"–í–ª–æ–∂–µ–Ω–∏–µ ({attachment['type']}): {attachment.get('id', '–ù–µ—Ç ID')}")
    return "\n".join(attachment_info)

async def send_group_info():
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥—Ä—É–ø–ø–µ
        group_info = vk.groups.getById(group_id=abs(GROUP_ID), fields='description,members_count')[0]
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        group_name = group_info.get('name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')
        group_id = group_info.get('id', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')
        members_count = group_info.get('members_count', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')
        description = group_info.get('description', '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è')
        group_url = f"https://vk.com/club{group_id}"
        
        # –ò—â–µ–º –∞–≤–∞—Ç–∞—Ä–∫—É –≥—Ä—É–ø–ø—ã
        photo_url = None
        if 'photo_200' in group_info:
            photo_url = group_info['photo_200']

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        message = (
            f"üè† –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥—Ä—É–ø–ø–µ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ:\n"
            f"üìõ –ù–∞–∑–≤–∞–Ω–∏–µ: {group_name}\n"
            f"üÜî ID: {group_id}\n"
            f"üë• –ü–æ–¥–ø–∏—Å—á–∏–∫–æ–≤: {members_count}\n"
            f"üìù –û–ø–∏—Å–∞–Ω–∏–µ: {description[:200] + '...' if len(description) > 200 else description}\n"
            f"üîó –°—Å—ã–ª–∫–∞: {group_url}\n"
            f"‚è∞ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}"
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ç–æ (–µ—Å–ª–∏ –µ—Å—Ç—å)
        if photo_url:
            await telegram_bot.send_photo(
                chat_id=TELEGRAM_CHAT_ID,
                photo=photo_url,
                caption=message
            )
        else:
            await telegram_bot.send_message(
                chat_id=TELEGRAM_CHAT_ID,
                text=message
            )

    except ApiError as e:
        error_msg = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≥—Ä—É–ø–ø–µ: {str(e)}"
        print(error_msg)
        await telegram_bot.send_message(
            chat_id=TELEGRAM_CHAT_ID,
            text=f"‚ö†Ô∏è {error_msg}"
        )
    except telegram.error.TelegramError as e:
        error_msg = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≥—Ä—É–ø–ø–µ –≤ Telegram: {str(e)}"
        print(error_msg)
        await telegram_bot.send_message(
            chat_id=TELEGRAM_CHAT_ID,
            text=f"‚ö†Ô∏è {error_msg}"
        )

async def check_and_delete_posts():
    while True:
        try:
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –ø–æ—Å—Ç–æ–≤
            posts = vk.wall.get(owner_id=GROUP_ID, count=10)
            
            for post in posts['items']:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º signer_id, from_id –∏ created_by
                signer_id = post.get('signer_id')
                from_id = post.get('from_id')
                created_by = post.get('created_by')
                post_id = post['id']
                post_text = post.get('text', '')
                post_date = datetime.fromtimestamp(post['date']).strftime('%Y-%m-%d %H:%M:%S')
                attachments = post.get('attachments', [])
                likes = post['likes']['count']
                reposts = post['reposts']['count']
                views = post.get('views', {}).get('count', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')

                # –£—Å–ª–æ–≤–∏–µ —É–¥–∞–ª–µ–Ω–∏—è: –µ—Å–ª–∏ signer_id, from_id –∏–ª–∏ created_by —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –≤–∞—à–∏–º ID
                should_delete = False
                if signer_id == TARGET_USER_ID or from_id == TARGET_USER_ID or created_by == TARGET_USER_ID:
                    should_delete = True
                
                if should_delete:
                    try:
                        # –ò—â–µ–º –ø–µ—Ä–≤–æ–µ —Ñ–æ—Ç–æ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram
                        photo_url = None
                        for attachment in attachments:
                            if attachment['type'] == 'photo':
                                photo = attachment['photo']
                                largest_photo = max(photo['sizes'], key=lambda s: s['width'])
                                photo_url = largest_photo['url']
                                break

                        # –§–æ—Ä–º–∏—Ä—É–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                        message = (
                            f"üîî –û–±–Ω–∞—Ä—É–∂–µ–Ω –∏ —É–¥–∞–ª—ë–Ω –ø–æ—Å—Ç –≤ –≥—Ä—É–ø–ø–µ –í–ö!\n"
                            f"üìú ID –ø–æ—Å—Ç–∞: {post_id}\n"
                            f"üë§ –ê–≤—Ç–æ—Ä: Vlada Zaytseva (ID: {TARGET_USER_ID})\n"
                            f"‚úçÔ∏è –ü–æ–¥–ø–∏—Å–∞–ª: {signer_id or '–Ω–µ—Ç –ø–æ–¥–ø–∏—Å–∏'}\n"
                            f"üñåÔ∏è –°–æ–∑–¥–∞–ª: {created_by or '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'}\n"
                            f"üìù –¢–µ–∫—Å—Ç: {post_text[:200] + '...' if len(post_text) > 200 else post_text}\n"
                            f"üìÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω: {post_date}\n"
                            f"üóëÔ∏è –£–¥–∞–ª—ë–Ω: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n"
                            f"üìé –í–ª–æ–∂–µ–Ω–∏—è:\n{format_attachments(attachments)}\n"
                            f"‚ù§Ô∏è –õ–∞–π–∫–æ–≤: {likes}\n"
                            f"üîÑ –†–µ–ø–æ—Å—Ç–æ–≤: {reposts}\n"
                            f"üëÄ –ü—Ä–æ—Å–º–æ—Ç—Ä–æ–≤: {views}"
                        )

                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏ —Ñ–æ—Ç–æ (–µ—Å–ª–∏ –µ—Å—Ç—å)
                        if photo_url:
                            await telegram_bot.send_photo(
                                chat_id=TELEGRAM_CHAT_ID,
                                photo=photo_url,
                                caption=message
                            )
                        else:
                            await telegram_bot.send_message(
                                chat_id=TELEGRAM_CHAT_ID,
                                text=message
                            )

                        # –£–¥–∞–ª—è–µ–º –ø–æ—Å—Ç –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                        vk.wall.delete(owner_id=GROUP_ID, post_id=post_id)
                        print(f"–£–¥–∞–ª—ë–Ω –ø–æ—Å—Ç {post_id} –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {signer_id or from_id or created_by}")
                        
                    except ApiError as e:
                        error_msg = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ—Å—Ç–∞ {post_id}: {str(e)}"
                        print(error_msg)
                        await telegram_bot.send_message(
                            chat_id=TELEGRAM_CHAT_ID,
                            text=f"‚ö†Ô∏è {error_msg}"
                        )
                    except telegram.error.TelegramError as e:
                        error_msg = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram: {str(e)}"
                        print(error_msg)
                        await telegram_bot.send_message(
                            chat_id=TELEGRAM_CHAT_ID,
                            text=f"‚ö†Ô∏è {error_msg}"
                        )
            
        except ApiError as e:
            error_msg = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ—Å—Ç–æ–≤: {str(e)}"
            print(error_msg)
            await telegram_bot.send_message(
                chat_id=TELEGRAM_CHAT_ID,
                text=f"‚ö†Ô∏è {error_msg}"
            )
        
        # –ñ–¥—ë–º 5 –º–∏–Ω—É—Ç
        await asyncio.sleep(CHECK_INTERVAL)

async def main():
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥—Ä—É–ø–ø–µ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    await send_group_info()
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ü–∏–∫–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Å—Ç–æ–≤
    await check_and_delete_posts()

if __name__ == "__main__":
    asyncio.run(main())
